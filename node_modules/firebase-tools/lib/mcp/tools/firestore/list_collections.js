"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.list_collections = void 0;
const zod_1 = require("zod");
const tool_js_1 = require("../../tool.js");
const util_js_1 = require("../../util.js");
const firestore_js_1 = require("../../../gcp/firestore.js");
const errors_js_1 = require("../../errors.js");
const emulator_js_1 = require("./emulator.js");
exports.list_collections = (0, tool_js_1.tool)({
    name: "list_collections",
    description: "Retrieves a list of collections from a Firestore database in the current project.",
    inputSchema: zod_1.z.object({
        database: zod_1.z
            .string()
            .optional()
            .describe("Database id to use. Defaults to `(default)` if unspecified."),
        use_emulator: zod_1.z.boolean().default(false).describe("Target the Firestore emulator if true."),
    }),
    annotations: {
        title: "List Firestore collections",
        readOnlyHint: true,
    },
    _meta: {
        requiresAuth: true,
        requiresProject: true,
    },
}, async ({ database, use_emulator }, { projectId, host }) => {
    let emulatorUrl;
    if (use_emulator) {
        emulatorUrl = await (0, emulator_js_1.getFirestoreEmulatorUrl)(await host.getEmulatorHubClient());
    }
    if (!projectId)
        return errors_js_1.NO_PROJECT_ERROR;
    return (0, util_js_1.toContent)(await (0, firestore_js_1.listCollectionIds)(projectId, database, emulatorUrl));
});
