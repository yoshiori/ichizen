"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDataConnectEmulatorClient = void 0;
const types_js_1 = require("../../../emulator/types.js");
const apiv2_js_1 = require("../../../apiv2.js");
const dataplaneClient_js_1 = require("../../../dataconnect/dataplaneClient.js");
function formatEndpoint(emulatorInfo) {
    const host = emulatorInfo.host.includes(":") ? `[${emulatorInfo.host}]` : emulatorInfo.host;
    return {
        host: emulatorInfo.host,
        port: emulatorInfo.port,
        url: `http://${host}:${emulatorInfo.port}`,
    };
}
async function getDataConnectEmulatorClient(hubClient) {
    if (!hubClient) {
        throw Error("Emulator Hub not found or is not running. Please ensure the emulator is started, you can start the Data Connect emualtor by running `firebase emulators:start --only dataconnect`.");
    }
    const emulators = await hubClient.getEmulators();
    const dcEmulatorInfo = emulators[types_js_1.Emulators.DATACONNECT];
    if (!dcEmulatorInfo) {
        throw Error("No Data Connect Emulator found running, you can start the emualtor by running `firebase emulators:start --only dataconnect`.");
    }
    const emulatorDetails = formatEndpoint(dcEmulatorInfo);
    const apiClient = new apiv2_js_1.Client({
        urlPrefix: emulatorDetails.url,
        apiVersion: dataplaneClient_js_1.DATACONNECT_API_VERSION,
        auth: false,
    });
    return apiClient;
}
exports.getDataConnectEmulatorClient = getDataConnectEmulatorClient;
