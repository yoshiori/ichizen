{"version":3,"sources":["../src/message-codes.ts","../../../node_modules/@std/bytes/copy.ts","../src/buffer-writer.ts","../src/backend-error.ts","../src/signals.ts","../../../node_modules/@std/bytes/concat.ts","../../../node_modules/@std/crypto/_wasm/lib/deno_std_wasm_crypto.generated.mjs","../../../node_modules/@std/crypto/_wasm/mod.ts","../../../node_modules/@std/crypto/crypto.ts","../../../node_modules/@std/encoding/_validate_binary_like.ts","../../../node_modules/@std/encoding/hex.ts","../src/auth/base-auth-flow.ts","../src/auth/md5.ts","../../../node_modules/@std/encoding/base64.ts","../src/crypto.ts","../src/auth/sasl/sasl-mechanism.ts","../src/auth/sasl/scram-sha-256.ts","../src/connection.types.ts","../src/message-buffer.ts","../src/streams.ts","../src/auth/cert.ts","../src/auth/password.ts","../src/auth/index.ts","../src/buffer-reader.ts","../src/iterable-util.ts","../src/connection.ts"],"sourcesContent":["/**\n * Frontend message codes\n * @see https://www.postgresql.org/docs/current/protocol-message-codes.html\n */\nexport const FrontendMessageCode = {\n  Query: 0x51, // Q\n  Parse: 0x50, // P\n  Bind: 0x42, // B\n  Execute: 0x45, // E\n  FunctionCall: 0x46, // F\n  Flush: 0x48, // H\n  Close: 0x43, // C\n  Describe: 0x44, // D\n  CopyFromChunk: 0x64, // d\n  CopyDone: 0x63, // c\n  CopyData: 0x64, // d\n  CopyFail: 0x66, // f\n  Password: 0x70, // p\n  Sync: 0x53, // S\n  Terminate: 0x58, // X\n} as const;\n\n/**\n * Backend message codes\n * @see https://www.postgresql.org/docs/current/protocol-message-codes.html\n */\nexport const BackendMessageCode = {\n  DataRow: 0x44, // D\n  ParseComplete: 0x31, // 1\n  BindComplete: 0x32, // 2\n  CloseComplete: 0x33, // 3\n  CommandComplete: 0x43, // C\n  ReadyForQuery: 0x5a, // Z\n  NoData: 0x6e, // n\n  NotificationResponse: 0x41, // A\n  AuthenticationResponse: 0x52, // R\n  ParameterStatus: 0x53, // S\n  BackendKeyData: 0x4b, // K\n  ErrorMessage: 0x45, // E\n  NoticeMessage: 0x4e, // N\n  RowDescriptionMessage: 0x54, // T\n  ParameterDescriptionMessage: 0x74, // t\n  PortalSuspended: 0x73, // s\n  ReplicationStart: 0x57, // W\n  EmptyQuery: 0x49, // I\n  CopyIn: 0x47, // G\n  CopyOut: 0x48, // H\n  CopyDone: 0x63, // c\n  CopyData: 0x64, // d\n} as const;\n\nexport function getFrontendMessageName(code: number) {\n  return Object.entries(FrontendMessageCode).find(([_, value]) => value === code)?.[0];\n}\n\nexport function getBackendMessageName(code: number) {\n  return Object.entries(BackendMessageCode).find(([_, value]) => value === code)?.[0];\n}\n","// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// This module is browser compatible.\n\n/**\n * Copy bytes from the source array to the destination array and returns the\n * number of bytes copied.\n *\n * If the source array is larger than what the `dst` array can hold, only the\n * amount of bytes that fit in the `dst` array are copied.\n *\n * @param src Source array to copy from.\n * @param dst Destination array to copy to.\n * @param offset Offset in the destination array to start copying to. Defaults\n * to 0.\n * @returns Number of bytes copied.\n *\n * @example Basic usage\n * ```ts\n * import { copy } from \"@std/bytes/copy\";\n * import { assertEquals } from \"@std/assert\";\n *\n * const src = new Uint8Array([9, 8, 7]);\n * const dst = new Uint8Array([0, 1, 2, 3, 4, 5]);\n *\n * assertEquals(copy(src, dst), 3);\n * assertEquals(dst, new Uint8Array([9, 8, 7, 3, 4, 5]));\n * ```\n *\n * @example Copy with offset\n * ```ts\n * import { copy } from \"@std/bytes/copy\";\n * import { assertEquals } from \"@std/assert\";\n *\n * const src = new Uint8Array([1, 1, 1, 1]);\n * const dst = new Uint8Array([0, 0, 0, 0]);\n *\n * assertEquals(copy(src, dst, 1), 3);\n * assertEquals(dst, new Uint8Array([0, 1, 1, 1]));\n * ```\n * Defining an offset will start copying at the specified index in the\n * destination array.\n */\nexport function copy(src: Uint8Array, dst: Uint8Array, offset = 0): number {\n  offset = Math.max(0, Math.min(offset, dst.byteLength));\n  const dstBytesAvailable = dst.byteLength - offset;\n  if (src.byteLength > dstBytesAvailable) {\n    src = src.subarray(0, dstBytesAvailable);\n  }\n  dst.set(src, offset);\n  return src.byteLength;\n}\n","import { copy } from '@std/bytes/copy';\n\n/**\n * binary data  BufferWriter tuned for encoding binary specific to the postgres binary protocol\n *\n * @see https://github.com/brianc/node-postgres/blob/54eb0fa216aaccd727765641e7d1cf5da2bc483d/packages/pg-protocol/src/buffer- BufferWriter.ts\n */\nexport class BufferWriter {\n  private buffer: Uint8Array;\n  private offset = 5;\n  private headerPosition = 0;\n  private encoder = new TextEncoder();\n\n  constructor(private size = 256) {\n    this.buffer = new Uint8Array(size);\n  }\n\n  private ensure(size: number): void {\n    const remaining = this.buffer.length - this.offset;\n    if (remaining < size) {\n      const oldBuffer = this.buffer;\n      // exponential growth factor of around ~ 1.5\n      // https://stackoverflow.com/questions/2269063/buffer-growth-strategy\n      const newSize = oldBuffer.length + (oldBuffer.length >> 1) + size;\n      this.buffer = new Uint8Array(newSize);\n      copy(oldBuffer, this.buffer);\n    }\n  }\n\n  public addInt32(num: number): BufferWriter {\n    this.ensure(4);\n    this.buffer[this.offset++] = (num >>> 24) & 0xff;\n    this.buffer[this.offset++] = (num >>> 16) & 0xff;\n    this.buffer[this.offset++] = (num >>> 8) & 0xff;\n    this.buffer[this.offset++] = (num >>> 0) & 0xff;\n    return this;\n  }\n\n  public addInt16(num: number): BufferWriter {\n    this.ensure(2);\n    this.buffer[this.offset++] = (num >>> 8) & 0xff;\n    this.buffer[this.offset++] = (num >>> 0) & 0xff;\n    return this;\n  }\n\n  public addCString(string: string): BufferWriter {\n    if (!string) {\n      this.ensure(1);\n    } else {\n      const stringBuffer = this.encoder.encode(string);\n      this.ensure(stringBuffer.byteLength + 1); // +1 for null terminator\n      this.buffer.set(stringBuffer, this.offset);\n      this.offset += stringBuffer.byteLength;\n    }\n\n    this.buffer[this.offset++] = 0; // null terminator\n    return this;\n  }\n\n  public addString(string = ''): BufferWriter {\n    const stringBuffer = this.encoder.encode(string);\n    this.ensure(stringBuffer.byteLength);\n    this.buffer.set(stringBuffer, this.offset);\n    this.offset += stringBuffer.byteLength;\n    return this;\n  }\n\n  public add(otherBuffer: Uint8Array): BufferWriter {\n    this.ensure(otherBuffer.byteLength);\n    copy(otherBuffer, this.buffer, this.offset);\n    this.offset += otherBuffer.length;\n    return this;\n  }\n\n  private join(code?: number) {\n    if (code) {\n      this.buffer[this.headerPosition] = code;\n      // length is everything in this packet minus the code\n      const length = this.offset - (this.headerPosition + 1);\n      const dataView = new DataView(\n        this.buffer.buffer,\n        this.buffer.byteOffset,\n        this.buffer.byteLength,\n      );\n      dataView.setInt32(this.headerPosition + 1, length);\n    }\n    return this.buffer.slice(code ? 0 : 5, this.offset);\n  }\n\n  public flush(code?: number) {\n    const result = this.join(code);\n    this.offset = 5;\n    this.headerPosition = 0;\n    this.buffer = new Uint8Array(this.size);\n    return result;\n  }\n}\n","import { BufferWriter } from './buffer-writer.js';\nimport { BackendMessageCode } from './message-codes.js';\n\ninterface BackendErrorParams {\n  severity: 'ERROR' | 'FATAL' | 'PANIC';\n  code: string;\n  message: string;\n  detail?: string;\n  hint?: string;\n  position?: string;\n  internalPosition?: string;\n  internalQuery?: string;\n  where?: string;\n  schema?: string;\n  table?: string;\n  column?: string;\n  dataType?: string;\n  constraint?: string;\n  file?: string;\n  line?: string;\n  routine?: string;\n}\n\n/**\n * Represents a backend error message\n *\n * @see https://www.postgresql.org/docs/current/protocol-message-formats.html#PROTOCOL-MESSAGE-FORMATS-ERRORRESPONSE\n *\n * For error fields, @see https://www.postgresql.org/docs/current/protocol-error-fields.html#PROTOCOL-ERROR-FIELDS\n */\nexport class BackendError {\n  severity!: 'ERROR' | 'FATAL' | 'PANIC';\n  code!: string;\n  message!: string;\n  detail?: string;\n  hint?: string;\n  position?: string;\n  internalPosition?: string;\n  internalQuery?: string;\n  where?: string;\n  schema?: string;\n  table?: string;\n  column?: string;\n  dataType?: string;\n  constraint?: string;\n  file?: string;\n  line?: string;\n  routine?: string;\n\n  constructor(params: BackendErrorParams) {\n    Object.assign(this, params);\n  }\n\n  /**\n   * Creates a backend error message\n   *\n   * @see https://www.postgresql.org/docs/current/protocol-message-formats.html#PROTOCOL-MESSAGE-FORMATS-ERRORRESPONSE\n   *\n   * For error fields, @see https://www.postgresql.org/docs/current/protocol-error-fields.html#PROTOCOL-ERROR-FIELDS\n   */\n  static create(params: BackendErrorParams) {\n    return new BackendError(params);\n  }\n\n  flush() {\n    const writer = new BufferWriter();\n\n    writer.addString('S');\n    writer.addCString(this.severity);\n\n    writer.addString('V');\n    writer.addCString(this.severity);\n\n    writer.addString('C');\n    writer.addCString(this.code);\n\n    writer.addString('M');\n    writer.addCString(this.message);\n\n    if (this.detail !== undefined) {\n      writer.addString('D');\n      writer.addCString(this.detail);\n    }\n\n    if (this.hint !== undefined) {\n      writer.addString('H');\n      writer.addCString(this.hint);\n    }\n\n    if (this.position !== undefined) {\n      writer.addString('P');\n      writer.addCString(this.position);\n    }\n\n    if (this.internalPosition !== undefined) {\n      writer.addString('p');\n      writer.addCString(this.internalPosition);\n    }\n\n    if (this.internalQuery !== undefined) {\n      writer.addString('q');\n      writer.addCString(this.internalQuery);\n    }\n\n    if (this.where !== undefined) {\n      writer.addString('W');\n      writer.addCString(this.where);\n    }\n\n    if (this.schema !== undefined) {\n      writer.addString('s');\n      writer.addCString(this.schema);\n    }\n\n    if (this.table !== undefined) {\n      writer.addString('t');\n      writer.addCString(this.table);\n    }\n\n    if (this.column !== undefined) {\n      writer.addString('c');\n      writer.addCString(this.column);\n    }\n\n    if (this.dataType !== undefined) {\n      writer.addString('d');\n      writer.addCString(this.dataType);\n    }\n\n    if (this.constraint !== undefined) {\n      writer.addString('n');\n      writer.addCString(this.constraint);\n    }\n\n    if (this.file !== undefined) {\n      writer.addString('F');\n      writer.addCString(this.file);\n    }\n\n    if (this.line !== undefined) {\n      writer.addString('L');\n      writer.addCString(this.line);\n    }\n\n    if (this.routine !== undefined) {\n      writer.addString('R');\n      writer.addCString(this.routine);\n    }\n\n    // Add null byte to the end\n    writer.addCString('');\n\n    return writer.flush(BackendMessageCode.ErrorMessage);\n  }\n}\n","export const tlsUpgradeSignal = Symbol('tls-upgrade');\nexport const closeSignal = Symbol('close');\n\nexport type TlsUpgradeSignal = typeof tlsUpgradeSignal;\nexport type CloseSignal = typeof closeSignal;\n\nexport type ConnectionSignal = TlsUpgradeSignal | CloseSignal;\n","// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// This module is browser compatible.\n\n/**\n * Concatenate an array of byte slices into a single slice.\n *\n * @param buffers Array of byte slices to concatenate.\n * @returns A new byte slice containing all the input slices concatenated.\n *\n * @example Basic usage\n * ```ts\n * import { concat } from \"@std/bytes/concat\";\n * import { assertEquals } from \"@std/assert\";\n *\n * const a = new Uint8Array([0, 1, 2]);\n * const b = new Uint8Array([3, 4, 5]);\n *\n * assertEquals(concat([a, b]), new Uint8Array([0, 1, 2, 3, 4, 5]));\n * ```\n */\nexport function concat(buffers: Uint8Array[]): Uint8Array {\n  let length = 0;\n  for (const buffer of buffers) {\n    length += buffer.length;\n  }\n  const output = new Uint8Array(length);\n  let index = 0;\n  for (const buffer of buffers) {\n    output.set(buffer, index);\n    index += buffer.length;\n  }\n\n  return output;\n}\n","// @generated file from wasmbuild -- do not edit\n// @ts-nocheck: generated\n// deno-lint-ignore-file\n// deno-fmt-ignore-file\n\n\n// source-hash: 8af6b7dfcb5d38d1b2fc36a7ab6dd8085926089e\nlet wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n  if (idx < 132) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\n\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\n\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n\n  heap[idx] = obj;\n  return idx;\n}\n\nconst cachedTextDecoder = typeof TextDecoder !== \"undefined\"\n  ? new TextDecoder(\"utf-8\", { ignoreBOM: true, fatal: true })\n  : {\n    decode: () => {\n      throw Error(\"TextDecoder not available\");\n    },\n  };\n\nif (typeof TextDecoder !== \"undefined\") cachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n  if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = typeof TextEncoder !== \"undefined\"\n  ? new TextEncoder(\"utf-8\")\n  : {\n    encode: () => {\n      throw Error(\"TextEncoder not available\");\n    },\n  };\n\nconst encodeString = function (arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n};\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = malloc(buf.length, 1) >>> 0;\n    getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  }\n\n  let len = arg.length;\n  let ptr = malloc(len, 1) >>> 0;\n\n  const mem = getUint8Memory0();\n\n  let offset = 0;\n\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7F) break;\n    mem[ptr + offset] = code;\n  }\n\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n\n    offset += ret.written;\n    ptr = realloc(ptr, len, offset, 1) >>> 0;\n  }\n\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n\nfunction isLikeNone(x) {\n  return x === undefined || x === null;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n  if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n  return cachedInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n * Returns the digest of the given `data` using the given hash `algorithm`.\n *\n * `length` will usually be left `undefined` to use the default length for\n * the algorithm. For algorithms with variable-length output, it can be used\n * to specify a non-negative integer number of bytes.\n *\n * An error will be thrown if `algorithm` is not a supported hash algorithm or\n * `length` is not a supported length for the algorithm.\n * @param {string} algorithm\n * @param {Uint8Array} data\n * @param {number | undefined} [length]\n * @returns {Uint8Array}\n */\nexport function digest(algorithm, data, length) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(\n      algorithm,\n      wasm.__wbindgen_malloc,\n      wasm.__wbindgen_realloc,\n    );\n    const len0 = WASM_VECTOR_LEN;\n    wasm.digest(\n      retptr,\n      ptr0,\n      len0,\n      addHeapObject(data),\n      !isLikeNone(length),\n      isLikeNone(length) ? 0 : length,\n    );\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    var r3 = getInt32Memory0()[retptr / 4 + 3];\n    if (r3) {\n      throw takeObject(r2);\n    }\n    var v2 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1, 1);\n    return v2;\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\nconst DigestContextFinalization = (typeof FinalizationRegistry === \"undefined\")\n  ? { register: () => {}, unregister: () => {} }\n  : new FinalizationRegistry((ptr) => wasm.__wbg_digestcontext_free(ptr >>> 0));\n/**\n * A context for incrementally computing a digest using a given hash algorithm.\n */\nexport class DigestContext {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    DigestContextFinalization.unregister(this);\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_digestcontext_free(ptr);\n  }\n  /**\n   * Creates a new context incrementally computing a digest using the given\n   * hash algorithm.\n   *\n   * An error will be thrown if `algorithm` is not a supported hash algorithm.\n   * @param {string} algorithm\n   */\n  constructor(algorithm) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(\n        algorithm,\n        wasm.__wbindgen_malloc,\n        wasm.__wbindgen_realloc,\n      );\n      const len0 = WASM_VECTOR_LEN;\n      wasm.digestcontext_new(retptr, ptr0, len0);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n   * Update the digest's internal state with the additional input `data`.\n   *\n   * If the `data` array view is large, it will be split into subarrays (via\n   * JavaScript bindings) which will be processed sequentially in order to\n   * limit the amount of memory that needs to be allocated in the Wasm heap.\n   * @param {Uint8Array} data\n   */\n  update(data) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.digestcontext_update(retptr, this.__wbg_ptr, addHeapObject(data));\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n   * Returns the digest of the input data so far, and then drops the context\n   * from memory on the Wasm side. This context must no longer be used, and any\n   * further method calls will result in null pointer errors being thrown.\n   * https://github.com/rustwasm/wasm-bindgen/blob/bf39cfd8/crates/backend/src/codegen.rs#L186\n   *\n   * `length` will usually be left `undefined` to use the default length for\n   * the algorithm. For algorithms with variable-length output, it can be used\n   * to specify a non-negative integer number of bytes.\n   *\n   * An error will be thrown if `length` is not a supported length for the algorithm.\n   * @param {number | undefined} [length]\n   * @returns {Uint8Array}\n   */\n  digestAndDrop(length) {\n    try {\n      const ptr = this.__destroy_into_raw();\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.digestcontext_digestAndDrop(\n        retptr,\n        ptr,\n        !isLikeNone(length),\n        isLikeNone(length) ? 0 : length,\n      );\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      var r3 = getInt32Memory0()[retptr / 4 + 3];\n      if (r3) {\n        throw takeObject(r2);\n      }\n      var v1 = getArrayU8FromWasm0(r0, r1).slice();\n      wasm.__wbindgen_free(r0, r1 * 1, 1);\n      return v1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\n\nconst imports = {\n  __wbindgen_placeholder__: {\n    __wbg_new_5dd86ebc917d9f52: function (arg0, arg1) {\n      const ret = new TypeError(getStringFromWasm0(arg0, arg1));\n      return addHeapObject(ret);\n    },\n    __wbindgen_object_drop_ref: function (arg0) {\n      takeObject(arg0);\n    },\n    __wbg_byteLength_58f7b4fab1919d44: function (arg0) {\n      const ret = getObject(arg0).byteLength;\n      return ret;\n    },\n    __wbg_byteOffset_81d60f7392524f62: function (arg0) {\n      const ret = getObject(arg0).byteOffset;\n      return ret;\n    },\n    __wbg_buffer_dd7f74bc60f1faab: function (arg0) {\n      const ret = getObject(arg0).buffer;\n      return addHeapObject(ret);\n    },\n    __wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb: function (\n      arg0,\n      arg1,\n      arg2,\n    ) {\n      const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n      return addHeapObject(ret);\n    },\n    __wbg_length_c20a40f15020d68a: function (arg0) {\n      const ret = getObject(arg0).length;\n      return ret;\n    },\n    __wbindgen_memory: function () {\n      const ret = wasm.memory;\n      return addHeapObject(ret);\n    },\n    __wbg_buffer_12d079cc21e14bdb: function (arg0) {\n      const ret = getObject(arg0).buffer;\n      return addHeapObject(ret);\n    },\n    __wbg_new_63b92bc8671ed464: function (arg0) {\n      const ret = new Uint8Array(getObject(arg0));\n      return addHeapObject(ret);\n    },\n    __wbg_set_a47bac70306a19a7: function (arg0, arg1, arg2) {\n      getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    },\n    __wbindgen_throw: function (arg0, arg1) {\n      throw new Error(getStringFromWasm0(arg0, arg1));\n    },\n  },\n};\n\nexport function instantiate() {\n  return instantiateWithInstance().exports;\n}\n\nlet instanceWithExports;\n\nexport function instantiateWithInstance() {\n  if (instanceWithExports == null) {\n    const instance = instantiateInstance();\n    wasm = instance.exports;\n    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    instanceWithExports = {\n      instance,\n      exports: { digest, DigestContext },\n    };\n  }\n  return instanceWithExports;\n}\n\nexport function isInstantiated() {\n  return instanceWithExports != null;\n}\n\nfunction instantiateInstance() {\n  const wasmBytes = base64decode(\n    \"\\\nAGFzbQEAAAABpwEYYAAAYAABf2ABfwBgAX8Bf2ACf38AYAJ/fwF/YAN/f38AYAN/f38Bf2AEf39/fw\\\nBgBH9/f38Bf2AFf39/f38AYAV/f39/fwF/YAZ/f39/f38AYAZ/f39/f38Bf2AFf39/fn8AYAd/f39+\\\nf39/AX9gA39/fgBgBX9/fn9/AGAFf399f38AYAV/f3x/fwBgAn9+AGAEf35/fwBgBH99f38AYAR/fH\\\n9/AAKkBQwYX193YmluZGdlbl9wbGFjZWhvbGRlcl9fGl9fd2JnX25ld181ZGQ4NmViYzkxN2Q5ZjUy\\\nAAUYX193YmluZGdlbl9wbGFjZWhvbGRlcl9fGl9fd2JpbmRnZW5fb2JqZWN0X2Ryb3BfcmVmAAIYX1\\\n93YmluZGdlbl9wbGFjZWhvbGRlcl9fIV9fd2JnX2J5dGVMZW5ndGhfNThmN2I0ZmFiMTkxOWQ0NAAD\\\nGF9fd2JpbmRnZW5fcGxhY2Vob2xkZXJfXyFfX3diZ19ieXRlT2Zmc2V0XzgxZDYwZjczOTI1MjRmNj\\\nIAAxhfX3diaW5kZ2VuX3BsYWNlaG9sZGVyX18dX193YmdfYnVmZmVyX2RkN2Y3NGJjNjBmMWZhYWIA\\\nAxhfX3diaW5kZ2VuX3BsYWNlaG9sZGVyX18xX193YmdfbmV3d2l0aGJ5dGVvZmZzZXRhbmRsZW5ndG\\\nhfYWE0YTE3YzMzYTA2ZTVjYgAHGF9fd2JpbmRnZW5fcGxhY2Vob2xkZXJfXx1fX3diZ19sZW5ndGhf\\\nYzIwYTQwZjE1MDIwZDY4YQADGF9fd2JpbmRnZW5fcGxhY2Vob2xkZXJfXxFfX3diaW5kZ2VuX21lbW\\\n9yeQABGF9fd2JpbmRnZW5fcGxhY2Vob2xkZXJfXx1fX3diZ19idWZmZXJfMTJkMDc5Y2MyMWUxNGJk\\\nYgADGF9fd2JpbmRnZW5fcGxhY2Vob2xkZXJfXxpfX3diZ19uZXdfNjNiOTJiYzg2NzFlZDQ2NAADGF\\\n9fd2JpbmRnZW5fcGxhY2Vob2xkZXJfXxpfX3diZ19zZXRfYTQ3YmFjNzAzMDZhMTlhNwAGGF9fd2Jp\\\nbmRnZW5fcGxhY2Vob2xkZXJfXxBfX3diaW5kZ2VuX3Rocm93AAQDYWAIBgYKBhAEBgYEDgMGBgQPBx\\\nQEBAYCBQQJBgYHDQQEBAcFBAcGBAQIBgwEBgcGBAwIBgYGBgUFAgQFBwYGCQAEBAkNCwoLCgoSExEI\\\nAgcFBQQGAgUDAAAEBAcHBwACAgIEBQFwARcXBQMBABEGCQF/AUGAgMAACwfUAQoGbWVtb3J5AgAGZG\\\nlnZXN0ADUYX193YmdfZGlnZXN0Y29udGV4dF9mcmVlAEMRZGlnZXN0Y29udGV4dF9uZXcAORRkaWdl\\\nc3Rjb250ZXh0X3VwZGF0ZQBHG2RpZ2VzdGNvbnRleHRfZGlnZXN0QW5kRHJvcAAzH19fd2JpbmRnZW\\\n5fYWRkX3RvX3N0YWNrX3BvaW50ZXIAYBFfX3diaW5kZ2VuX21hbGxvYwBFEl9fd2JpbmRnZW5fcmVh\\\nbGxvYwBND19fd2JpbmRnZW5fZnJlZQBdCRwBAEEBCxZaWyJfTztQUU5ZV1JTVFVWakFpQmtcCreXB2\\\nC6ggECOX8CfiMAQYACayIEJAACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJA\\\nAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQA\\\nJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAC\\\nQAJAAkACQAJAAkACQAJAAkAgAA4fAAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHgALIAFByA\\\nBqIQUgA0GAASABQcgBai0AACIAayIGTQ0eIABFDVMgBSAAaiACIAYQZRogASABKQNAQoABfDcDQCAB\\\nIAVCABARAkAgAyAGayIDRQ0AIAIgBmohAgxUC0HgkcAAIQNBACEGDFQLIAFByABqIQUCQCADQYABIA\\\nFByAFqLQAAIgBrIgZNDQAgAEUNUSAFIABqIAIgBhBlGiABIAEpA0BCgAF8NwNAIAEgBUIAEBECQCAD\\\nIAZrIgNFDQAgAiAGaiECDFILQeCRwAAhA0EAIQYMUgsgBSAAaiACIAMQZRogASAAIANqOgDIAQxUCy\\\nABQcgAaiEFAkAgA0GAASABQcgBai0AACIAayIGTQ0AIABFDU4gBSAAaiACIAYQZRogASABKQNAQoAB\\\nfDcDQCABIAVCABARAkAgAyAGayIDRQ0AIAIgBmohAgxPC0HgkcAAIQNBACEGDE8LIAUgAGogAiADEG\\\nUaIAEgACADajoAyAEMUwsgAUHIAGohBQJAIANBgAEgAUHIAWotAAAiAGsiBk0NACAARQ1LIAUgAGog\\\nAiAGEGUaIAEgASkDQEKAAXw3A0AgASAFQgAQEQJAIAMgBmsiA0UNACACIAZqIQIMTAtB4JHAACEDQQ\\\nAhBgxMCyAFIABqIAIgAxBlGiABIAAgA2o6AMgBDFILIAFByABqIQUCQCADQYABIAFByAFqLQAAIgBr\\\nIgZNDQAgAEUNSCAFIABqIAIgBhBlGiABIAEpA0BCgAF8NwNAIAEgBUIAEBECQCADIAZrIgNFDQAgAi\\\nAGaiECDEkLQeCRwAAhA0EAIQYMSQsgBSAAaiACIAMQZRogASAAIANqOgDIAQxRCyABQcgAaiEFAkAg\\\nA0GAASABQcgBai0AACIAayIGTQ0AIABFDUUgBSAAaiACIAYQZRogASABKQNAQoABfDcDQCABIAVCAB\\\nARAkAgAyAGayIDRQ0AIAIgBmohAgxGC0HgkcAAIQNBACEGDEYLIAUgAGogAiADEGUaIAEgACADajoA\\\nyAEMUAsgAUEoaiEFAkAgA0HAACABQegAai0AACIAayIGTQ0AIABFDUIgBSAAaiACIAYQZRogASABKQ\\\nMgQsAAfDcDIEEAIQcgASAFQQAQEwJAIAMgBmsiA0UNACACIAZqIQIMQwtB4JHAACEDDEMLIAUgAGog\\\nAiADEGUaIAEgACADajoAaAxPCyABQSBqIQggAUGJAWotAABBBnQgAUGIAWotAABqIgBFDT8gCCACQY\\\nAIIABrIgAgAyAAIANJGyIGECwhBSADIAZrIgNFDU4gBEG4AWoiCSABQegAaiIAKQMANwMAIARBwAFq\\\nIgogAUHwAGoiBykDADcDACAEQcgBaiILIAFB+ABqIgwpAwA3AwAgBEHwAGpBCGoiDSAFQQhqKQMANw\\\nMAIARB8ABqQRBqIg4gBUEQaikDADcDACAEQfAAakEYaiIPIAVBGGopAwA3AwAgBEHwAGpBIGoiECAF\\\nQSBqKQMANwMAIARB8ABqQShqIhEgBUEoaikDADcDACAEQfAAakEwaiISIAVBMGopAwA3AwAgBEHwAG\\\n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\\\nCGwgAC0ABHNBk4OACGwgAC0ABXNBk4OACGwgAC0ABnNBk4OACGwgAC0AB3NBk4OACGwhBSAAQQhqIg\\\nAgAkcNAAsLIAEgBTYCAAw5CyADRQ04IAEpAwAhPQJAAkAgA0EHcSIGDQAgAiEADAELIAYhBSACIQAD\\\nQCA9QrODgICAIH4gADEAAIUhPSAAQQFqIQAgBUF/aiIFDQALIAIgBmohAAsCQCADQQhJDQAgAiADai\\\nECA0AgPUKzg4CAgCB+IAAxAACFQrODgICAIH4gAEEBajEAAIVCs4OAgIAgfiAAQQJqMQAAhUKzg4CA\\\ngCB+IABBA2oxAACFQrODgICAIH4gAEEEajEAAIVCs4OAgIAgfiAAQQVqMQAAhUKzg4CAgCB+IABBBm\\\noxAACFQrODgICAIH4gAEEHajEAAIUhPSAAQQhqIgAgAkcNAAsLIAEgPTcDAAw4CyADRQ03IAEpAwAh\\\nPQJAAkAgA0EHcSIGDQAgAiEADAELIAYhBSACIQADQCA9IAAxAACFQrODgICAIH4hPSAAQQFqIQAgBU\\\nF/aiIFDQALIAIgBmohAAsCQCADQQhJDQAgAiADaiECA0AgPSAAMQAAhUKzg4CAgCB+IAAxAAGFQrOD\\\ngICAIH4gADEAAoVCs4OAgIAgfiAAMQADhUKzg4CAgCB+IAAxAASFQrODgICAIH4gADEABYVCs4OAgI\\\nAgfiAAMQAGhUKzg4CAgCB+IAAxAAeFQrODgICAIH4hPSAAQQhqIgAgAkcNAAsLIAEgPTcDAAw3CyAF\\\nIABqIAIgAxBlGiABIAAgA2o6AMgBDDYLIARB8ABqQR1qIBc6AAAgBEHwAGpBGWogGjoAACAEQfAAak\\\nEVaiAdOgAAIARB8ABqQRFqICA6AAAgBEHwAGpBDWogIzoAACAEQfAAakEJaiAmOgAAIARB9QBqIC06\\\nAAAgBEHwAGpBHmogFToAACAEQfAAakEaaiAZOgAAIARB8ABqQRZqIBw6AAAgBEHwAGpBEmogHzoAAC\\\nAEQfAAakEOaiAiOgAAIARB8ABqQQpqICU6AAAgBEH2AGogLDoAACAEQfAAakEfaiAUOgAAIARB8ABq\\\nQRtqIBg6AAAgBEHwAGpBF2ogGzoAACAEQfAAakETaiAeOgAAIARB8ABqQQ9qICE6AAAgBEHwAGpBC2\\\nogJDoAACAEQfcAaiArOgAAIAQgKDoAjAEgBCAWOgCIASAEICk6AIQBIAQgDDoAgAEgBCAqOgB8IAQg\\\nJzoAeCAEIC46AHQgBCAyOgBwIAQgMToAcSAEIDA6AHIgBCAvOgBzQbSRwAAgBEHwAGpByIjAAEGgh8\\\nAAEDwACyAFIABqIAIgBhBlGiABIAEpAwAgASkA0AGFNwMAIAEgASkDCCABQdgBaikAAIU3AwggASAB\\\nKQMQIAFB4AFqKQAAhTcDECABIAEpAxggAUHoAWopAACFNwMYIAEgASkDICABQfABaikAAIU3AyAgAS\\\nABKQMoIAFB+AFqKQAAhTcDKCABIAEpAzAgAUGAAmopAACFNwMwIAEgASkDOCABQYgCaikAAIU3Azgg\\\nASABKQNAIAFBkAJqKQAAhTcDQCABIAEpA0ggAUGYAmopAACFNwNIIAEgASkDUCABQaACaikAAIU3A1\\\nAgASABKQNYIAFBqAJqKQAAhTcDWCABIAEpA2AgAUGwAmopAACFNwNgIAEgASkDaCABQbgCaikAAIU3\\\nA2ggASABKQNwIAFBwAJqKQAAhTcDcCABIAEpA3ggAUHIAmopAACFNwN4IAEgASkDgAEgAUHQAmopAA\\\nCFNwOAASABIAEpA4gBIAFB2AJqKQAAhTcDiAEgASABKALIARAfIAMgBmshAyACIAZqIQIMJAsgBSAA\\\naiACIAYQZRogASABKQMAIAEpANABhTcDACABIAEpAwggAUHYAWopAACFNwMIIAEgASkDECABQeABai\\\nkAAIU3AxAgASABKQMYIAFB6AFqKQAAhTcDGCABIAEpAyAgAUHwAWopAACFNwMgIAEgASkDKCABQfgB\\\naikAAIU3AyggASABKQMwIAFBgAJqKQAAhTcDMCABIAEpAzggAUGIAmopAACFNwM4IAEgASkDQCABQZ\\\nACaikAAIU3A0AgASABKQNIIAFBmAJqKQAAhTcDSCABIAEpA1AgAUGgAmopAACFNwNQIAEgASkDWCAB\\\nQagCaikAAIU3A1ggASABKQNgIAFBsAJqKQAAhTcDYCABIAEpA2ggAUG4AmopAACFNwNoIAEgASkDcC\\\nABQcACaikAAIU3A3AgASABKQN4IAFByAJqKQAAhTcDeCABIAEpA4ABIAFB0AJqKQAAhTcDgAEgASAB\\\nKALIARAfIAMgBmshAyACIAZqIQIMIgsgBSAAaiACIAYQZRogASABKQMAIAEpANABhTcDACABIAEpAw\\\nggAUHYAWopAACFNwMIIAEgASkDECABQeABaikAAIU3AxAgASABKQMYIAFB6AFqKQAAhTcDGCABIAEp\\\nAyAgAUHwAWopAACFNwMgIAEgASkDKCABQfgBaikAAIU3AyggASABKQMwIAFBgAJqKQAAhTcDMCABIA\\\nEpAzggAUGIAmopAACFNwM4IAEgASkDQCABQZACaikAAIU3A0AgASABKQNIIAFBmAJqKQAAhTcDSCAB\\\nIAEpA1AgAUGgAmopAACFNwNQIAEgASkDWCABQagCaikAAIU3A1ggASABKQNgIAFBsAJqKQAAhTcDYC\\\nABIAEoAsgBEB8gAyAGayEDIAIgBmohAgwgCyAFIABqIAIgBhBlGiABIAEpAwAgASkA0AGFNwMAIAEg\\\nASkDCCABQdgBaikAAIU3AwggASABKQMQIAFB4AFqKQAAhTcDECABIAEpAxggAUHoAWopAACFNwMYIA\\\nEgASkDICABQfABaikAAIU3AyAgASABKQMoIAFB+AFqKQAAhTcDKCABIAEpAzAgAUGAAmopAACFNwMw\\\nIAEgASkDOCABQYgCaikAAIU3AzggASABKQNAIAFBkAJqKQAAhTcDQCABIAEoAsgBEB8gAyAGayEDIA\\\nIgBmohAgweCyAFIABqIAIgBhBlGiABIAEpAxBCAXw3AxAgASAFEB4gAyAGayEDIAIgBmohAgwcCyAF\\\nIABqIAIgBhBlGiAEQfAAaiAFQQEQGSACIAZqIQIgAyAGayEDDBoLIAYgAGogAiAFEGUaIAEgASkDAE\\\nIBfDcDACABQQhqIAYQEiADIAVrIQMgAiAFaiECDBgLIAUgAGogAiAGEGUaIAEgASkDAEIBfDcDACAB\\\nQQhqIAVBARAUIAIgBmohAiADIAZrIQMMFgsgBSAAaiACIAYQZRogASABKQMAIAEpANABhTcDACABIA\\\nEpAwggAUHYAWopAACFNwMIIAEgASkDECABQeABaikAAIU3AxAgASABKQMYIAFB6AFqKQAAhTcDGCAB\\\nIAEpAyAgAUHwAWopAACFNwMgIAEgASkDKCABQfgBaikAAIU3AyggASABKQMwIAFBgAJqKQAAhTcDMC\\\nABIAEpAzggAUGIAmopAACFNwM4IAEgASkDQCABQZACaikAAIU3A0AgASABKQNIIAFBmAJqKQAAhTcD\\\nSCABIAEpA1AgAUGgAmopAACFNwNQIAEgASkDWCABQagCaikAAIU3A1ggASABKQNgIAFBsAJqKQAAhT\\\ncDYCABIAEpA2ggAUG4AmopAACFNwNoIAEgASkDcCABQcACaikAAIU3A3AgASABKQN4IAFByAJqKQAA\\\nhTcDeCABIAEpA4ABIAFB0AJqKQAAhTcDgAEgASABKQOIASABQdgCaikAAIU3A4gBIAEgASgCyAEQHy\\\nADIAZrIQMgAiAGaiECDBQLIAUgAGogAiAGEGUaIAEgASkDACABKQDQAYU3AwAgASABKQMIIAFB2AFq\\\nKQAAhTcDCCABIAEpAxAgAUHgAWopAACFNwMQIAEgASkDGCABQegBaikAAIU3AxggASABKQMgIAFB8A\\\nFqKQAAhTcDICABIAEpAyggAUH4AWopAACFNwMoIAEgASkDMCABQYACaikAAIU3AzAgASABKQM4IAFB\\\niAJqKQAAhTcDOCABIAEpA0AgAUGQAmopAACFNwNAIAEgASkDSCABQZgCaikAAIU3A0ggASABKQNQIA\\\nFBoAJqKQAAhTcDUCABIAEpA1ggAUGoAmopAACFNwNYIAEgASkDYCABQbACaikAAIU3A2AgASABKQNo\\\nIAFBuAJqKQAAhTcDaCABIAEpA3AgAUHAAmopAACFNwNwIAEgASkDeCABQcgCaikAAIU3A3ggASABKQ\\\nOAASABQdACaikAAIU3A4ABIAEgASgCyAEQHyADIAZrIQMgAiAGaiECDBILIAUgAGogAiAGEGUaIAEg\\\nASkDACABKQDQAYU3AwAgASABKQMIIAFB2AFqKQAAhTcDCCABIAEpAxAgAUHgAWopAACFNwMQIAEgAS\\\nkDGCABQegBaikAAIU3AxggASABKQMgIAFB8AFqKQAAhTcDICABIAEpAyggAUH4AWopAACFNwMoIAEg\\\nASkDMCABQYACaikAAIU3AzAgASABKQM4IAFBiAJqKQAAhTcDOCABIAEpA0AgAUGQAmopAACFNwNAIA\\\nEgASkDSCABQZgCaikAAIU3A0ggASABKQNQIAFBoAJqKQAAhTcDUCABIAEpA1ggAUGoAmopAACFNwNY\\\nIAEgASkDYCABQbACaikAAIU3A2AgASABKALIARAfIAMgBmshAyACIAZqIQIMEAsgBSAAaiACIAYQZR\\\nogASABKQMAIAEpANABhTcDACABIAEpAwggAUHYAWopAACFNwMIIAEgASkDECABQeABaikAAIU3AxAg\\\nASABKQMYIAFB6AFqKQAAhTcDGCABIAEpAyAgAUHwAWopAACFNwMgIAEgASkDKCABQfgBaikAAIU3Ay\\\nggASABKQMwIAFBgAJqKQAAhTcDMCABIAEpAzggAUGIAmopAACFNwM4IAEgASkDQCABQZACaikAAIU3\\\nA0AgASABKALIARAfIAMgBmshAyACIAZqIQIMDgsgBSAAaiACIAYQZRogASABKQMgQgF8NwMgIAEgBU\\\nEBEA4gAiAGaiECIAMgBmshAwwMCyAFIABqIAIgBhBlGiABIAEpAyBCAXw3AyAgASAFQQEQDiACIAZq\\\nIQIgAyAGayEDDAoLIAUgAGogAiAGEGUaIAEgASkDQEIBfCI9NwNAIAFByABqIgAgACkDACA9UK18Nw\\\nMAIAEgBUEBEA0gAiAGaiECIAMgBmshAwwICyAFIABqIAIgBhBlGiABIAEpA0BCAXwiPTcDQCABQcgA\\\naiIAIAApAwAgPVCtfDcDACABIAVBARANIAIgBmohAiADIAZrIQMMBgsgBSAAaiACIAYQZRogASABKQ\\\nMAIAEpANABhTcDACABIAEpAwggAUHYAWopAACFNwMIIAEgASkDECABQeABaikAAIU3AxAgASABKQMY\\\nIAFB6AFqKQAAhTcDGCABIAEpAyAgAUHwAWopAACFNwMgIAEgASkDKCABQfgBaikAAIU3AyggASABKQ\\\nMwIAFBgAJqKQAAhTcDMCABIAEpAzggAUGIAmopAACFNwM4IAEgASkDQCABQZACaikAAIU3A0AgASAB\\\nKQNIIAFBmAJqKQAAhTcDSCABIAEpA1AgAUGgAmopAACFNwNQIAEgASkDWCABQagCaikAAIU3A1ggAS\\\nABKQNgIAFBsAJqKQAAhTcDYCABIAEpA2ggAUG4AmopAACFNwNoIAEgASkDcCABQcACaikAAIU3A3Ag\\\nASABKQN4IAFByAJqKQAAhTcDeCABIAEpA4ABIAFB0AJqKQAAhTcDgAEgASABKQOIASABQdgCaikAAI\\\nU3A4gBIAEgASkDkAEgAUHgAmopAACFNwOQASABIAEpA5gBIAFB6AJqKQAAhTcDmAEgASABKQOgASAB\\\nQfACaikAAIU3A6ABIAEgASgCyAEQHyADIAZrIQMgAiAGaiECDAQLIAUgAGogAiAGEGUaIAEgASkDAC\\\nABKQDQAYU3AwAgASABKQMIIAFB2AFqKQAAhTcDCCABIAEpAxAgAUHgAWopAACFNwMQIAEgASkDGCAB\\\nQegBaikAAIU3AxggASABKQMgIAFB8AFqKQAAhTcDICABIAEpAyggAUH4AWopAACFNwMoIAEgASkDMC\\\nABQYACaikAAIU3AzAgASABKQM4IAFBiAJqKQAAhTcDOCABIAEpA0AgAUGQAmopAACFNwNAIAEgASkD\\\nSCABQZgCaikAAIU3A0ggASABKQNQIAFBoAJqKQAAhTcDUCABIAEpA1ggAUGoAmopAACFNwNYIAEgAS\\\nkDYCABQbACaikAAIU3A2AgASABKQNoIAFBuAJqKQAAhTcDaCABIAEpA3AgAUHAAmopAACFNwNwIAEg\\\nASkDeCABQcgCaikAAIU3A3ggASABKQOAASABQdACaikAAIU3A4ABIAEgASgCyAEQHyADIAZrIQMgAi\\\nAGaiECDAILIAYgAGogAiAFEGUaIAEgASkDAEIBfDcDACABQQhqIAYQFSADIAVrIQMgAiAFaiECCyAD\\\nQT9xIQcgAiADQUBxIgBqIQwCQCADQcAASQ0AIAEgASkDACADQQZ2rXw3AwAgAUEIaiEFA0AgBSACEB\\\nUgAkHAAGohAiAAQUBqIgANAAsLIAYgDCAHEGUaIAEgBzoAYAwhCyACIANBiAFuQYgBbCIGaiEAIAMg\\\nBmshBgJAIANBiAFJDQADQCABIAEpAwAgAikAAIU3AwAgASABKQMIIAIpAAiFNwMIIAEgASkDECACKQ\\\nAQhTcDECABIAEpAxggAikAGIU3AxggASABKQMgIAIpACCFNwMgIAEgASkDKCACKQAohTcDKCABIAEp\\\nAzAgAikAMIU3AzAgASABKQM4IAIpADiFNwM4IAEgASkDQCACKQBAhTcDQCABIAEpA0ggAikASIU3A0\\\nggASABKQNQIAIpAFCFNwNQIAEgASkDWCACKQBYhTcDWCABIAEpA2AgAikAYIU3A2AgASABKQNoIAIp\\\nAGiFNwNoIAEgASkDcCACKQBwhTcDcCABIAEpA3ggAikAeIU3A3ggASABKQOAASACKQCAAYU3A4ABIA\\\nEgASgCyAEQHyACQYgBaiICIABHDQALCwJAIAZBiQFPDQAgBSAAIAYQZRogASAGOgDYAgwhCyAGQYgB\\\nQYCAwAAQPQALIAIgA0GoAW5BqAFsIgZqIQAgAyAGayEGAkAgA0GoAUkNAANAIAEgASkDACACKQAAhT\\\ncDACABIAEpAwggAikACIU3AwggASABKQMQIAIpABCFNwMQIAEgASkDGCACKQAYhTcDGCABIAEpAyAg\\\nAikAIIU3AyAgASABKQMoIAIpACiFNwMoIAEgASkDMCACKQAwhTcDMCABIAEpAzggAikAOIU3AzggAS\\\nABKQNAIAIpAECFNwNAIAEgASkDSCACKQBIhTcDSCABIAEpA1AgAikAUIU3A1AgASABKQNYIAIpAFiF\\\nNwNYIAEgASkDYCACKQBghTcDYCABIAEpA2ggAikAaIU3A2ggASABKQNwIAIpAHCFNwNwIAEgASkDeC\\\nACKQB4hTcDeCABIAEpA4ABIAIpAIABhTcDgAEgASABKQOIASACKQCIAYU3A4gBIAEgASkDkAEgAikA\\\nkAGFNwOQASABIAEpA5gBIAIpAJgBhTcDmAEgASABKQOgASACKQCgAYU3A6ABIAEgASgCyAEQHyACQa\\\ngBaiICIABHDQALCwJAIAZBqQFPDQAgBSAAIAYQZRogASAGOgD4AgwgCyAGQagBQYCAwAAQPQALIANB\\\n/wBxIQAgAiADQYB/cWohBgJAIANBgAFJDQAgASABKQNAIj0gA0EHdiIDrXwiPjcDQCABQcgAaiIHIA\\\ncpAwAgPiA9VK18NwMAIAEgAiADEA0LIAUgBiAAEGUaIAEgADoA0AEMHgsgA0H/AHEhACACIANBgH9x\\\naiEGAkAgA0GAAUkNACABIAEpA0AiPSADQQd2IgOtfCI+NwNAIAFByABqIgcgBykDACA+ID1UrXw3Aw\\\nAgASACIAMQDQsgBSAGIAAQZRogASAAOgDQAQwdCyADQT9xIQAgAiADQUBxaiEGAkAgA0HAAEkNACAB\\\nIAEpAyAgA0EGdiIDrXw3AyAgASACIAMQDgsgBSAGIAAQZRogASAAOgBoDBwLIANBP3EhACACIANBQH\\\nFqIQYCQCADQcAASQ0AIAEgASkDICADQQZ2IgOtfDcDICABIAIgAxAOCyAFIAYgABBlGiABIAA6AGgM\\\nGwsgAiADQcgAbkHIAGwiBmohACADIAZrIQYCQCADQcgASQ0AA0AgASABKQMAIAIpAACFNwMAIAEgAS\\\nkDCCACKQAIhTcDCCABIAEpAxAgAikAEIU3AxAgASABKQMYIAIpABiFNwMYIAEgASkDICACKQAghTcD\\\nICABIAEpAyggAikAKIU3AyggASABKQMwIAIpADCFNwMwIAEgASkDOCACKQA4hTcDOCABIAEpA0AgAi\\\nkAQIU3A0AgASABKALIARAfIAJByABqIgIgAEcNAAsLAkAgBkHJAE8NACAFIAAgBhBlGiABIAY6AJgC\\\nDBsLIAZByABBgIDAABA9AAsgAiADQegAbkHoAGwiBmohACADIAZrIQYCQCADQegASQ0AA0AgASABKQ\\\nMAIAIpAACFNwMAIAEgASkDCCACKQAIhTcDCCABIAEpAxAgAikAEIU3AxAgASABKQMYIAIpABiFNwMY\\\nIAEgASkDICACKQAghTcDICABIAEpAyggAikAKIU3AyggASABKQMwIAIpADCFNwMwIAEgASkDOCACKQ\\\nA4hTcDOCABIAEpA0AgAikAQIU3A0AgASABKQNIIAIpAEiFNwNIIAEgASkDUCACKQBQhTcDUCABIAEp\\\nA1ggAikAWIU3A1ggASABKQNgIAIpAGCFNwNgIAEgASgCyAEQHyACQegAaiICIABHDQALCwJAIAZB6Q\\\nBPDQAgBSAAIAYQZRogASAGOgC4AgwaCyAGQegAQYCAwAAQPQALIAIgA0GIAW5BiAFsIgZqIQAgAyAG\\\nayEGAkAgA0GIAUkNAANAIAEgASkDACACKQAAhTcDACABIAEpAwggAikACIU3AwggASABKQMQIAIpAB\\\nCFNwMQIAEgASkDGCACKQAYhTcDGCABIAEpAyAgAikAIIU3AyAgASABKQMoIAIpACiFNwMoIAEgASkD\\\nMCACKQAwhTcDMCABIAEpAzggAikAOIU3AzggASABKQNAIAIpAECFNwNAIAEgASkDSCACKQBIhTcDSC\\\nABIAEpA1AgAikAUIU3A1AgASABKQNYIAIpAFiFNwNYIAEgASkDYCACKQBghTcDYCABIAEpA2ggAikA\\\naIU3A2ggASABKQNwIAIpAHCFNwNwIAEgASkDeCACKQB4hTcDeCABIAEpA4ABIAIpAIABhTcDgAEgAS\\\nABKALIARAfIAJBiAFqIgIgAEcNAAsLAkAgBkGJAU8NACAFIAAgBhBlGiABIAY6ANgCDBkLIAZBiAFB\\\ngIDAABA9AAsgAiADQZABbkGQAWwiBmohACADIAZrIQYCQCADQZABSQ0AA0AgASABKQMAIAIpAACFNw\\\nMAIAEgASkDCCACKQAIhTcDCCABIAEpAxAgAikAEIU3AxAgASABKQMYIAIpABiFNwMYIAEgASkDICAC\\\nKQAghTcDICABIAEpAyggAikAKIU3AyggASABKQMwIAIpADCFNwMwIAEgASkDOCACKQA4hTcDOCABIA\\\nEpA0AgAikAQIU3A0AgASABKQNIIAIpAEiFNwNIIAEgASkDUCACKQBQhTcDUCABIAEpA1ggAikAWIU3\\\nA1ggASABKQNgIAIpAGCFNwNgIAEgASkDaCACKQBohTcDaCABIAEpA3AgAikAcIU3A3AgASABKQN4IA\\\nIpAHiFNwN4IAEgASkDgAEgAikAgAGFNwOAASABIAEpA4gBIAIpAIgBhTcDiAEgASABKALIARAfIAJB\\\nkAFqIgIgAEcNAAsLAkAgBkGRAU8NACAFIAAgBhBlGiABIAY6AOACDBgLIAZBkAFBgIDAABA9AAsgA0\\\nE/cSEAIAIgA0FAcWohBgJAIANBwABJDQAgASABKQMAIANBBnYiA618NwMAIAFBCGogAiADEBQLIAUg\\\nBiAAEGUaIAEgADoAYAwWCyADQT9xIQcgAiADQUBxIgBqIQwCQCADQcAASQ0AIAEgASkDACADQQZ2rX\\\nw3AwAgAUEIaiEFA0AgBSACEBIgAkHAAGohAiAAQUBqIgANAAsLIAYgDCAHEGUaIAEgBzoAYAwVCyAD\\\nQT9xIQAgAiADQUBxaiEGAkAgA0HAAEkNACAEQfAAaiACIANBBnYQGQsgBSAGIAAQZRogASAAOgBYDB\\\nQLIANBP3EhBiACIANBQHEiAGohBwJAIANBwABJDQAgASABKQMQIANBBnatfDcDEANAIAEgAhAeIAJB\\\nwABqIQIgAEFAaiIADQALCyAFIAcgBhBlGiABIAY6AFgMEwsgAiADQcgAbkHIAGwiBmohACADIAZrIQ\\\nYCQCADQcgASQ0AA0AgASABKQMAIAIpAACFNwMAIAEgASkDCCACKQAIhTcDCCABIAEpAxAgAikAEIU3\\\nAxAgASABKQMYIAIpABiFNwMYIAEgASkDICACKQAghTcDICABIAEpAyggAikAKIU3AyggASABKQMwIA\\\nIpADCFNwMwIAEgASkDOCACKQA4hTcDOCABIAEpA0AgAikAQIU3A0AgASABKALIARAfIAJByABqIgIg\\\nAEcNAAsLAkAgBkHJAE8NACAFIAAgBhBlGiABIAY6AJgCDBMLIAZByABBgIDAABA9AAsgAiADQegAbk\\\nHoAGwiBmohACADIAZrIQYCQCADQegASQ0AA0AgASABKQMAIAIpAACFNwMAIAEgASkDCCACKQAIhTcD\\\nCCABIAEpAxAgAikAEIU3AxAgASABKQMYIAIpABiFNwMYIAEgASkDICACKQAghTcDICABIAEpAyggAi\\\nkAKIU3AyggASABKQMwIAIpADCFNwMwIAEgASkDOCACKQA4hTcDOCABIAEpA0AgAikAQIU3A0AgASAB\\\nKQNIIAIpAEiFNwNIIAEgASkDUCACKQBQhTcDUCABIAEpA1ggAikAWIU3A1ggASABKQNgIAIpAGCFNw\\\nNgIAEgASgCyAEQHyACQegAaiICIABHDQALCwJAIAZB6QBPDQAgBSAAIAYQZRogASAGOgC4AgwSCyAG\\\nQegAQYCAwAAQPQALIAIgA0GIAW5BiAFsIgZqIQAgAyAGayEGAkAgA0GIAUkNAANAIAEgASkDACACKQ\\\nAAhTcDACABIAEpAwggAikACIU3AwggASABKQMQIAIpABCFNwMQIAEgASkDGCACKQAYhTcDGCABIAEp\\\nAyAgAikAIIU3AyAgASABKQMoIAIpACiFNwMoIAEgASkDMCACKQAwhTcDMCABIAEpAzggAikAOIU3Az\\\nggASABKQNAIAIpAECFNwNAIAEgASkDSCACKQBIhTcDSCABIAEpA1AgAikAUIU3A1AgASABKQNYIAIp\\\nAFiFNwNYIAEgASkDYCACKQBghTcDYCABIAEpA2ggAikAaIU3A2ggASABKQNwIAIpAHCFNwNwIAEgAS\\\nkDeCACKQB4hTcDeCABIAEpA4ABIAIpAIABhTcDgAEgASABKALIARAfIAJBiAFqIgIgAEcNAAsLAkAg\\\n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\\\nASEFIAQtANkBIRggBCAELQDYASIZOgBoIAQgBCkD0AEiPjcDYCAEIAUgGEVyQQJyIgU6AGkgBEHgAW\\\npBGGoiGCAXKQIANwMAIARB4AFqQRBqIhcgBykCADcDACAEQeABakEIaiIHIAYpAgA3AwAgBCAMKQIA\\\nNwPgASAEQeABaiAEIBkgPiAFEBYgDS0AACEZIA4tAAAhGiAPLQAAIRsgEC0AACEcIBEtAAAhHSASLQ\\\nAAIR4gGC0AACEYIBMtAAAhHyAzLQAAISAgNC0AACEhIDUtAAAhIiA2LQAAISMgNy0AACEkIBctAAAh\\\nFyA4LQAAISUgOS0AACEmIDotAAAhJyA7LQAAISggBEHgAWpBCmotAAAhKSA8LQAAISogBy0AACEHIA\\\nQtAPwBISsgBC0A9AEhLCAELQDsASEtIAQtAOcBIS4gBC0A5gEhLyAELQDlASEwIAQtAOQBITEgBC0A\\\n4wEhMiAELQDiASEJIAQtAOEBIQogBC0A4AEhCyABIAEpA4ABEB0gASgC8A4iBkE3Tw0KIBYgBkEFdG\\\noiBSAJOgACIAUgCjoAASAFIAs6AAAgBUEDaiAyOgAAIAUgKzoAHCAFIBg6ABggBSAsOgAUIAUgFzoA\\\nECAFIC06AAwgBSAHOgAIIAUgMToABCAFQR9qIBk6AAAgBUEeaiAaOgAAIAVBHWogGzoAACAFQRtqIB\\\nw6AAAgBUEaaiAdOgAAIAVBGWogHjoAACAFQRdqIB86AAAgBUEWaiAgOgAAIAVBFWogIToAACAFQRNq\\\nICI6AAAgBUESaiAjOgAAIAVBEWogJDoAACAFQQ9qICU6AAAgBUEOaiAmOgAAIAVBDWogJzoAACAFQQ\\\ntqICg6AAAgBUEKaiApOgAAIAVBCWogKjoAACAFQQdqIC46AAAgBUEGaiAvOgAAIAVBBWogMDoAACAB\\\nIAZBAWo2AvAOCyABIAEpA4ABID18Ij43A4ABIAMgAEkNAiACIABqIQIgAyAAayIDQYAISw0ACwsgA0\\\nUNFiAIIAIgAxAsGiABIAFBgAFqKQMAEB0MFgsgACADQcCHwAAQPgALIAAgA0Gwh8AAED0ACyAFQcAA\\\nQdCGwAAQPQALIAZBwABB4IbAABA9AAsgBkEgQfCGwAAQPQALIARB8ABqQRhqIARBGGopAwA3AwAgBE\\\n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\\\nAUGAAWopAwAhYiABQdwAaigCACEIIAFB2ABqKAIAIQkgAUHUAGooAgAhCiABQdAAaigCACELIAFBzA\\\nBqKAIAIQwgAUHIAGooAgAhDSABQcQAaigCACEOIAFBwABqKAIAIQ8gAUE8aigCACEQIAFBOGooAgAh\\\nESABQTRqKAIAIRIgAUEwaigCACETIAFBLGooAgAhFCABQShqKAIAIRUgAUEkaigCACEWIAFB/ABqKA\\\nIAIRcgAUH4AGooAgAhGCABQfQAaigCACEZIAFB8ABqKAIAIRogAUHsAGooAgAhGyABQegAaigCACEc\\\nIAFB5ABqKAIAIR0gAUHgAGooAgAhHiABKAIgIR8MAQsgAUGQAWohFwJAAkACQAJAIAFBiQFqLQAAIg\\\nhBBnRBACABQYgBai0AACINa0cNACAFQX5qIQggBUEBTQ0HIAFBigFqLQAAIQ4gA0EYaiAXIAhBBXRq\\\nIgxBGGopAAAiYjcDACADQRBqIAxBEGopAAAiYzcDACADQQhqIAxBCGopAAAiZDcDACADQSBqIAVBBX\\\nQgF2pBYGoiDSkAACJlNwMAIANBKGogDUEIaikAACJmNwMAIANBMGogDUEQaikAACJnNwMAIANBOGog\\\nDUEYaikAACJoNwMAIAMgDCkAACJpNwMAIANB8ABqQThqIGg3AwAgA0HwAGpBMGogZzcDACADQfAAak\\\nEoaiBmNwMAIANB8ABqQSBqIGU3AwAgA0HwAGpBGGogYjcDACADQfAAakEQaiBjNwMAIANB8ABqQQhq\\\nIGQ3AwAgAyBpNwNwIANByAFqIAFBGGopAwA3AwAgA0HAAWogAUEQaikDADcDACADQbgBaiABQQhqKQ\\\nMANwMAIAMgASkDADcDsAEgAyADQfAAakHgABBlIg8gDkEEciIGOgBpQcAAIQ0gD0HAADoAaEIAIWIg\\\nD0IANwNgIAhFDQIgBiEODAELIANB8ABqQcgAaiABQegAaikDADcDACADQfAAakHQAGogAUHwAGopAw\\\nA3AwAgA0HwAGpB2ABqIAFB+ABqKQMANwMAIANB+ABqIAFBKGopAwA3AwAgA0GAAWogAUEwaikDADcD\\\nACADQYgBaiABQThqKQMANwMAIANBkAFqIAFBwABqKQMANwMAIANB8ABqQShqIAFByABqKQMANwMAIA\\\nNB8ABqQTBqIAFB0ABqKQMANwMAIANB8ABqQThqIAFB2ABqKQMANwMAIAMgASkDIDcDcCADIAFB4ABq\\\nKQMANwOwASABQYoBai0AACEMIAFBgAFqKQMAIWIgAyADQfAAakHgABBlIg8gDCAIRXJBAnIiDjoAaS\\\nAPIA06AGggDyBiNwNgIAxBBHIhBiAFIQgLAkAgCEF/aiIgIAVPIhsNACADQfAAakEYaiIhIANBwABq\\\nIgxBGGoiIikCADcDACADQfAAakEQaiIjIAxBEGoiJCkCADcDACADQfAAakEIaiIlIAxBCGoiJikCAD\\\ncDACADIAwpAgA3A3AgA0HwAGogAyANIGIgDhAWICUtAAAhDSAjLQAAIQkgIS0AACEQIANB+wBqIhwt\\\nAAAhCiADQfoAaiIdLQAAIQsgA0H5AGoiHi0AACERIANB/wBqIictAAAhEiADQf4AaiIoLQAAIRMgA0\\\nH9AGoiKS0AACEUIANBgwFqIiotAAAhFSADQYIBaiIrLQAAIRYgA0GBAWoiLC0AACEfIANBhwFqIi0t\\\nAAAhByADQYYBaiIuLQAAIS8gA0GFAWoiMC0AACExIANBiwFqIjItAAAhMyADQYoBaiI0LQAAITUgA0\\\nGJAWoiNi0AACEZIANBjwFqIjctAAAhGiADQY4BaiI4LQAAITkgAy0AcCEOIAMtAHQhOiADLQB8ITsg\\\nAy0AhAEhPCADLQCMASE9IAMtAHMhDyADLQByIT4gAy0AcSE/IAMtAHchQCADLQB2IUEgAy0AdSFCIA\\\nNBPWoiQyADQY0BaiJELQAAIhg6AAAgA0E+aiJFIDk6AAAgA0E/aiJGIBo6AAAgA0E5aiJHIBk6AAAg\\\nA0E6aiJIIDU6AAAgA0E7aiJJIDM6AAAgA0E1aiJKIDE6AAAgA0E2aiJLIC86AAAgA0E3aiJMIAc6AA\\\nAgA0ExaiJNIB86AAAgA0EyaiJOIBY6AAAgA0EzaiJPIBU6AAAgA0EtaiJQIBQ6AAAgA0EuaiJRIBM6\\\nAAAgA0EvaiJSIBI6AAAgA0EpaiJTIBE6AAAgA0EqaiJUIAs6AAAgA0EraiJVIAo6AAAgA0ElaiJWIE\\\nI6AAAgA0EmaiJXIEE6AAAgA0EnaiJYIEA6AAAgA0EhaiJZID86AAAgA0EiaiJaID46AAAgA0EjaiJb\\\nIA86AAAgA0EIaiJcIBcgIEEFdGoiF0EIaikDADcDACADQRBqIl0gF0EQaikDADcDACADQRhqIl4gF0\\\nEYaikDADcDACAMIAEpAwA3AwAgJiABQQhqIl8pAwA3AwAgJCABQRBqImApAwA3AwAgIiABQRhqImEp\\\nAwA3AwAgA0HAADoAaCADID06ADwgAyAQOgA4IAMgPDoANCADIAk6ADAgAyA7OgAsIAMgDToAKCADID\\\no6ACQgAyAOOgAgIAMgBjoAaSADQgA3A2AgAyAXKQMANwMAAkACQCAgRQ0AQQIgCGshFyAIQQV0IAFq\\\nQdAAaiEIA0AgGw0CICEgIikCADcDACAjICQpAgA3AwAgJSAmKQIANwMAIAMgDCkCADcDcCADQfAAai\\\nADQcAAQgAgBhAWICUtAAAhDSAjLQAAIQkgIS0AACEQIBwtAAAhCiAdLQAAIQsgHi0AACERICctAAAh\\\nEiAoLQAAIRMgKS0AACEUICotAAAhFSArLQAAIRYgLC0AACEfIC0tAAAhByAuLQAAIS8gMC0AACExID\\\nItAAAhMyA0LQAAITUgNi0AACEZIDctAAAhGiA4LQAAITkgAy0AcCEOIAMtAHQhOiADLQB8ITsgAy0A\\\nhAEhPCADLQCMASE9IAMtAHMhDyADLQByIT4gAy0AcSE/IAMtAHchQCADLQB2IUEgAy0AdSFCIEMgRC\\\n0AACIYOgAAIEUgOToAACBGIBo6AAAgRyAZOgAAIEggNToAACBJIDM6AAAgSiAxOgAAIEsgLzoAACBM\\\nIAc6AAAgTSAfOgAAIE4gFjoAACBPIBU6AAAgUCAUOgAAIFEgEzoAACBSIBI6AAAgUyAROgAAIFQgCz\\\noAACBVIAo6AAAgViBCOgAAIFcgQToAACBYIEA6AAAgWSA/OgAAIFogPjoAACBbIA86AAAgXCAIQQhq\\\nKQMANwMAIF0gCEEQaikDADcDACBeIAhBGGopAwA3AwAgDCABKQMANwMAICYgXykDADcDACAkIGApAw\\\nA3AwAgIiBhKQMANwMAIANBwAA6AGggAyA9OgA8IAMgEDoAOCADIDw6ADQgAyAJOgAwIAMgOzoALCAD\\\nIA06ACggAyA6OgAkIAMgDjoAICADIAY6AGkgA0IANwNgIAMgCCkDADcDACAIQWBqIQggF0EBaiIXQQ\\\nFHDQALCyAOQf8BcSA/QQh0ckH//wNxIA9BGHQgPkH/AXFBEHRyciEPIDpB/wFxIEJBCHRyQf//A3Eg\\\nQEEYdCBBQf8BcUEQdHJyIQ4gDUH/AXEgEUEIdHJB//8DcSAKQRh0IAtB/wFxQRB0cnIhDSA7Qf8BcS\\\nAUQQh0ckH//wNxIBJBGHQgE0H/AXFBEHRyciEMIAlB/wFxIB9BCHRyQf//A3EgFUEYdCAWQf8BcUEQ\\\ndHJyIQsgPEH/AXEgMUEIdHJB//8DcSAHQRh0IC9B/wFxQRB0cnIhCiAQQf8BcSAZQQh0ckH//wNxID\\\nNBGHQgNUH/AXFBEHRyciEJID1B/wFxIBhBCHRyQf//A3EgGkEYdCA5Qf8BcUEQdHJyIQgMAwtBACAX\\\nayEgCyAgIAVB4IfAABBAAAsgDygCPCEIIA8oAjghCSAPKAI0IQogDygCMCELIA8oAiwhDCAPKAIoIQ\\\n0gDygCJCEOIA8oAiAhDwsgAygCXCEXIAMoAlghGCADKAJUIRkgAygCUCEaIAMoAkwhGyADKAJIIRwg\\\nAygCRCEdIAMoAkAhHiADKAIcIRAgAygCGCERIAMoAhQhEiADKAIQIRMgAygCDCEUIAMoAgghFSADKA\\\nIEIRYgAygCACEfIAFBADYC8A5BwAAhB0IAIWILAkAgAkUNACAcIBNqIBhqIgEgEmogASAHc0EQdyIB\\\nQfLmu+MDaiIHIBhzQRR3Ii9qIjEgC2ogGyARaiAXaiIzIBBqIDMgBkEIckH/AXFzQRB3IgZBuuq/qn\\\npqIjMgF3NBFHciNWoiOSAGc0EYdyInIDNqIiggNXNBGXciKWoiKiAKaiErIDkgCWohLCAxIAFzQRh3\\\nIi0gB2oiLiAvc0EZdyE5IB0gFWogGWoiMCAUaiEyIB4gH2ogGmoiNCAWaiE2QQAhByAEITogAiEBA0\\\nAgAyArICogMiAwIGJCIIinc0EQdyIGQYXdntt7aiIvIBlzQRR3IjFqIjMgBnNBGHciBnNBEHciNSA2\\\nIDQgYqdzQRB3IjtB58yn0AZqIjwgGnNBFHciPWoiPiA7c0EYdyI7IDxqIjxqIj8gKXNBFHciQGoiQS\\\nAQaiAzIA1qIDlqIjMgDGogMyA7c0EQdyIzIChqIjsgOXNBFHciQmoiISAzc0EYdyIzIDtqIjsgQnNB\\\nGXciQmoiIiAfaiAiICwgPCA9c0EZdyI8aiI9IAhqID0gLXNBEHciPSAGIC9qIgZqIi8gPHNBFHciPG\\\noiIyA9c0EYdyI9c0EQdyIiID4gD2ogBiAxc0EZdyIGaiIxIA5qIDEgJ3NBEHciMSAuaiI+IAZzQRR3\\\nIgZqIiQgMXNBGHciMSA+aiI+aiIlIEJzQRR3IkJqIiYgDmogIyATaiBBIDVzQRh3IjUgP2oiPyBAc0\\\nEZdyJAaiJBIApqIEEgMXNBEHciMSA7aiI7IEBzQRR3IkBqIkEgMXNBGHciMSA7aiI7IEBzQRl3IkBq\\\nIiMgCWogIyAhIBRqID4gBnNBGXciBmoiPiANaiA+IDVzQRB3IjUgPSAvaiIvaiI9IAZzQRR3IgZqIj\\\n4gNXNBGHciNXNBEHciISAkIBVqIC8gPHNBGXciL2oiPCARaiA8IDNzQRB3IjMgP2oiPCAvc0EUdyIv\\\naiI/IDNzQRh3IjMgPGoiPGoiIyBAc0EUdyJAaiIkIApqID4gC2ogJiAic0EYdyI+ICVqIiIgQnNBGX\\\nciQmoiJSASaiAlIDNzQRB3IjMgO2oiOyBCc0EUdyJCaiIlIDNzQRh3IjMgO2oiOyBCc0EZdyJCaiIm\\\nIBVqICYgQSAIaiA8IC9zQRl3Ii9qIjwgD2ogPCA+c0EQdyI8IDUgPWoiNWoiPSAvc0EUdyIvaiI+ID\\\nxzQRh3IjxzQRB3IkEgPyAWaiA1IAZzQRl3IgZqIjUgDGogNSAxc0EQdyIxICJqIjUgBnNBFHciBmoi\\\nPyAxc0EYdyIxIDVqIjVqIiIgQnNBFHciQmoiJiAMaiA+IBBqICQgIXNBGHciPiAjaiIhIEBzQRl3Ik\\\nBqIiMgCWogIyAxc0EQdyIxIDtqIjsgQHNBFHciQGoiIyAxc0EYdyIxIDtqIjsgQHNBGXciQGoiJCAI\\\naiAkICUgDWogNSAGc0EZdyIGaiI1IAtqIDUgPnNBEHciNSA8ID1qIjxqIj0gBnNBFHciBmoiPiA1c0\\\nEYdyI1c0EQdyIkID8gFGogPCAvc0EZdyIvaiI8IBNqIDwgM3NBEHciMyAhaiI8IC9zQRR3Ii9qIj8g\\\nM3NBGHciMyA8aiI8aiIhIEBzQRR3IkBqIiUgCWogPiAOaiAmIEFzQRh3Ij4gImoiQSBCc0EZdyJCai\\\nIiIB9qICIgM3NBEHciMyA7aiI7IEJzQRR3IkJqIiIgM3NBGHciMyA7aiI7IEJzQRl3IkJqIiYgFGog\\\nJiAjIA9qIDwgL3NBGXciL2oiPCAWaiA8ID5zQRB3IjwgNSA9aiI1aiI9IC9zQRR3Ii9qIj4gPHNBGH\\\nciPHNBEHciIyA/IBFqIDUgBnNBGXciBmoiNSASaiA1IDFzQRB3IjEgQWoiNSAGc0EUdyIGaiI/IDFz\\\nQRh3IjEgNWoiNWoiQSBCc0EUdyJCaiImIBJqID4gCmogJSAkc0EYdyI+ICFqIiEgQHNBGXciQGoiJC\\\nAIaiAkIDFzQRB3IjEgO2oiOyBAc0EUdyJAaiIkIDFzQRh3IjEgO2oiOyBAc0EZdyJAaiIlIA9qICUg\\\nIiALaiA1IAZzQRl3IgZqIjUgDmogNSA+c0EQdyI1IDwgPWoiPGoiPSAGc0EUdyIGaiI+IDVzQRh3Ij\\\nVzQRB3IiIgPyANaiA8IC9zQRl3Ii9qIjwgEGogPCAzc0EQdyIzICFqIjwgL3NBFHciL2oiPyAzc0EY\\\ndyIzIDxqIjxqIiEgQHNBFHciQGoiJSAIaiA+IAxqICYgI3NBGHciPiBBaiJBIEJzQRl3IkJqIiMgFW\\\nogIyAzc0EQdyIzIDtqIjsgQnNBFHciQmoiIyAzc0EYdyIzIDtqIjsgQnNBGXciQmoiJiANaiAmICQg\\\nFmogPCAvc0EZdyIvaiI8IBFqIDwgPnNBEHciPCA1ID1qIjVqIj0gL3NBFHciL2oiPiA8c0EYdyI8c0\\\nEQdyIkID8gE2ogNSAGc0EZdyIGaiI1IB9qIDUgMXNBEHciMSBBaiI1IAZzQRR3IgZqIj8gMXNBGHci\\\nMSA1aiI1aiJBIEJzQRR3IkJqIiYgH2ogPiAJaiAlICJzQRh3Ij4gIWoiISBAc0EZdyJAaiIiIA9qIC\\\nIgMXNBEHciMSA7aiI7IEBzQRR3IkBqIiIgMXNBGHciMSA7aiI7IEBzQRl3IkBqIiUgFmogJSAjIA5q\\\nIDUgBnNBGXciBmoiNSAMaiA1ID5zQRB3IjUgPCA9aiI8aiI9IAZzQRR3IgZqIj4gNXNBGHciNXNBEH\\\nciIyA/IAtqIDwgL3NBGXciL2oiPCAKaiA8IDNzQRB3IjMgIWoiPCAvc0EUdyIvaiI/IDNzQRh3IjMg\\\nPGoiPGoiISBAc0EUdyJAaiIlIA9qID4gEmogJiAkc0EYdyI+IEFqIkEgQnNBGXciQmoiJCAUaiAkID\\\nNzQRB3IjMgO2oiOyBCc0EUdyJCaiIkIDNzQRh3IjMgO2oiOyBCc0EZdyJCaiImIAtqICYgIiARaiA8\\\nIC9zQRl3Ii9qIjwgE2ogPCA+c0EQdyI8IDUgPWoiNWoiPSAvc0EUdyIvaiI+IDxzQRh3IjxzQRB3Ii\\\nIgPyAQaiA1IAZzQRl3IgZqIjUgFWogNSAxc0EQdyIxIEFqIjUgBnNBFHciBmoiPyAxc0EYdyIxIDVq\\\nIjVqIkEgQnNBFHciQmoiJiAVaiA+IAhqICUgI3NBGHciPiAhaiIhIEBzQRl3IkBqIiMgFmogIyAxc0\\\nEQdyIxIDtqIjsgQHNBFHciQGoiIyAxc0EYdyIxIDtqIjsgQHNBGXciQGoiJSARaiAlICQgDGogNSAG\\\nc0EZdyIGaiI1IBJqIDUgPnNBEHciNSA8ID1qIjxqIj0gBnNBFHciBmoiPiA1c0EYdyI1c0EQdyIkID\\\n8gDmogPCAvc0EZdyIvaiI8IAlqIDwgM3NBEHciMyAhaiI8IC9zQRR3Ii9qIj8gM3NBGHciMyA8aiI8\\\naiIhIEBzQRR3IkBqIiUgFmogPiAfaiAmICJzQRh3Ij4gQWoiQSBCc0EZdyJCaiIiIA1qICIgM3NBEH\\\nciMyA7aiI7IEJzQRR3IkJqIiIgM3NBGHciMyA7aiI7IEJzQRl3IkJqIiYgDmogJiAjIBNqIDwgL3NB\\\nGXciL2oiPCAQaiA8ID5zQRB3IjwgNSA9aiI1aiI9IC9zQRR3Ii9qIj4gPHNBGHciPHNBEHciIyA/IA\\\npqIDUgBnNBGXciBmoiNSAUaiA1IDFzQRB3IjEgQWoiNSAGc0EUdyIGaiI/IDFzQRh3IjEgNWoiNWoi\\\nQSBCc0EUdyJCaiImIBRqID4gD2ogJSAkc0EYdyI+ICFqIiEgQHNBGXciQGoiJCARaiAkIDFzQRB3Ij\\\nEgO2oiOyBAc0EUdyJAaiIkIDFzQRh3IiUgO2oiMSBAc0EZdyI7aiJAIBNqIEAgIiASaiA1IAZzQRl3\\\nIgZqIjUgH2ogNSA+c0EQdyI1IDwgPWoiPGoiPSAGc0EUdyI+aiIiIDVzQRh3IjVzQRB3IgYgPyAMai\\\nA8IC9zQRl3Ii9qIjwgCGogPCAzc0EQdyIzICFqIjwgL3NBFHciP2oiQCAzc0EYdyIvIDxqIjxqIjMg\\\nO3NBFHciO2oiISAGc0EYdyIGIBlzNgI0IAMgIiAVaiAmICNzQRh3IiIgQWoiQSBCc0EZdyJCaiIjIA\\\ntqICMgL3NBEHciLyAxaiIxIEJzQRR3IkJqIiMgL3NBGHciLyAaczYCMCADIC8gMWoiMSAbczYCLCAD\\\nIAYgM2oiMyAeczYCICADIDEgJCAQaiA8ID9zQRl3IjxqIj8gCmogPyAic0EQdyI/IDUgPWoiNWoiPS\\\nA8c0EUdyI8aiIiczYCDCADIDMgQCAJaiA1ID5zQRl3IjVqIj4gDWogPiAlc0EQdyI+IEFqIkAgNXNB\\\nFHciQWoiJHM2AgAgAyAiID9zQRh3IjUgGHM2AjggAyAxIEJzQRl3IDVzNgIYIAMgJCA+c0EYdyIxIB\\\ndzNgI8IAMgNSA9aiI1IB1zNgIkIAMgMyA7c0EZdyAxczYCHCADIDUgI3M2AgQgAyAxIEBqIjEgHHM2\\\nAiggAyAxICFzNgIIIAMgNSA8c0EZdyAvczYCECADIDEgQXNBGXcgBnM2AhQgB0H/AXEiL0HBAE8NBU\\\nEAIAcgAUHAACAvayIGIAEgBkkbIgZqIgcgB0H/AXFBwABGIjEbIQcgOiADIC9qIAYQZSAGaiE6IGIg\\\nMa18IWIgASAGayIBDQALCyAAIAI2AgQgACAENgIAIANB0AFqJAAPCxBKAAsACyAIIAVB0IfAABBAAA\\\nsgL0HAAEHwh8AAED4AC4UuAgN/J34gACABKQAoIgYgAEEwaiIDKQMAIgcgACkDECIIfCABKQAgIgl8\\\nIgp8IAogAoVC6/qG2r+19sEfhUIgiSILQqvw0/Sv7ry3PHwiDCAHhUIoiSINfCIOIAEpAGAiAnwgAS\\\nkAOCIHIABBOGoiBCkDACIPIAApAxgiEHwgASkAMCIKfCIRfCARQvnC+JuRo7Pw2wCFQiCJIhFC8e30\\\n+KWn/aelf3wiEiAPhUIoiSIPfCITIBGFQjCJIhQgEnwiFSAPhUIBiSIWfCIXIAEpAGgiD3wgFyABKQ\\\nAYIhEgAEEoaiIFKQMAIhggACkDCCIZfCABKQAQIhJ8Ihp8IBpCn9j52cKR2oKbf4VCIIkiGkK7zqqm\\\n2NDrs7t/fCIbIBiFQiiJIhx8Ih0gGoVCMIkiHoVCIIkiHyABKQAIIhcgACkDICIgIAApAwAiIXwgAS\\\nkAACIYfCIafCAAKQNAIBqFQtGFmu/6z5SH0QCFQiCJIhpCiJLznf/M+YTqAHwiIiAghUIoiSIjfCIk\\\nIBqFQjCJIiUgInwiInwiJiAWhUIoiSInfCIoIAEpAEgiFnwgHSABKQBQIhp8IA4gC4VCMIkiDiAMfC\\\nIdIA2FQgGJIgx8Ig0gASkAWCILfCANICWFQiCJIg0gFXwiFSAMhUIoiSIMfCIlIA2FQjCJIikgFXwi\\\nFSAMhUIBiSIqfCIrIAEpAHgiDHwgKyATIAEpAHAiDXwgIiAjhUIBiSITfCIiIAx8ICIgDoVCIIkiDi\\\nAeIBt8Iht8Ih4gE4VCKIkiE3wiIiAOhUIwiSIjhUIgiSIrICQgASkAQCIOfCAbIByFQgGJIht8Ihwg\\\nFnwgHCAUhUIgiSIUIB18IhwgG4VCKIkiG3wiHSAUhUIwiSIUIBx8Ihx8IiQgKoVCKIkiKnwiLCALfC\\\nAiIA98ICggH4VCMIkiHyAmfCIiICeFQgGJIiZ8IicgCnwgJyAUhUIgiSIUIBV8IhUgJoVCKIkiJnwi\\\nJyAUhUIwiSIUIBV8IhUgJoVCAYkiJnwiKCAHfCAoICUgCXwgHCAbhUIBiSIbfCIcIA58IBwgH4VCII\\\nkiHCAjIB58Ih58Ih8gG4VCKIkiG3wiIyAchUIwiSIchUIgiSIlIB0gDXwgHiAThUIBiSITfCIdIBp8\\\nIB0gKYVCIIkiHSAifCIeIBOFQiiJIhN8IiIgHYVCMIkiHSAefCIefCIoICaFQiiJIiZ8IikgBnwgIy\\\nAYfCAsICuFQjCJIiMgJHwiJCAqhUIBiSIqfCIrIBJ8ICsgHYVCIIkiHSAVfCIVICqFQiiJIip8Iisg\\\nHYVCMIkiHSAVfCIVICqFQgGJIip8IiwgEnwgLCAnIAZ8IB4gE4VCAYkiE3wiHiARfCAeICOFQiCJIh\\\n4gHCAffCIcfCIfIBOFQiiJIhN8IiMgHoVCMIkiHoVCIIkiJyAiIBd8IBwgG4VCAYkiG3wiHCACfCAc\\\nIBSFQiCJIhQgJHwiHCAbhUIoiSIbfCIiIBSFQjCJIhQgHHwiHHwiJCAqhUIoiSIqfCIsIAd8ICMgDH\\\nwgKSAlhUIwiSIjICh8IiUgJoVCAYkiJnwiKCAPfCAoIBSFQiCJIhQgFXwiFSAmhUIoiSImfCIoIBSF\\\nQjCJIhQgFXwiFSAmhUIBiSImfCIpIBd8ICkgKyACfCAcIBuFQgGJIht8IhwgGHwgHCAjhUIgiSIcIB\\\n4gH3wiHnwiHyAbhUIoiSIbfCIjIByFQjCJIhyFQiCJIikgIiALfCAeIBOFQgGJIhN8Ih4gDnwgHiAd\\\nhUIgiSIdICV8Ih4gE4VCKIkiE3wiIiAdhUIwiSIdIB58Ih58IiUgJoVCKIkiJnwiKyAPfCAjIBF8IC\\\nwgJ4VCMIkiIyAkfCIkICqFQgGJIid8IiogCnwgKiAdhUIgiSIdIBV8IhUgJ4VCKIkiJ3wiKiAdhUIw\\\niSIdIBV8IhUgJ4VCAYkiJ3wiLCACfCAsICggFnwgHiAThUIBiSITfCIeIAl8IB4gI4VCIIkiHiAcIB\\\n98Ihx8Ih8gE4VCKIkiE3wiIyAehUIwiSIehUIgiSIoICIgGnwgHCAbhUIBiSIbfCIcIA18IBwgFIVC\\\nIIkiFCAkfCIcIBuFQiiJIht8IiIgFIVCMIkiFCAcfCIcfCIkICeFQiiJIid8IiwgCXwgIyALfCArIC\\\nmFQjCJIiMgJXwiJSAmhUIBiSImfCIpIA18ICkgFIVCIIkiFCAVfCIVICaFQiiJIiZ8IikgFIVCMIki\\\nFCAVfCIVICaFQgGJIiZ8IisgGHwgKyAqIBF8IBwgG4VCAYkiG3wiHCAXfCAcICOFQiCJIhwgHiAffC\\\nIefCIfIBuFQiiJIht8IiMgHIVCMIkiHIVCIIkiKiAiIAd8IB4gE4VCAYkiE3wiHiAWfCAeIB2FQiCJ\\\nIh0gJXwiHiAThUIoiSITfCIiIB2FQjCJIh0gHnwiHnwiJSAmhUIoiSImfCIrIBJ8ICMgBnwgLCAohU\\\nIwiSIjICR8IiQgJ4VCAYkiJ3wiKCAafCAoIB2FQiCJIh0gFXwiFSAnhUIoiSInfCIoIB2FQjCJIh0g\\\nFXwiFSAnhUIBiSInfCIsIAl8ICwgKSAMfCAeIBOFQgGJIhN8Ih4gDnwgHiAjhUIgiSIeIBwgH3wiHH\\\nwiHyAThUIoiSITfCIjIB6FQjCJIh6FQiCJIikgIiASfCAcIBuFQgGJIht8IhwgCnwgHCAUhUIgiSIU\\\nICR8IhwgG4VCKIkiG3wiIiAUhUIwiSIUIBx8Ihx8IiQgJ4VCKIkiJ3wiLCAKfCAjIBp8ICsgKoVCMI\\\nkiIyAlfCIlICaFQgGJIiZ8IiogDHwgKiAUhUIgiSIUIBV8IhUgJoVCKIkiJnwiKiAUhUIwiSIUIBV8\\\nIhUgJoVCAYkiJnwiKyAOfCArICggBnwgHCAbhUIBiSIbfCIcIAd8IBwgI4VCIIkiHCAeIB98Ih58Ih\\\n8gG4VCKIkiG3wiIyAchUIwiSIchUIgiSIoICIgFnwgHiAThUIBiSITfCIeIBh8IB4gHYVCIIkiHSAl\\\nfCIeIBOFQiiJIhN8IiIgHYVCMIkiHSAefCIefCIlICaFQiiJIiZ8IisgGHwgIyALfCAsICmFQjCJIi\\\nMgJHwiJCAnhUIBiSInfCIpIAJ8ICkgHYVCIIkiHSAVfCIVICeFQiiJIid8IikgHYVCMIkiHSAVfCIV\\\nICeFQgGJIid8IiwgC3wgLCAqIBF8IB4gE4VCAYkiE3wiHiAPfCAeICOFQiCJIh4gHCAffCIcfCIfIB\\\nOFQiiJIhN8IiMgHoVCMIkiHoVCIIkiKiAiIA18IBwgG4VCAYkiG3wiHCAXfCAcIBSFQiCJIhQgJHwi\\\nHCAbhUIoiSIbfCIiIBSFQjCJIhQgHHwiHHwiJCAnhUIoiSInfCIsIAx8ICMgDnwgKyAohUIwiSIjIC\\\nV8IiUgJoVCAYkiJnwiKCARfCAoIBSFQiCJIhQgFXwiFSAmhUIoiSImfCIoIBSFQjCJIhQgFXwiFSAm\\\nhUIBiSImfCIrIA18ICsgKSAKfCAcIBuFQgGJIht8IhwgGnwgHCAjhUIgiSIcIB4gH3wiHnwiHyAbhU\\\nIoiSIbfCIjIByFQjCJIhyFQiCJIikgIiASfCAeIBOFQgGJIhN8Ih4gAnwgHiAdhUIgiSIdICV8Ih4g\\\nE4VCKIkiE3wiIiAdhUIwiSIdIB58Ih58IiUgJoVCKIkiJnwiKyANfCAjIAd8ICwgKoVCMIkiIyAkfC\\\nIkICeFQgGJIid8IiogBnwgKiAdhUIgiSIdIBV8IhUgJ4VCKIkiJ3wiKiAdhUIwiSIdIBV8IhUgJ4VC\\\nAYkiJ3wiLCAPfCAsICggF3wgHiAThUIBiSITfCIeIBZ8IB4gI4VCIIkiHiAcIB98Ihx8Ih8gE4VCKI\\\nkiE3wiIyAehUIwiSIehUIgiSIoICIgCXwgHCAbhUIBiSIbfCIcIA98IBwgFIVCIIkiFCAkfCIcIBuF\\\nQiiJIht8IiIgFIVCMIkiFCAcfCIcfCIkICeFQiiJIid8IiwgFnwgIyAJfCArICmFQjCJIiMgJXwiJS\\\nAmhUIBiSImfCIpIBp8ICkgFIVCIIkiFCAVfCIVICaFQiiJIiZ8IikgFIVCMIkiFCAVfCIVICaFQgGJ\\\nIiZ8IisgEnwgKyAqIBd8IBwgG4VCAYkiG3wiHCAMfCAcICOFQiCJIhwgHiAffCIefCIfIBuFQiiJIh\\\nt8IiMgHIVCMIkiHIVCIIkiKiAiIAJ8IB4gE4VCAYkiE3wiHiAGfCAeIB2FQiCJIh0gJXwiHiAThUIo\\\niSITfCIiIB2FQjCJIh0gHnwiHnwiJSAmhUIoiSImfCIrIAJ8ICMgCnwgLCAohUIwiSIjICR8IiQgJ4\\\nVCAYkiJ3wiKCARfCAoIB2FQiCJIh0gFXwiFSAnhUIoiSInfCIoIB2FQjCJIh0gFXwiFSAnhUIBiSIn\\\nfCIsIBd8ICwgKSAOfCAeIBOFQgGJIhN8Ih4gC3wgHiAjhUIgiSIeIBwgH3wiHHwiHyAThUIoiSITfC\\\nIjIB6FQjCJIh6FQiCJIikgIiAYfCAcIBuFQgGJIht8IhwgB3wgHCAUhUIgiSIUICR8IhwgG4VCKIki\\\nG3wiIiAUhUIwiSIUIBx8Ihx8IiQgJ4VCKIkiJ3wiLCAOfCAjIBF8ICsgKoVCMIkiIyAlfCIlICaFQg\\\nGJIiZ8IiogFnwgKiAUhUIgiSIUIBV8IhUgJoVCKIkiJnwiKiAUhUIwiSIUIBV8IhUgJoVCAYkiJnwi\\\nKyAKfCArICggB3wgHCAbhUIBiSIbfCIcIA18IBwgI4VCIIkiHCAeIB98Ih58Ih8gG4VCKIkiG3wiIy\\\nAchUIwiSIchUIgiSIoICIgD3wgHiAThUIBiSITfCIeIAt8IB4gHYVCIIkiHSAlfCIeIBOFQiiJIhN8\\\nIiIgHYVCMIkiHSAefCIefCIlICaFQiiJIiZ8IisgC3wgIyAMfCAsICmFQjCJIiMgJHwiJCAnhUIBiS\\\nInfCIpIAl8ICkgHYVCIIkiHSAVfCIVICeFQiiJIid8IikgHYVCMIkiHSAVfCIVICeFQgGJIid8Iiwg\\\nEXwgLCAqIBJ8IB4gE4VCAYkiE3wiHiAafCAeICOFQiCJIh4gHCAffCIcfCIfIBOFQiiJIhN8IiMgHo\\\nVCMIkiHoVCIIkiKiAiIAZ8IBwgG4VCAYkiG3wiHCAYfCAcIBSFQiCJIhQgJHwiHCAbhUIoiSIbfCIi\\\nIBSFQjCJIhQgHHwiHHwiJCAnhUIoiSInfCIsIBd8ICMgGHwgKyAohUIwiSIjICV8IiUgJoVCAYkiJn\\\nwiKCAOfCAoIBSFQiCJIhQgFXwiFSAmhUIoiSImfCIoIBSFQjCJIhQgFXwiFSAmhUIBiSImfCIrIAl8\\\nICsgKSANfCAcIBuFQgGJIht8IhwgFnwgHCAjhUIgiSIcIB4gH3wiHnwiHyAbhUIoiSIbfCIjIByFQj\\\nCJIhyFQiCJIikgIiAKfCAeIBOFQgGJIhN8Ih4gDHwgHiAdhUIgiSIdICV8Ih4gE4VCKIkiE3wiIiAd\\\nhUIwiSIdIB58Ih58IiUgJoVCKIkiJnwiKyAHfCAjIA98ICwgKoVCMIkiIyAkfCIkICeFQgGJIid8Ii\\\nogB3wgKiAdhUIgiSIdIBV8IhUgJ4VCKIkiJ3wiKiAdhUIwiSIdIBV8IhUgJ4VCAYkiJ3wiLCAKfCAs\\\nICggGnwgHiAThUIBiSITfCIeIAZ8IB4gI4VCIIkiHiAcIB98Ihx8Ih8gE4VCKIkiE3wiIyAehUIwiS\\\nIehUIgiSIoICIgAnwgHCAbhUIBiSIbfCIcIBJ8IBwgFIVCIIkiFCAkfCIcIBuFQiiJIht8IiIgFIVC\\\nMIkiFCAcfCIcfCIkICeFQiiJIid8IiwgEXwgIyAXfCArICmFQjCJIiMgJXwiJSAmhUIBiSImfCIpIA\\\nZ8ICkgFIVCIIkiFCAVfCIVICaFQiiJIiZ8IikgFIVCMIkiFCAVfCIVICaFQgGJIiZ8IisgAnwgKyAq\\\nIA58IBwgG4VCAYkiG3wiHCAJfCAcICOFQiCJIhwgHiAffCIefCIfIBuFQiiJIht8IiMgHIVCMIkiHI\\\nVCIIkiKiAiIBp8IB4gE4VCAYkiE3wiHiASfCAeIB2FQiCJIh0gJXwiHiAThUIoiSITfCIiIB2FQjCJ\\\nIh0gHnwiHnwiJSAmhUIoiSImfCIrIAl8ICMgFnwgLCAohUIwiSIjICR8IiQgJ4VCAYkiJ3wiKCANfC\\\nAoIB2FQiCJIh0gFXwiFSAnhUIoiSInfCIoIB2FQjCJIh0gFXwiFSAnhUIBiSInfCIsIAZ8ICwgKSAP\\\nfCAeIBOFQgGJIhN8Ih4gGHwgHiAjhUIgiSIeIBwgH3wiHHwiHyAThUIoiSITfCIjIB6FQjCJIh6FQi\\\nCJIikgIiAMfCAcIBuFQgGJIht8IhwgC3wgHCAUhUIgiSIUICR8IhwgG4VCKIkiG3wiIiAUhUIwiSIU\\\nIBx8Ihx8IiQgJ4VCKIkiJ3wiLCACfCAjIAp8ICsgKoVCMIkiIyAlfCIlICaFQgGJIiZ8IiogB3wgKi\\\nAUhUIgiSIUIBV8IhUgJoVCKIkiJnwiKiAUhUIwiSIUIBV8IhUgJoVCAYkiJnwiKyAPfCArICggEnwg\\\nHCAbhUIBiSIbfCIcIBF8IBwgI4VCIIkiHCAeIB98Ih58Ih8gG4VCKIkiG3wiIyAchUIwiSIchUIgiS\\\nIoICIgGHwgHiAThUIBiSITfCIeIBd8IB4gHYVCIIkiHSAlfCIeIBOFQiiJIhN8IiIgHYVCMIkiHSAe\\\nfCIefCIlICaFQiiJIiZ8IisgFnwgIyAafCAsICmFQjCJIiMgJHwiJCAnhUIBiSInfCIpIAt8ICkgHY\\\nVCIIkiHSAVfCIVICeFQiiJIid8IikgHYVCMIkiHSAVfCIVICeFQgGJIid8IiwgDHwgLCAqIA18IB4g\\\nE4VCAYkiE3wiHiAMfCAeICOFQiCJIgwgHCAffCIcfCIeIBOFQiiJIhN8Ih8gDIVCMIkiDIVCIIkiIy\\\nAiIA58IBwgG4VCAYkiG3wiHCAWfCAcIBSFQiCJIhYgJHwiFCAbhUIoiSIbfCIcIBaFQjCJIhYgFHwi\\\nFHwiIiAnhUIoiSIkfCInIAt8IB8gD3wgKyAohUIwiSIPICV8IgsgJoVCAYkiH3wiJSAKfCAlIBaFQi\\\nCJIgogFXwiFiAfhUIoiSIVfCIfIAqFQjCJIgogFnwiFiAVhUIBiSIVfCIlIAd8ICUgKSAJfCAUIBuF\\\nQgGJIgl8IgcgDnwgByAPhUIgiSIHIAwgHnwiD3wiDCAJhUIoiSIJfCIOIAeFQjCJIgeFQiCJIhQgHC\\\nANfCAPIBOFQgGJIg98Ig0gGnwgDSAdhUIgiSIaIAt8IgsgD4VCKIkiD3wiDSAahUIwiSIaIAt8Igt8\\\nIhMgFYVCKIkiFXwiGyAIhSANIBd8IAcgDHwiByAJhUIBiSIJfCIXIAJ8IBcgCoVCIIkiAiAnICOFQj\\\nCJIgogInwiF3wiDCAJhUIoiSIJfCINIAKFQjCJIgIgDHwiDIU3AxAgACAZIBIgDiAYfCAXICSFQgGJ\\\nIhd8Ihh8IBggGoVCIIkiEiAWfCIYIBeFQiiJIhd8IhaFIBEgHyAGfCALIA+FQgGJIgZ8Ig98IA8gCo\\\nVCIIkiCiAHfCIHIAaFQiiJIgZ8Ig8gCoVCMIkiCiAHfCIHhTcDCCAAIA0gIYUgGyAUhUIwiSIRIBN8\\\nIhqFNwMAIAAgDyAQhSAWIBKFQjCJIg8gGHwiEoU3AxggBSAFKQMAIAwgCYVCAYmFIBGFNwMAIAQgBC\\\nkDACAaIBWFQgGJhSAChTcDACAAICAgByAGhUIBiYUgD4U3AyAgAyADKQMAIBIgF4VCAYmFIAqFNwMA\\\nC4UsASB/IAAgASgALCICIAEoACgiAyABKAAUIgQgBCABKAA0IgUgAyAEIAEoABwiBiABKAAkIgcgAS\\\ngAICIIIAcgASgAGCIJIAYgAiAJIAEoAAQiCiAAKAIQIgtqIAAoAggiDEEKdyINIAAoAgQiDnMgDCAO\\\ncyAAKAIMIg9zIAAoAgAiEGogASgAACIRakELdyALaiISc2pBDncgD2oiE0EKdyIUaiABKAAQIhUgDk\\\nEKdyIWaiABKAAIIhcgD2ogEiAWcyATc2pBD3cgDWoiGCAUcyABKAAMIhkgDWogEyASQQp3IhJzIBhz\\\nakEMdyAWaiITc2pBBXcgEmoiGiATQQp3IhtzIAQgEmogEyAYQQp3IhJzIBpzakEIdyAUaiITc2pBB3\\\ncgEmoiFEEKdyIYaiAHIBpBCnciGmogEiAGaiATIBpzIBRzakEJdyAbaiISIBhzIBsgCGogFCATQQp3\\\nIhNzIBJzakELdyAaaiIUc2pBDXcgE2oiGiAUQQp3IhtzIBMgA2ogFCASQQp3IhNzIBpzakEOdyAYai\\\nIUc2pBD3cgE2oiGEEKdyIcaiAbIAVqIBggFEEKdyIdcyATIAEoADAiEmogFCAaQQp3IhpzIBhzakEG\\\ndyAbaiIUc2pBB3cgGmoiGEEKdyIbIB0gASgAPCITaiAYIBRBCnciHnMgGiABKAA4IgFqIBQgHHMgGH\\\nNqQQl3IB1qIhpzakEIdyAcaiIUQX9zcWogFCAacWpBmfOJ1AVqQQd3IB5qIhhBCnciHGogBSAbaiAU\\\nQQp3Ih0gFSAeaiAaQQp3IhogGEF/c3FqIBggFHFqQZnzidQFakEGdyAbaiIUQX9zcWogFCAYcWpBmf\\\nOJ1AVqQQh3IBpqIhhBCnciGyADIB1qIBRBCnciHiAKIBpqIBwgGEF/c3FqIBggFHFqQZnzidQFakEN\\\ndyAdaiIUQX9zcWogFCAYcWpBmfOJ1AVqQQt3IBxqIhhBf3NxaiAYIBRxakGZ84nUBWpBCXcgHmoiGk\\\nEKdyIcaiAZIBtqIBhBCnciHSATIB5qIBRBCnciHiAaQX9zcWogGiAYcWpBmfOJ1AVqQQd3IBtqIhRB\\\nf3NxaiAUIBpxakGZ84nUBWpBD3cgHmoiGEEKdyIbIBEgHWogFEEKdyIfIBIgHmogHCAYQX9zcWogGC\\\nAUcWpBmfOJ1AVqQQd3IB1qIhRBf3NxaiAUIBhxakGZ84nUBWpBDHcgHGoiGEF/c3FqIBggFHFqQZnz\\\nidQFakEPdyAfaiIaQQp3IhxqIBcgG2ogGEEKdyIdIAQgH2ogFEEKdyIeIBpBf3NxaiAaIBhxakGZ84\\\nnUBWpBCXcgG2oiFEF/c3FqIBQgGnFqQZnzidQFakELdyAeaiIYQQp3IhogAiAdaiAUQQp3IhsgASAe\\\naiAcIBhBf3NxaiAYIBRxakGZ84nUBWpBB3cgHWoiFEF/c3FqIBQgGHFqQZnzidQFakENdyAcaiIYQX\\\n9zIh5xaiAYIBRxakGZ84nUBWpBDHcgG2oiHEEKdyIdaiAVIBhBCnciGGogASAUQQp3IhRqIAMgGmog\\\nGSAbaiAcIB5yIBRzakGh1+f2BmpBC3cgGmoiGiAcQX9zciAYc2pBodfn9gZqQQ13IBRqIhQgGkF/c3\\\nIgHXNqQaHX5/YGakEGdyAYaiIYIBRBf3NyIBpBCnciGnNqQaHX5/YGakEHdyAdaiIbIBhBf3NyIBRB\\\nCnciFHNqQaHX5/YGakEOdyAaaiIcQQp3Ih1qIBcgG0EKdyIeaiAKIBhBCnciGGogCCAUaiATIBpqIB\\\nwgG0F/c3IgGHNqQaHX5/YGakEJdyAUaiIUIBxBf3NyIB5zakGh1+f2BmpBDXcgGGoiGCAUQX9zciAd\\\nc2pBodfn9gZqQQ93IB5qIhogGEF/c3IgFEEKdyIUc2pBodfn9gZqQQ53IB1qIhsgGkF/c3IgGEEKdy\\\nIYc2pBodfn9gZqQQh3IBRqIhxBCnciHWogAiAbQQp3Ih5qIAUgGkEKdyIaaiAJIBhqIBEgFGogHCAb\\\nQX9zciAac2pBodfn9gZqQQ13IBhqIhQgHEF/c3IgHnNqQaHX5/YGakEGdyAaaiIYIBRBf3NyIB1zak\\\nGh1+f2BmpBBXcgHmoiGiAYQX9zciAUQQp3IhtzakGh1+f2BmpBDHcgHWoiHCAaQX9zciAYQQp3Ihhz\\\nakGh1+f2BmpBB3cgG2oiHUEKdyIUaiAHIBpBCnciGmogEiAbaiAdIBxBf3NyIBpzakGh1+f2BmpBBX\\\ncgGGoiGyAUQX9zcWogCiAYaiAdIBxBCnciGEF/c3FqIBsgGHFqQdz57vh4akELdyAaaiIcIBRxakHc\\\n+e74eGpBDHcgGGoiHSAcQQp3IhpBf3NxaiACIBhqIBwgG0EKdyIYQX9zcWogHSAYcWpB3Pnu+HhqQQ\\\n53IBRqIhwgGnFqQdz57vh4akEPdyAYaiIeQQp3IhRqIBIgHUEKdyIbaiARIBhqIBwgG0F/c3FqIB4g\\\nG3FqQdz57vh4akEOdyAaaiIdIBRBf3NxaiAIIBpqIB4gHEEKdyIYQX9zcWogHSAYcWpB3Pnu+HhqQQ\\\n93IBtqIhsgFHFqQdz57vh4akEJdyAYaiIcIBtBCnciGkF/c3FqIBUgGGogGyAdQQp3IhhBf3NxaiAc\\\nIBhxakHc+e74eGpBCHcgFGoiHSAacWpB3Pnu+HhqQQl3IBhqIh5BCnciFGogEyAcQQp3IhtqIBkgGG\\\nogHSAbQX9zcWogHiAbcWpB3Pnu+HhqQQ53IBpqIhwgFEF/c3FqIAYgGmogHiAdQQp3IhhBf3NxaiAc\\\nIBhxakHc+e74eGpBBXcgG2oiGyAUcWpB3Pnu+HhqQQZ3IBhqIh0gG0EKdyIaQX9zcWogASAYaiAbIB\\\nxBCnciGEF/c3FqIB0gGHFqQdz57vh4akEIdyAUaiIcIBpxakHc+e74eGpBBncgGGoiHkEKdyIfaiAR\\\nIBxBCnciFGogFSAdQQp3IhtqIBcgGmogHiAUQX9zcWogCSAYaiAcIBtBf3NxaiAeIBtxakHc+e74eG\\\npBBXcgGmoiGCAUcWpB3Pnu+HhqQQx3IBtqIhogGCAfQX9zcnNqQc76z8p6akEJdyAUaiIUIBogGEEK\\\ndyIYQX9zcnNqQc76z8p6akEPdyAfaiIbIBQgGkEKdyIaQX9zcnNqQc76z8p6akEFdyAYaiIcQQp3Ih\\\n1qIBcgG0EKdyIeaiASIBRBCnciFGogBiAaaiAHIBhqIBwgGyAUQX9zcnNqQc76z8p6akELdyAaaiIY\\\nIBwgHkF/c3JzakHO+s/KempBBncgFGoiFCAYIB1Bf3Nyc2pBzvrPynpqQQh3IB5qIhogFCAYQQp3Ih\\\nhBf3Nyc2pBzvrPynpqQQ13IB1qIhsgGiAUQQp3IhRBf3Nyc2pBzvrPynpqQQx3IBhqIhxBCnciHWog\\\nCCAbQQp3Ih5qIBkgGkEKdyIaaiAKIBRqIAEgGGogHCAbIBpBf3Nyc2pBzvrPynpqQQV3IBRqIhQgHC\\\nAeQX9zcnNqQc76z8p6akEMdyAaaiIYIBQgHUF/c3JzakHO+s/KempBDXcgHmoiGiAYIBRBCnciFEF/\\\nc3JzakHO+s/KempBDncgHWoiGyAaIBhBCnciGEF/c3JzakHO+s/KempBC3cgFGoiHEEKdyIgIAAoAg\\\nxqIAcgESAVIBEgAiAZIAogEyARIBIgEyAXIBAgDCAPQX9zciAOc2ogBGpB5peKhQVqQQh3IAtqIh1B\\\nCnciHmogFiAHaiANIBFqIA8gBmogCyAdIA4gDUF/c3JzaiABakHml4qFBWpBCXcgD2oiDyAdIBZBf3\\\nNyc2pB5peKhQVqQQl3IA1qIg0gDyAeQX9zcnNqQeaXioUFakELdyAWaiIWIA0gD0EKdyIPQX9zcnNq\\\nQeaXioUFakENdyAeaiILIBYgDUEKdyINQX9zcnNqQeaXioUFakEPdyAPaiIdQQp3Ih5qIAkgC0EKdy\\\nIfaiAFIBZBCnciFmogFSANaiACIA9qIB0gCyAWQX9zcnNqQeaXioUFakEPdyANaiINIB0gH0F/c3Jz\\\nakHml4qFBWpBBXcgFmoiDyANIB5Bf3Nyc2pB5peKhQVqQQd3IB9qIhYgDyANQQp3Ig1Bf3Nyc2pB5p\\\neKhQVqQQd3IB5qIgsgFiAPQQp3Ig9Bf3Nyc2pB5peKhQVqQQh3IA1qIh1BCnciHmogGSALQQp3Ih9q\\\nIAMgFkEKdyIWaiAKIA9qIAggDWogHSALIBZBf3Nyc2pB5peKhQVqQQt3IA9qIg0gHSAfQX9zcnNqQe\\\naXioUFakEOdyAWaiIPIA0gHkF/c3JzakHml4qFBWpBDncgH2oiFiAPIA1BCnciC0F/c3JzakHml4qF\\\nBWpBDHcgHmoiHSAWIA9BCnciHkF/c3JzakHml4qFBWpBBncgC2oiH0EKdyINaiAZIBZBCnciD2ogCS\\\nALaiAdIA9Bf3NxaiAfIA9xakGkorfiBWpBCXcgHmoiCyANQX9zcWogAiAeaiAfIB1BCnciFkF/c3Fq\\\nIAsgFnFqQaSit+IFakENdyAPaiIdIA1xakGkorfiBWpBD3cgFmoiHiAdQQp3Ig9Bf3NxaiAGIBZqIB\\\n0gC0EKdyIWQX9zcWogHiAWcWpBpKK34gVqQQd3IA1qIh0gD3FqQaSit+IFakEMdyAWaiIfQQp3Ig1q\\\nIAMgHkEKdyILaiAFIBZqIB0gC0F/c3FqIB8gC3FqQaSit+IFakEIdyAPaiIeIA1Bf3NxaiAEIA9qIB\\\n8gHUEKdyIPQX9zcWogHiAPcWpBpKK34gVqQQl3IAtqIgsgDXFqQaSit+IFakELdyAPaiIdIAtBCnci\\\nFkF/c3FqIAEgD2ogCyAeQQp3Ig9Bf3NxaiAdIA9xakGkorfiBWpBB3cgDWoiHiAWcWpBpKK34gVqQQ\\\nd3IA9qIh9BCnciDWogFSAdQQp3IgtqIAggD2ogHiALQX9zcWogHyALcWpBpKK34gVqQQx3IBZqIh0g\\\nDUF/c3FqIBIgFmogHyAeQQp3Ig9Bf3NxaiAdIA9xakGkorfiBWpBB3cgC2oiCyANcWpBpKK34gVqQQ\\\nZ3IA9qIh4gC0EKdyIWQX9zcWogByAPaiALIB1BCnciD0F/c3FqIB4gD3FqQaSit+IFakEPdyANaiIL\\\nIBZxakGkorfiBWpBDXcgD2oiHUEKdyIfaiAKIAtBCnciIWogBCAeQQp3Ig1qIBMgFmogFyAPaiALIA\\\n1Bf3NxaiAdIA1xakGkorfiBWpBC3cgFmoiDyAdQX9zciAhc2pB8/3A6wZqQQl3IA1qIg0gD0F/c3Ig\\\nH3NqQfP9wOsGakEHdyAhaiIWIA1Bf3NyIA9BCnciD3NqQfP9wOsGakEPdyAfaiILIBZBf3NyIA1BCn\\\nciDXNqQfP9wOsGakELdyAPaiIdQQp3Ih5qIAcgC0EKdyIfaiAJIBZBCnciFmogASANaiAGIA9qIB0g\\\nC0F/c3IgFnNqQfP9wOsGakEIdyANaiINIB1Bf3NyIB9zakHz/cDrBmpBBncgFmoiDyANQX9zciAec2\\\npB8/3A6wZqQQZ3IB9qIhYgD0F/c3IgDUEKdyINc2pB8/3A6wZqQQ53IB5qIgsgFkF/c3IgD0EKdyIP\\\nc2pB8/3A6wZqQQx3IA1qIh1BCnciHmogAyALQQp3Ih9qIBcgFkEKdyIWaiASIA9qIAggDWogHSALQX\\\n9zciAWc2pB8/3A6wZqQQ13IA9qIg0gHUF/c3IgH3NqQfP9wOsGakEFdyAWaiIPIA1Bf3NyIB5zakHz\\\n/cDrBmpBDncgH2oiFiAPQX9zciANQQp3Ig1zakHz/cDrBmpBDXcgHmoiCyAWQX9zciAPQQp3Ig9zak\\\nHz/cDrBmpBDXcgDWoiHUEKdyIeaiAFIA9qIBUgDWogHSALQX9zciAWQQp3IhZzakHz/cDrBmpBB3cg\\\nD2oiDyAdQX9zciALQQp3IgtzakHz/cDrBmpBBXcgFmoiDUEKdyIdIAkgC2ogD0EKdyIfIAggFmogHi\\\nANQX9zcWogDSAPcWpB6e210wdqQQ93IAtqIg9Bf3NxaiAPIA1xakHp7bXTB2pBBXcgHmoiDUF/c3Fq\\\nIA0gD3FqQenttdMHakEIdyAfaiIWQQp3IgtqIBkgHWogDUEKdyIeIAogH2ogD0EKdyIfIBZBf3Nxai\\\nAWIA1xakHp7bXTB2pBC3cgHWoiDUF/c3FqIA0gFnFqQenttdMHakEOdyAfaiIPQQp3Ih0gEyAeaiAN\\\nQQp3IiEgAiAfaiALIA9Bf3NxaiAPIA1xakHp7bXTB2pBDncgHmoiDUF/c3FqIA0gD3FqQenttdMHak\\\nEGdyALaiIPQX9zcWogDyANcWpB6e210wdqQQ53ICFqIhZBCnciC2ogEiAdaiAPQQp3Ih4gBCAhaiAN\\\nQQp3Ih8gFkF/c3FqIBYgD3FqQenttdMHakEGdyAdaiINQX9zcWogDSAWcWpB6e210wdqQQl3IB9qIg\\\n9BCnciHSAFIB5qIA1BCnciISAXIB9qIAsgD0F/c3FqIA8gDXFqQenttdMHakEMdyAeaiINQX9zcWog\\\nDSAPcWpB6e210wdqQQl3IAtqIg9Bf3NxaiAPIA1xakHp7bXTB2pBDHcgIWoiFkEKdyILIBNqIAEgDU\\\nEKdyIeaiALIAMgHWogD0EKdyIfIAYgIWogHiAWQX9zcWogFiAPcWpB6e210wdqQQV3IB1qIg1Bf3Nx\\\naiANIBZxakHp7bXTB2pBD3cgHmoiD0F/c3FqIA8gDXFqQenttdMHakEIdyAfaiIWIA9BCnciHXMgHy\\\nASaiAPIA1BCnciEnMgFnNqQQh3IAtqIg1zakEFdyASaiIPQQp3IgsgCGogFkEKdyIIIApqIBIgA2og\\\nDSAIcyAPc2pBDHcgHWoiAyALcyAdIBVqIA8gDUEKdyIKcyADc2pBCXcgCGoiCHNqQQx3IApqIhUgCE\\\nEKdyIScyAKIARqIAggA0EKdyIDcyAVc2pBBXcgC2oiBHNqQQ53IANqIghBCnciCiABaiAVQQp3IgEg\\\nF2ogAyAGaiAEIAFzIAhzakEGdyASaiIDIApzIBIgCWogCCAEQQp3IgRzIANzakEIdyABaiIBc2pBDX\\\ncgBGoiBiABQQp3IghzIAQgBWogASADQQp3IgNzIAZzakEGdyAKaiIBc2pBBXcgA2oiBEEKdyIKajYC\\\nCCAAIAwgCSAUaiAcIBsgGkEKdyIJQX9zcnNqQc76z8p6akEIdyAYaiIVQQp3aiADIBFqIAEgBkEKdy\\\nIDcyAEc2pBD3cgCGoiBkEKdyIXajYCBCAAIA4gEyAYaiAVIBwgG0EKdyIRQX9zcnNqQc76z8p6akEF\\\ndyAJaiISaiAIIBlqIAQgAUEKdyIBcyAGc2pBDXcgA2oiBEEKd2o2AgAgACgCECEIIAAgESAQaiAFIA\\\nlqIBIgFSAgQX9zcnNqQc76z8p6akEGd2ogAyAHaiAGIApzIARzakELdyABaiIDajYCECAAIBEgCGog\\\nCmogASACaiAEIBdzIANzakELd2o2AgwLySYCKX8BfiAAIAEoAAwiAyAAQRRqIgQoAgAiBSAAKAIEIg\\\nZqIAEoAAgiB2oiCGogCCAAKQMgIixCIIinc0GM0ZXYeXNBEHciCUGF3Z7be2oiCiAFc0EUdyILaiIM\\\nIAEoACgiBWogASgAFCIIIABBGGoiDSgCACIOIAAoAggiD2ogASgAECIQaiIRaiARIAJzQauzj/wBc0\\\n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\\\nIiFXMgASgAMCIUQRh0IBRBgP4DcUEIdHIgFEEIdkGA/gNxIBRBGHZyciIWcyANIAEoAAQiFEEYdCAU\\\nQYD+A3FBCHRyIBRBCHZBgP4DcSAUQRh2cnIiF3MgASgAJCIUQRh0IBRBgP4DcUEIdHIgFEEIdkGA/g\\\nNxIBRBGHZyciIYcyAIc0EBdyIUc0EBdyIZcyAIIBZzIBlzIA4gGHMgFHMgE3NBAXciGnNBAXciG3Mg\\\nEiAUcyAacyARIAhzIBNzIAsgDnMgEnMgASgAKCIcQRh0IBxBgP4DcUEIdHIgHEEIdkGA/gNxIBxBGH\\\nZyciIdIAlzIBFzIAEoABwiHEEYdCAcQYD+A3FBCHRyIBxBCHZBgP4DcSAcQRh2cnIiHiAMcyALcyAV\\\nIA9zIB1zIAEoADwiHEEYdCAcQYD+A3FBCHRyIBxBCHZBgP4DcSAcQRh2cnIiHHNBAXciH3NBAXciIH\\\nNBAXciIXNBAXciInNBAXciI3NBAXciJHNBAXciJSAZIB9zIBYgHXMgH3MgGCAecyAccyAZc0EBdyIm\\\nc0EBdyIncyAUIBxzICZzIBtzQQF3IihzQQF3IilzIBsgJ3MgKXMgGiAmcyAocyAlc0EBdyIqc0EBdy\\\nIrcyAkIChzICpzICMgG3MgJXMgIiAacyAkcyAhIBNzICNzICAgEnMgInMgHyARcyAhcyAcIAtzICBz\\\nICdzQQF3IixzQQF3Ii1zQQF3Ii5zQQF3Ii9zQQF3IjBzQQF3IjFzQQF3IjJzQQF3IjMgKSAtcyAnIC\\\nFzIC1zICYgIHMgLHMgKXNBAXciNHNBAXciNXMgKCAscyA0cyArc0EBdyI2c0EBdyI3cyArIDVzIDdz\\\nICogNHMgNnMgM3NBAXciOHNBAXciOXMgMiA2cyA4cyAxICtzIDNzIDAgKnMgMnMgLyAlcyAxcyAuIC\\\nRzIDBzIC0gI3MgL3MgLCAicyAucyA1c0EBdyI6c0EBdyI7c0EBdyI8c0EBdyI9c0EBdyI+c0EBdyI/\\\nc0EBdyJAc0EBdyJBIDcgO3MgNSAvcyA7cyA0IC5zIDpzIDdzQQF3IkJzQQF3IkNzIDYgOnMgQnMgOX\\\nNBAXciRHNBAXciRXMgOSBDcyBFcyA4IEJzIERzIEFzQQF3IkZzQQF3IkdzIEAgRHMgRnMgPyA5cyBB\\\n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\\\nAgCDYCiNRAQQAgBjYChNRAQQBBlNTAADYCoNRAQQBBnNTAADYCqNRAQQBBlNTAADYCnNRAQQBBpNTA\\\nADYCsNRAQQBBnNTAADYCpNRAQQBBrNTAADYCuNRAQQBBpNTAADYCrNRAQQBBtNTAADYCwNRAQQBBrN\\\nTAADYCtNRAQQBBvNTAADYCyNRAQQBBtNTAADYCvNRAQQBBxNTAADYC0NRAQQBBvNTAADYCxNRAQQBB\\\nzNTAADYC2NRAQQBBxNTAADYCzNRAQQBBADYCkNRAQQBB1NTAADYC4NRAQQBBzNTAADYC1NRAQQBB1N\\\nTAADYC3NRAQQBB3NTAADYC6NRAQQBB3NTAADYC5NRAQQBB5NTAADYC8NRAQQBB5NTAADYC7NRAQQBB\\\n7NTAADYC+NRAQQBB7NTAADYC9NRAQQBB9NTAADYCgNVAQQBB9NTAADYC/NRAQQBB/NTAADYCiNVAQQ\\\nBB/NTAADYChNVAQQBBhNXAADYCkNVAQQBBhNXAADYCjNVAQQBBjNXAADYCmNVAQQBBjNXAADYClNVA\\\nQQBBlNXAADYCoNVAQQBBnNXAADYCqNVAQQBBlNXAADYCnNVAQQBBpNXAADYCsNVAQQBBnNXAADYCpN\\\nVAQQBBrNXAADYCuNVAQQBBpNXAADYCrNVAQQBBtNXAADYCwNVAQQBBrNXAADYCtNVAQQBBvNXAADYC\\\nyNVAQQBBtNXAADYCvNVAQQBBxNXAADYC0NVAQQBBvNXAADYCxNVAQQBBzNXAADYC2NVAQQBBxNXAAD\\\nYCzNVAQQBB1NXAADYC4NVAQQBBzNXAADYC1NVAQQBB3NXAADYC6NVAQQBB1NXAADYC3NVAQQBB5NXA\\\nADYC8NVAQQBB3NXAADYC5NVAQQBB7NXAADYC+NVAQQBB5NXAADYC7NVAQQBB9NXAADYCgNZAQQBB7N\\\nXAADYC9NVAQQBB/NXAADYCiNZAQQBB9NXAADYC/NVAQQBBhNbAADYCkNZAQQBB/NXAADYChNZAQQBB\\\njNbAADYCmNZAQQBBhNbAADYCjNZAQQAgBjYCsNZAQQBBjNbAADYClNZAQQAgCEFYaiIANgKo1kAgBi\\\nAAQQFyNgIEIAYgAGpBKDYCBEEAQYCAgAE2ArzWQAwICyABIAZPDQAgBSABSw0AIAAoAgxFDQMLQQBB\\\n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\\\nUNACAJQYAIRw0EQQEhCgsgAUH/B3EhAQJAIAogBkEFdiIIIAogCEkbRQ0AIAdBGGoiCCACQRhqKQIA\\\nNwMAIAdBEGoiCyACQRBqKQIANwMAIAdBCGoiDCACQQhqKQIANwMAIAcgAikCADcDACAHIABBwAAgAy\\\nAEQQFyEBYgByAAQcAAakHAACADIAQQFiAHIABBgAFqQcAAIAMgBBAWIAcgAEHAAWpBwAAgAyAEEBYg\\\nByAAQYACakHAACADIAQQFiAHIABBwAJqQcAAIAMgBBAWIAcgAEGAA2pBwAAgAyAEEBYgByAAQcADak\\\nHAACADIAQQFiAHIABBgARqQcAAIAMgBBAWIAcgAEHABGpBwAAgAyAEEBYgByAAQYAFakHAACADIAQQ\\\nFiAHIABBwAVqQcAAIAMgBBAWIAcgAEGABmpBwAAgAyAEEBYgByAAQcAGakHAACADIAQQFiAHIABBgA\\\ndqQcAAIAMgBBAWIAcgAEHAB2pBwAAgAyAEQQJyEBYgBSAIKQMANwAYIAUgCykDADcAECAFIAwpAwA3\\\nAAggBSAHKQMANwAACyABRQ0BIAdBgAFqQThqQgA3AwAgB0GAAWpBMGpCADcDACAHQYABakEoakIANw\\\nMAIAdBgAFqQSBqQgA3AwAgB0GAAWpBGGpCADcDACAHQYABakEQakIANwMAIAdBgAFqQQhqQgA3AwAg\\\nB0GAAWpByABqIgggAkEIaikCADcDACAHQYABakHQAGoiCyACQRBqKQIANwMAIAdBgAFqQdgAaiIMIA\\\nJBGGopAgA3AwAgB0IANwOAASAHIAQ6AOoBIAdBADsB6AEgByACKQIANwPAASAHIAqtIAN8NwPgASAH\\\nQYABaiAAIAlqIAEQLCEEIAdByABqIAgpAwA3AwAgB0HQAGogCykDADcDACAHQdgAaiAMKQMANwMAIA\\\ndBCGogBEEIaikDADcDACAHQRBqIARBEGopAwA3AwAgB0EYaiAEQRhqKQMANwMAIAdBIGogBEEgaikD\\\nADcDACAHQShqIARBKGopAwA3AwAgB0EwaiAEQTBqKQMANwMAIAdBOGogBEE4aikDADcDACAHIAcpA8\\\nABNwNAIAcgBCkDADcDACAHLQDqASEEIActAOkBIQAgByAHLQDoASIBOgBoIAcgBykD4AEiAzcDYCAH\\\n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\\\nQAAkACQAJAIABB8A5qKAIAIgMgAXunIgRNDQAgA0EFdCEFIANBf2ohBiACQSBqQcAAaiEHIAJBkAFq\\\nQSBqIQggAkEIaiEJIAJBEGohCiACQRhqIQsgA0F+akE3SSEMIAJBrwFqIQ0gAkGuAWohDiACQa0Bai\\\nEPIAJBqwFqIRAgAkGqAWohESACQakBaiESIAJBpwFqIRMgAkGmAWohFCACQaUBaiEVIAJBowFqIRYg\\\nAkGiAWohFyACQaEBaiEYIAJBnwFqIRkgAkGeAWohGiACQZ0BaiEbIAJBmwFqIRwgAkGaAWohHSACQZ\\\nkBaiEeA0AgACAGNgLwDiAJIAAgBWoiA0H4AGopAAA3AwAgCiADQYABaikAADcDACALIANBiAFqKQAA\\\nNwMAIAIgA0HwAGopAAA3AwAgBkUNAiAAIAZBf2oiHzYC8A4gAkGQAWpBGGoiICADQegAaiIhKQAAIg\\\nE3AwAgAkGQAWpBEGoiIiADQeAAaiIjKQAAIkQ3AwAgAkGQAWpBCGoiJCADQdgAaiIlKQAAIkU3AwAg\\\nAiADQdAAaiImKQAAIkY3A5ABIAggAikDADcAACAIQQhqIAkpAwA3AAAgCEEQaiAKKQMANwAAIAhBGG\\\nogCykDADcAACACQSBqQQhqIEU3AwAgAkEgakEQaiBENwMAIAJBIGpBGGogATcDACACQSBqQSBqIAgp\\\nAwA3AwAgAkEgakEoaiACQZABakEoaikDADcDACACQSBqQTBqIAJBkAFqQTBqKQMANwMAIAJBIGpBOG\\\nogAkGQAWpBOGopAwA3AwAgAiBGNwMgIAAtAIoBIScgB0EYaiAAQRhqIigpAwA3AwAgB0EQaiAAQRBq\\\nIikpAwA3AwAgB0EIaiAAQQhqIiopAwA3AwAgByAAKQMANwMAIAJBwAA6AIgBIAJCADcDgAEgAiAnQQ\\\nRyIic6AIkBICAgKCkCADcDACAiICkpAgA3AwAgJCAqKQIANwMAIAIgACkCADcDkAEgAkGQAWogAkEg\\\nakHAAEIAICcQFiANLQAAIScgDi0AACEoIA8tAAAhKSAQLQAAISogES0AACErIBItAAAhLCAgLQAAIS\\\nAgEy0AACEtIBQtAAAhLiAVLQAAIS8gFi0AACEwIBctAAAhMSAYLQAAITIgIi0AACEiIBktAAAhMyAa\\\nLQAAITQgGy0AACE1IBwtAAAhNiAdLQAAITcgHi0AACE4ICQtAAAhJCACLQCsASE5IAItAKQBITogAi\\\n0AnAEhOyACLQCXASE8IAItAJYBIT0gAi0AlQEhPiACLQCUASE/IAItAJMBIUAgAi0AkgEhQSACLQCR\\\nASFCIAItAJABIUMgDEUNAyAmIEM6AAAgJiBCOgABIANB7gBqICg6AAAgA0HtAGogKToAACADQewAai\\\nA5OgAAIANB6gBqICs6AAAgA0HpAGogLDoAACAhICA6AAAgA0HmAGogLjoAACADQeUAaiAvOgAAIANB\\\n5ABqIDo6AAAgA0HiAGogMToAACADQeEAaiAyOgAAICMgIjoAACADQd4AaiA0OgAAIANB3QBqIDU6AA\\\nAgA0HcAGogOzoAACADQdoAaiA3OgAAIANB2QBqIDg6AAAgJSAkOgAAIANB1gBqID06AAAgA0HVAGog\\\nPjoAACADQdQAaiA/OgAAICYgQToAAiADQe8AaiAnOgAAIANB6wBqICo6AAAgA0HnAGogLToAACADQe\\\nMAaiAwOgAAIANB3wBqIDM6AAAgA0HbAGogNjoAACADQdcAaiA8OgAAICZBA2ogQDoAACAAIAY2AvAO\\\nIAVBYGohBSAfIQYgHyAETw0ACwsgAkHQAWokAA8LQYCHwAAQXgALIAJBrQFqICk6AAAgAkGpAWogLD\\\noAACACQaUBaiAvOgAAIAJBoQFqIDI6AAAgAkGdAWogNToAACACQZkBaiA4OgAAIAJBlQFqID46AAAg\\\nAkGuAWogKDoAACACQaoBaiArOgAAIAJBpgFqIC46AAAgAkGiAWogMToAACACQZ4BaiA0OgAAIAJBmg\\\nFqIDc6AAAgAkGWAWogPToAACACQa8BaiAnOgAAIAJBqwFqICo6AAAgAkGnAWogLToAACACQaMBaiAw\\\nOgAAIAJBnwFqIDM6AAAgAkGbAWogNjoAACACQZcBaiA8OgAAIAIgOToArAEgAiAgOgCoASACIDo6AK\\\nQBIAIgIjoAoAEgAiA7OgCcASACICQ6AJgBIAIgPzoAlAEgAiBDOgCQASACIEI6AJEBIAIgQToAkgEg\\\nAiBAOgCTAUG0kcAAIAJBkAFqQciIwABBkIfAABA8AAvZCgEafyAAIAEoACwiAiABKAAcIgMgASgADC\\\n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\\\nQRhqKQAANwAAIAJBEGogAUEQaikAADcAACACQQhqIAFBCGopAAA3AAAgB0EBaiEHCyAGQTBqJAAgBw\\\n8LQSAgAUHghcAAED0AC0EgIAlB8IXAABA/AAueBAIDfwR+IwBB4AJrIgIkACACIAFB4AIQZSICQdAB\\\naiACQdgCaiIDLQAAIgRqQQBBiAEgBGsQZiEEIANBADoAACAEQQE6AAAgAkHXAmoiAyADLQAAQYABcj\\\noAACACIAIpAwAgAikD0AGFNwMAIAIgAikDCCACQdgBaikDAIU3AwggAiACKQMQIAJB4AFqKQMAhTcD\\\nECACIAIpAxggAkHoAWopAwCFNwMYIAIgAikDICACQfABaikDAIU3AyAgAiACKQMoIAJB+AFqKQMAhT\\\ncDKCACIAIpAzAgAkGAAmopAwCFNwMwIAIgAikDOCACQYgCaikDAIU3AzggAiACKQNAIAJBkAJqKQMA\\\nhTcDQCACIAIpA0ggAkGYAmopAwCFNwNIIAIgAikDUCACQaACaikDAIU3A1AgAiACKQNYIAJBqAJqKQ\\\nMAhTcDWCACIAIpA2AgAkGwAmopAwCFNwNgIAIgAikDaCACQbgCaikDAIU3A2ggAiACKQNwIAJBwAJq\\\nKQMAhTcDcCACIAIpA3ggAkHIAmopAwCFNwN4IAIgAikDgAEgAkHQAmopAwCFNwOAASACIAIoAsgBEB\\\n9BAC0AzdZAGiACKQMYIQUgAikDECEGIAIpAwghByACKQMAIQgCQEEgEBciAw0AAAsgAyAFNwAYIAMg\\\nBjcAECADIAc3AAggAyAINwAAIAEQISAAQSA2AgQgACADNgIAIAJB4AJqJAALngQCA38EfiMAQeACay\\\nICJAAgAiABQeACEGUiAkHQAWogAkHYAmoiAy0AACIEakEAQYgBIARrEGYhBCADQQA6AAAgBEEGOgAA\\\nIAJB1wJqIgMgAy0AAEGAAXI6AAAgAiACKQMAIAIpA9ABhTcDACACIAIpAwggAkHYAWopAwCFNwMIIA\\\nIgAikDECACQeABaikDAIU3AxAgAiACKQMYIAJB6AFqKQMAhTcDGCACIAIpAyAgAkHwAWopAwCFNwMg\\\nIAIgAikDKCACQfgBaikDAIU3AyggAiACKQMwIAJBgAJqKQMAhTcDMCACIAIpAzggAkGIAmopAwCFNw\\\nM4IAIgAikDQCACQZACaikDAIU3A0AgAiACKQNIIAJBmAJqKQMAhTcDSCACIAIpA1AgAkGgAmopAwCF\\\nNwNQIAIgAikDWCACQagCaikDAIU3A1ggAiACKQNgIAJBsAJqKQMAhTcDYCACIAIpA2ggAkG4AmopAw\\\nCFNwNoIAIgAikDcCACQcACaikDAIU3A3AgAiACKQN4IAJByAJqKQMAhTcDeCACIAIpA4ABIAJB0AJq\\\nKQMAhTcDgAEgAiACKALIARAfQQAtAM3WQBogAikDGCEFIAIpAxAhBiACKQMIIQcgAikDACEIAkBBIB\\\nAXIgMNAAALIAMgBTcAGCADIAY3ABAgAyAHNwAIIAMgCDcAACABECEgAEEgNgIEIAAgAzYCACACQeAC\\\naiQAC70DAgZ/AX4jAEGQA2siAiQAIAJBIGogAUHQARBlGiACIAIpA2AgAkHoAWotAAAiA618NwNgIA\\\nJB6ABqIQQCQCADQYABRg0AIAQgA2pBAEGAASADaxBmGgsgAkEAOgDoASACQSBqIARCfxARIAJBkAJq\\\nQQhqIgMgAkEgakEIaikDADcDACACQZACakEQaiIEIAJBIGpBEGopAwA3AwAgAkGQAmpBGGoiBSACQS\\\nBqQRhqKQMANwMAIAJBkAJqQSBqIAIpA0A3AwAgAkGQAmpBKGogAkEgakEoaikDADcDACACQZACakEw\\\naiACQSBqQTBqKQMANwMAIAJBkAJqQThqIAJBIGpBOGopAwA3AwAgAiACKQMgNwOQAiACQfABakEQai\\\nAEKQMAIgg3AwAgAkEIaiIEIAMpAwA3AwAgAkEQaiIGIAg3AwAgAkEYaiIHIAUpAwA3AwAgAiACKQOQ\\\nAjcDAEEALQDN1kAaAkBBIBAXIgMNAAALIAMgAikDADcAACADQRhqIAcpAwA3AAAgA0EQaiAGKQMANw\\\nAAIANBCGogBCkDADcAACABECEgAEEgNgIEIAAgAzYCACACQZADaiQAC6ADAQJ/AkACQAJAAkACQCAA\\\nLQBoIgNFDQAgA0HBAE8NAyAAIANqIAFBwAAgA2siAyACIAMgAkkbIgMQZRogACAALQBoIANqIgQ6AG\\\nggASADaiEBAkAgAiADayICDQBBACECDAILIABBwABqIABBwAAgACkDYCAALQBqIAAtAGlFchAWIABC\\\n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\\\nA2AgggBCACNgIUIAQgATYCECAEQRhqQQxqQgI3AgAgBEEwakEMakEBNgIAIARBAjYCHCAEQeyJwAA2\\\nAhggBEECNgI0IAQgBEEwajYCICAEIARBEGo2AjggBCAEQQhqNgIwIARBGGogAxBLAAtyAQF/IwBBMG\\\nsiAyQAIAMgADYCACADIAE2AgQgA0EIakEMakICNwIAIANBIGpBDGpBAzYCACADQQI2AgwgA0GYjMAA\\\nNgIIIANBAzYCJCADIANBIGo2AhAgAyADQQRqNgIoIAMgAzYCICADQQhqIAIQSwALcgEBfyMAQTBrIg\\\nMkACADIAA2AgAgAyABNgIEIANBCGpBDGpCAjcCACADQSBqQQxqQQM2AgAgA0ECNgIMIANB+IvAADYC\\\nCCADQQM2AiQgAyADQSBqNgIQIAMgA0EEajYCKCADIAM2AiAgA0EIaiACEEsAC3IBAX8jAEEwayIDJA\\\nAgAyABNgIEIAMgADYCACADQQhqQQxqQgI3AgAgA0EgakEMakEDNgIAIANBAzYCDCADQeiMwAA2Aggg\\\nA0EDNgIkIAMgA0EgajYCECADIAM2AiggAyADQQRqNgIgIANBCGogAhBLAAtyAQF/IwBBMGsiAyQAIA\\\nMgATYCBCADIAA2AgAgA0EIakEMakICNwIAIANBIGpBDGpBAzYCACADQQI2AgwgA0HYicAANgIIIANB\\\nAzYCJCADIANBIGo2AhAgAyADNgIoIAMgA0EEajYCICADQQhqIAIQSwALYwECfyMAQSBrIgIkACACQQ\\\nxqQgE3AgAgAkEBNgIEIAJBkIjAADYCACACQQI2AhwgAkGwiMAANgIYIAFBGGooAgAhAyACIAJBGGo2\\\nAgggASgCFCADIAIQJyEBIAJBIGokACABC2MBAn8jAEEgayICJAAgAkEMakIBNwIAIAJBATYCBCACQZ\\\nCIwAA2AgAgAkECNgIcIAJBsIjAADYCGCABQRhqKAIAIQMgAiACQRhqNgIIIAEoAhQgAyACECchASAC\\\nQSBqJAAgAQtbAQJ/AkACQCAARQ0AIAAoAgANASAAQQA2AgAgAEEIaigCACEBIAAoAgQhAiAAECECQC\\\nACQQdHDQAgAUHwDmooAgBFDQAgAUEANgLwDgsgARAhDwsQYQALEGIAC2UBAX9BAEEAKAKA00AiAkEB\\\najYCgNNAAkAgAkEASA0AQQAtAMzWQEEBcQ0AQQBBAToAzNZAQQBBACgCyNZAQQFqNgLI1kBBACgC/N\\\nJAQX9MDQBBAEEAOgDM1kAgAEUNABBoAAsAC1EAAkAgAWlBAUcNAEGAgICAeCABayAASQ0AAkAgAEUN\\\nAEEALQDN1kAaAkACQCABQQlJDQAgASAAEC0hAQwBCyAAEBchAQsgAUUNAQsgAQ8LAAtKAQN/QQAhAw\\\nJAIAJFDQACQANAIAAtAAAiBCABLQAAIgVHDQEgAEEBaiEAIAFBAWohASACQX9qIgJFDQIMAAsLIAQg\\\nBWshAwsgAwtEAAJAAkAgAUUNACABKAIADQEgAUF/NgIAIAFBBGooAgAgAUEIaigCACACEDcgAUEANg\\\nIAIABCADcDAA8LEGEACxBiAAtHAQF/IwBBIGsiAyQAIANBDGpCADcCACADQQE2AgQgA0HgkcAANgII\\\nIAMgATYCHCADIAA2AhggAyADQRhqNgIAIAMgAhBLAAtCAQF/AkACQAJAIAJBgIDEAEYNAEEBIQQgAC\\\nACIAEoAhARBQANAQsgAw0BQQAhBAsgBA8LIAAgA0EAIAEoAgwRBwALPwEBfyMAQSBrIgAkACAAQRRq\\\nQgA3AgAgAEEBNgIMIABBvITAADYCCCAAQeCRwAA2AhAgAEEIakHEhMAAEEsACz4BAX8jAEEgayICJA\\\nAgAkEBOwEcIAIgATYCGCACIAA2AhQgAkGUicAANgIQIAJB4JHAADYCDCACQQxqEFgACzwBAX8gAEEM\\\naigCACECAkACQCAAKAIEDgIAAAELIAINACABLQAQIAEtABEQRAALIAEtABAgAS0AERBEAAsvAAJAAk\\\nAgA2lBAUcNAEGAgICAeCADayABSQ0AIAAgASADIAIQJCIDDQELAAsgAwslAAJAIAANAEGUjsAAQTIQ\\\nYwALIAAgAiADIAQgBSABKAIQEQsACyMAAkAgAA0AQZSOwABBMhBjAAsgACACIAMgBCABKAIQEQkACy\\\nMAAkAgAA0AQZSOwABBMhBjAAsgACACIAMgBCABKAIQEQgACyMAAkAgAA0AQZSOwABBMhBjAAsgACAC\\\nIAMgBCABKAIQEQkACyMAAkAgAA0AQZSOwABBMhBjAAsgACACIAMgBCABKAIQEQgACyMAAkAgAA0AQZ\\\nSOwABBMhBjAAsgACACIAMgBCABKAIQEQgACyMAAkAgAA0AQZSOwABBMhBjAAsgACACIAMgBCABKAIQ\\\nERYACyMAAkAgAA0AQZSOwABBMhBjAAsgACACIAMgBCABKAIQERcACyMAAkAgAA0AQZSOwABBMhBjAA\\\nsgACACIAMgBCABKAIQERUACyEAAkAgAA0AQZSOwABBMhBjAAsgACACIAMgASgCEBEGAAsfAQF/AkAg\\\nACgCCCIBDQBB/JHAABBeAAsgASAAEGQACx8AAkAgAA0AQZSOwABBMhBjAAsgACACIAEoAhARBQALFA\\\nAgACgCACABIAAoAgQoAgwRBQALEAAgASAAKAIAIAAoAgQQHAsgACAAQr/vtPrh37HYXzcDCCAAQqn2\\\nw62BitaoUTcDAAsOAAJAIAFFDQAgABAhCwsOAEHpiMAAQSsgABBIAAsNACAAKAIAGgN/DAALCwsAIA\\\nAjAGokACMACwwAQZDSwABBGxBjAAsNAEGr0sAAQc8AEGMACwkAIAAgARALAAsJACAAIAEQTAALCgAg\\\nACABIAIQLwsKACAAIAEgAhA4CwoAIAAgASACEEYLAwAACwIACwIACwIACwuEUwEAQYCAwAAL+lKABh\\\nAAYAAAAK4AAAAUAAAAQkxBS0UyQkJMQUtFMkItMTI4QkxBS0UyQi0xNjBCTEFLRTJCLTIyNEJMQUtF\\\nMkItMjU2QkxBS0UyQi0zODRCTEFLRTJTQkxBS0UzS0VDQ0FLLTIyNEtFQ0NBSy0yNTZLRUNDQUstMz\\\ng0S0VDQ0FLLTUxMk1ENE1ENVJJUEVNRC0xNjBTSEEtMVNIQS0yMjRTSEEtMjU2U0hBLTM4NFNIQS01\\\nMTJUSUdFUkZOVjMyRk5WMzJBRk5WNjRGTlY2NEF1bnN1cHBvcnRlZCBhbGdvcml0aG0AAAAA782riW\\\ndFIwEQMlR2mLrc/ofhssO0pZbwCMm882fmCWo7p8qEha5nuyv4lP5y82488TYdXzr1T6XRguatf1IO\\\nUR9sPiuMaAWba71B+6vZgx95IX4TGc3gW9ieBcFdnbvLB9V8NiopmmIX3XAwWgFZkTlZDvfY7C8VMQ\\\nvA/2cmM2cRFVhoh0q0jqeP+WQNLgzbpE/6vh1ItUdn5glqha5nu3Lzbjw69U+lf1IOUYxoBZur2YMf\\\nGc3gW9ieBcEH1Xw2F91wMDlZDvcxC8D/ERVYaKeP+WSkT/q+ASNFZ4mrze/+3LqYdlQyEPDh0sNub2\\\n4tZGVmYXVsdCBsZW5ndGggc3BlY2lmaWVkIGZvciBub24tZXh0ZW5kYWJsZSBhbGdvcml0aG1saWJy\\\nYXJ5L2FsbG9jL3NyYy9yYXdfdmVjLnJzY2FwYWNpdHkgb3ZlcmZsb3cAACkCEAARAAAADQIQABwAAA\\\nA6AgAABQAAAC9Vc2Vycy9hc2hlci8uY2FyZ28vcmVnaXN0cnkvc3JjL2luZGV4LmNyYXRlcy5pby02\\\nZjE3ZDIyYmJhMTUwMDFmL2JsYWtlMy0xLjUuMS9zcmMvbGliLnJzAAAAVAIQAFkAAADwAQAAEQAAAF\\\nQCEABZAAAAlgIAAAoAAABUAhAAWQAAAIICAAAWAAAAVAIQAFkAAADEAgAAKAAAAFQCEABZAAAAxAIA\\\nADQAAABUAhAAWQAAAMQCAAAMAAAAVAIQAFkAAAC0AgAAFwAAAFQCEABZAAAA8AIAAB8AAABUAhAAWQ\\\nAAAA0DAAAMAAAAVAIQAFkAAAAUAwAAEgAAAFQCEABZAAAAOAMAACEAAABUAhAAWQAAADoDAAARAAAA\\\nVAIQAFkAAAA6AwAAQQAAAFQCEABZAAAAKgQAADIAAABUAhAAWQAAADIEAAAbAAAAVAIQAFkAAABZBA\\\nAAFwAAAFQCEABZAAAAvQQAABsAAABUAhAAWQAAAM8EAAAbAAAAVAIQAFkAAAAABQAAEgAAAFQCEABZ\\\nAAAACgUAABIAAABUAhAAWQAAADcGAAAmAAAAQ2FwYWNpdHlFcnJvcjogAAAEEAAPAAAAaW5zdWZmaW\\\nNpZW50IGNhcGFjaXR5AAAAGAQQABUAAAARAAAABAAAAAQAAAASAAAAEwAAACAAAAABAAAAFAAAABEA\\\nAAAEAAAABAAAABIAAAApY2FsbGVkIGBPcHRpb246OnVud3JhcCgpYCBvbiBhIGBOb25lYCB2YWx1ZR\\\nUAAAAAAAAAAQAAABYAAABpbmRleCBvdXQgb2YgYm91bmRzOiB0aGUgbGVuIGlzICBidXQgdGhlIGlu\\\nZGV4IGlzIAAApAQQACAAAADEBBAAEgAAADogAADgCBAAAAAAAOgEEAACAAAAMDAwMTAyMDMwNDA1MD\\\nYwNzA4MDkxMDExMTIxMzE0MTUxNjE3MTgxOTIwMjEyMjIzMjQyNTI2MjcyODI5MzAzMTMyMzMzNDM1\\\nMzYzNzM4Mzk0MDQxNDI0MzQ0NDU0NjQ3NDg0OTUwNTE1MjUzNTQ1NTU2NTc1ODU5NjA2MTYyNjM2ND\\\nY1NjY2NzY4Njk3MDcxNzI3Mzc0NzU3Njc3Nzg3OTgwODE4MjgzODQ4NTg2ODc4ODg5OTA5MTkyOTM5\\\nNDk1OTY5Nzk4OTlyYW5nZSBzdGFydCBpbmRleCAgb3V0IG9mIHJhbmdlIGZvciBzbGljZSBvZiBsZW\\\n5ndGggxAUQABIAAADWBRAAIgAAAHJhbmdlIGVuZCBpbmRleCAIBhAAEAAAANYFEAAiAAAAc291cmNl\\\nIHNsaWNlIGxlbmd0aCAoKSBkb2VzIG5vdCBtYXRjaCBkZXN0aW5hdGlvbiBzbGljZSBsZW5ndGggKC\\\ngGEAAVAAAAPQYQACsAAABoBBAAAQAAAC9Vc2Vycy9hc2hlci8uY2FyZ28vcmVnaXN0cnkvc3JjL2lu\\\nZGV4LmNyYXRlcy5pby02ZjE3ZDIyYmJhMTUwMDFmL2Jsb2NrLWJ1ZmZlci0wLjEwLjQvc3JjL2xpYi\\\n5yc4AGEABgAAAAWAEAAB4AAACABhAAYAAAABUBAAAsAAAAbWlkID4gbGVuAAAAAAcQAAkAAABjbG9z\\\ndXJlIGludm9rZWQgcmVjdXJzaXZlbHkgb3IgYWZ0ZXIgYmVpbmcgZHJvcHBlZAAAAQAAAAAAAACCgA\\\nAAAAAAAIqAAAAAAACAAIAAgAAAAICLgAAAAAAAAAEAAIAAAAAAgYAAgAAAAIAJgAAAAAAAgIoAAAAA\\\nAAAAiAAAAAAAAAAJgACAAAAAAAoAAIAAAAAAi4AAgAAAAACLAAAAAAAAgImAAAAAAACAA4AAAAAAAI\\\nACgAAAAAAAgIAAAAAAAACACoAAAAAAAAAKAACAAAAAgIGAAIAAAACAgIAAAAAAAIABAACAAAAAAAiA\\\nAIAAAACAL1VzZXJzL2FzaGVyLy5jYXJnby9yZWdpc3RyeS9zcmMvaW5kZXguY3JhdGVzLmlvLTZmMT\\\ndkMjJiYmExNTAwMWYva2VjY2FrLTAuMS41L3NyYy9saWIucnNBIHJvdW5kX2NvdW50IGdyZWF0ZXIg\\\n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\\\nlGAMj52EkyY/uI4+2bz4Ce8WwRmlOBGFck1Wv38wNRqPdHrvXmtxXPnH7U3sbX2xq7KAJBXOVEmU7b\\\nXiXUR7Yw/Kq4K4gRXSoh0ym7iwn1s5YC6RTqtY9aAt1XIZR7Z7WskKPA51j7AUq9g0xn04k7ufNL36\\\nQtnilIq4wyHsT8UixYupaM8wOyXdh/vb3RyoOugmDBQrS7sJrapWvoX7k/qXE3ZwQusthSMUnJWFOE\\\nHlS0l4ZIKr5maY7TLdyilSuFPJKsESzAe6jyDZmxiCO+N08b+giAfAPlVE3I0HAf1FfOfuytkFQ6Og\\\nbZJzwrAL+iMICEo65+wAMg7W0yAsaGQKlpfSing4p69TDLX3rFeefreeREaLXpvNwFD7Rzo+IOV4hu\\\neBrXoPbovc26nIcvo2TBvNFql4vXZpZe4iGrPMPl5apjEJCQjWlIRLMYmLuKHj6uh2TjtNw7iTH5va\\\n8Z1btf3KBFY8pllJsm/iiG7FGcP2ABXR63SVChBkDkTbHLdvflcGy/7StV7/IYEkGjNlpwCAcMy0Rg\\\nmE91FE3nDiioDkPZVs1lUF9T15ElwZbvCnLxIzLIH6Vjc285oMNudWxsIHBvaW50ZXIgcGFzc2VkIH\\\nRvIHJ1c3RyZWN1cnNpdmUgdXNlIG9mIGFuIG9iamVjdCBkZXRlY3RlZCB3aGljaCB3b3VsZCBsZWFk\\\nIHRvIHVuc2FmZSBhbGlhc2luZyBpbiBydXN0AJkxBG5hbWUBkTFsAEVqc19zeXM6OlR5cGVFcnJvcj\\\no6bmV3OjpfX3diZ19uZXdfNWRkODZlYmM5MTdkOWY1Mjo6aGY1NGY0OTM5ZTliNTEwNzABO3dhc21f\\\nYmluZGdlbjo6X193YmluZGdlbl9vYmplY3RfZHJvcF9yZWY6Omg5NjQwNjIwM2Y3MjdhNTRjAlVqc1\\\n9zeXM6OlVpbnQ4QXJyYXk6OmJ5dGVfbGVuZ3RoOjpfX3diZ19ieXRlTGVuZ3RoXzU4ZjdiNGZhYjE5\\\nMTlkNDQ6Omg0MjEyYmQ1MmQ1ODhiMWZhA1Vqc19zeXM6OlVpbnQ4QXJyYXk6OmJ5dGVfb2Zmc2V0Oj\\\npfX3diZ19ieXRlT2Zmc2V0XzgxZDYwZjczOTI1MjRmNjI6OmgwNTY1ZGY3MDgwYzVlMGZlBExqc19z\\\neXM6OlVpbnQ4QXJyYXk6OmJ1ZmZlcjo6X193YmdfYnVmZmVyX2RkN2Y3NGJjNjBmMWZhYWI6Omg5OG\\\nU4YzFhODM5NjEwMTQzBXlqc19zeXM6OlVpbnQ4QXJyYXk6Om5ld193aXRoX2J5dGVfb2Zmc2V0X2Fu\\\nZF9sZW5ndGg6Ol9fd2JnX25ld3dpdGhieXRlb2Zmc2V0YW5kbGVuZ3RoX2FhNGExN2MzM2EwNmU1Y2\\\nI6OmhhNjkyZmRlODRlZmNkYWNkBkxqc19zeXM6OlVpbnQ4QXJyYXk6Omxlbmd0aDo6X193YmdfbGVu\\\nZ3RoX2MyMGE0MGYxNTAyMGQ2OGE6Omg2MGFiY2ZiZTMxZDM3MzZlBzJ3YXNtX2JpbmRnZW46Ol9fd2\\\nJpbmRnZW5fbWVtb3J5OjpoOTcwNjg1NjYyMjFiOTNiZghVanNfc3lzOjpXZWJBc3NlbWJseTo6TWVt\\\nb3J5OjpidWZmZXI6Ol9fd2JnX2J1ZmZlcl8xMmQwNzljYzIxZTE0YmRiOjpoNDAyOTdkZjczNmE1Mz\\\nQ3ZQlGanNfc3lzOjpVaW50OEFycmF5OjpuZXc6Ol9fd2JnX25ld182M2I5MmJjODY3MWVkNDY0Ojpo\\\nNjJhZGMxNWU2N2QyNjA2NQpGanNfc3lzOjpVaW50OEFycmF5OjpzZXQ6Ol9fd2JnX3NldF9hNDdiYW\\\nM3MDMwNmExOWE3OjpoY2I2NmI3ZmE4N2EzNjMwNwsxd2FzbV9iaW5kZ2VuOjpfX3diaW5kZ2VuX3Ro\\\ncm93OjpoM2MyYWM2Y2ZhMGE4ZDQ4MgxAZGVub19zdGRfd2FzbV9jcnlwdG86OmRpZ2VzdDo6Q29udG\\\nV4dDo6dXBkYXRlOjpoN2IwMDc0NWNiZTIzODY1Mw0sc2hhMjo6c2hhNTEyOjpjb21wcmVzczUxMjo6\\\naDE3ZTQyNGZiNDcwMjk3MmEOLHNoYTI6OnNoYTI1Njo6Y29tcHJlc3MyNTY6Omg3Y2Y2NDJlZjc2OD\\\nY0YTkzD0lkZW5vX3N0ZF93YXNtX2NyeXB0bzo6ZGlnZXN0OjpDb250ZXh0OjpkaWdlc3RfYW5kX2Ry\\\nb3A6OmhjNTZkZDUwNzFmNTg4ZWZkEDtkaWdlc3Q6OkV4dGVuZGFibGVPdXRwdXQ6OmZpbmFsaXplX2\\\nJveGVkOjpoNzlhYTg0MjlkMzc3ZWQwNREzYmxha2UyOjpCbGFrZTJiVmFyQ29yZTo6Y29tcHJlc3M6\\\nOmhmZDNjYjE1ODM2NGZjNThlEilyaXBlbWQ6OmMxNjA6OmNvbXByZXNzOjpoZWQ1OTFlNDg3ZDM1OD\\\nA3ZRMzYmxha2UyOjpCbGFrZTJzVmFyQ29yZTo6Y29tcHJlc3M6OmhlZGE4MzJmNzhlMGEyMDM0FCtz\\\naGExOjpjb21wcmVzczo6Y29tcHJlc3M6Omg4ZGZjMzY3YzJiZjRlNDgxFSx0aWdlcjo6Y29tcHJlc3\\\nM6OmNvbXByZXNzOjpoZDI5OWUxODU5OGYzYzUzNxY2Ymxha2UzOjpwb3J0YWJsZTo6Y29tcHJlc3Nf\\\naW5fcGxhY2U6Omg1YzRkMGM2ZGE3NTI2NWI0FzpkbG1hbGxvYzo6ZGxtYWxsb2M6OkRsbWFsbG9jPE\\\nE+OjptYWxsb2M6OmgyYWJiZTFlNGYxOWNmNWYxGD1kZW5vX3N0ZF93YXNtX2NyeXB0bzo6ZGlnZXN0\\\nOjpDb250ZXh0OjpuZXc6OmhhMjUxYjE3NzdhYjA5NTZhGWU8ZGlnZXN0Ojpjb3JlX2FwaTo6d3JhcH\\\nBlcjo6Q29yZVdyYXBwZXI8VD4gYXMgZGlnZXN0OjpVcGRhdGU+Ojp1cGRhdGU6Ont7Y2xvc3VyZX19\\\nOjpoY2NmM2MzODIxZTMzODIwNxpoPG1kNTo6TWQ1Q29yZSBhcyBkaWdlc3Q6OmNvcmVfYXBpOjpGaX\\\nhlZE91dHB1dENvcmU+OjpmaW5hbGl6ZV9maXhlZF9jb3JlOjp7e2Nsb3N1cmV9fTo6aDFjMWM4NjE1\\\nZTU1OGQ4YWUbMGJsYWtlMzo6Y29tcHJlc3Nfc3VidHJlZV93aWRlOjpoNDM0MmYwNzRjMmY3Y2RhOB\\\nwsY29yZTo6Zm10OjpGb3JtYXR0ZXI6OnBhZDo6aDYyOGZmMGU1NmJmNDQ5MTMdMWJsYWtlMzo6SGFz\\\naGVyOjptZXJnZV9jdl9zdGFjazo6aGFiODAwNWNiN2FiYTVjNDYeIG1kNDo6Y29tcHJlc3M6OmgyNT\\\nhmN2I3YTE3OGY2MmE4HyBrZWNjYWs6OnAxNjAwOjpoNmFhOTI4Mzg3ZWE0ZDQ3ZSByPHNoYTI6OmNv\\\ncmVfYXBpOjpTaGE1MTJWYXJDb3JlIGFzIGRpZ2VzdDo6Y29yZV9hcGk6OlZhcmlhYmxlT3V0cHV0Q2\\\n9yZT46OmZpbmFsaXplX3ZhcmlhYmxlX2NvcmU6OmgxMjY3ZjljMGM0YmEzMjA0IThkbG1hbGxvYzo6\\\nZGxtYWxsb2M6OkRsbWFsbG9jPEE+OjpmcmVlOjpoNjQ1OGZjZDkzYjg1MTIwZCJOY29yZTo6Zm10Oj\\\npudW06OmltcDo6PGltcGwgY29yZTo6Zm10OjpEaXNwbGF5IGZvciB1MzI+OjpmbXQ6Omg5M2ZhYjRm\\\nODllOWE0NjFhI0FkbG1hbGxvYzo6ZGxtYWxsb2M6OkRsbWFsbG9jPEE+OjpkaXNwb3NlX2NodW5rOj\\\npoZDZhZTg5ZjI5MGFlYjcwZCQOX19ydXN0X3JlYWxsb2MlO2RpZ2VzdDo6RXh0ZW5kYWJsZU91dHB1\\\ndDo6ZmluYWxpemVfYm94ZWQ6OmgxZTc2YjQ5NzU2OTkyNGI3JnI8c2hhMjo6Y29yZV9hcGk6OlNoYT\\\nI1NlZhckNvcmUgYXMgZGlnZXN0Ojpjb3JlX2FwaTo6VmFyaWFibGVPdXRwdXRDb3JlPjo6ZmluYWxp\\\nemVfdmFyaWFibGVfY29yZTo6aGE5ZTk4ZjQ3NTQ4YzUxZDUnI2NvcmU6OmZtdDo6d3JpdGU6Omg0Mj\\\nA2ZTA2OTVmMjQ0ZDU4KDRibGFrZTM6OmNvbXByZXNzX3BhcmVudHNfcGFyYWxsZWw6OmhiMDY5NmFk\\\nYmMxMWMzOTY4KT08RCBhcyBkaWdlc3Q6OmRpZ2VzdDo6RHluRGlnZXN0Pjo6ZmluYWxpemU6OmhhMz\\\nYwNTZiYjQ3ZmZhNTFlKj08RCBhcyBkaWdlc3Q6OmRpZ2VzdDo6RHluRGlnZXN0Pjo6ZmluYWxpemU6\\\nOmg3YTM5YzBmN2M0NmU1MjhjKz08RCBhcyBkaWdlc3Q6OmRpZ2VzdDo6RHluRGlnZXN0Pjo6ZmluYW\\\nxpemU6OmhmZjFkYjAyN2I1MzFiYTIxLC1ibGFrZTM6OkNodW5rU3RhdGU6OnVwZGF0ZTo6aDE5NzQ2\\\nYTJhZThjMjMwNTQtPGRsbWFsbG9jOjpkbG1hbGxvYzo6RGxtYWxsb2M8QT46Om1lbWFsaWduOjpoOW\\\nI2NDQ2ZDVhY2ZjNmVjYi5AZGxtYWxsb2M6OmRsbWFsbG9jOjpEbG1hbGxvYzxBPjo6dW5saW5rX2No\\\ndW5rOjpoY2UwODFmMjY0MDI3YzVhZS8xY29tcGlsZXJfYnVpbHRpbnM6Om1lbTo6bWVtY3B5OjpoZm\\\nYzMmQxNDRhYWJjNDg4YjByPGRpZ2VzdDo6Y29yZV9hcGk6OnhvZl9yZWFkZXI6OlhvZlJlYWRlckNv\\\ncmVXcmFwcGVyPFQ+IGFzIGRpZ2VzdDo6WG9mUmVhZGVyPjo6cmVhZDo6e3tjbG9zdXJlfX06Omg1MT\\\ng3ZWFkMmFlOWM0OTJjMT08RCBhcyBkaWdlc3Q6OmRpZ2VzdDo6RHluRGlnZXN0Pjo6ZmluYWxpemU6\\\nOmg3ZWE0YmIxNmJmYWViMzlmMkZkbG1hbGxvYzo6ZGxtYWxsb2M6OkRsbWFsbG9jPEE+OjppbnNlcn\\\nRfbGFyZ2VfY2h1bms6Omg4YWRhMTRkNWE5MDA0NWRlMxtkaWdlc3Rjb250ZXh0X2RpZ2VzdEFuZERy\\\nb3A0cjxkaWdlc3Q6OmNvcmVfYXBpOjp4b2ZfcmVhZGVyOjpYb2ZSZWFkZXJDb3JlV3JhcHBlcjxUPi\\\nBhcyBkaWdlc3Q6OlhvZlJlYWRlcj46OnJlYWQ6Ont7Y2xvc3VyZX19OjpoZWU0ZWY1YWQxNzJmMDg3\\\nMzUGZGlnZXN0Nj08RCBhcyBkaWdlc3Q6OmRpZ2VzdDo6RHluRGlnZXN0Pjo6ZmluYWxpemU6OmhlOT\\\ncwZDZlNTQ5YWZkNGZmNz5kZW5vX3N0ZF93YXNtX2NyeXB0bzo6RGlnZXN0Q29udGV4dDo6dXBkYXRl\\\nOjpoODI2MzRkMTg4ODQyYTViYjgxY29tcGlsZXJfYnVpbHRpbnM6Om1lbTo6bWVtc2V0OjpoNGY5NT\\\nE0OGE0NmI3ZmFjNDkRZGlnZXN0Y29udGV4dF9uZXc6LWpzX3N5czo6VWludDhBcnJheTo6dG9fdmVj\\\nOjpoOWIzMTY4M2JkYTE4NTBlYzs/d2FzbV9iaW5kZ2VuOjpjb252ZXJ0OjpjbG9zdXJlczo6aW52b2\\\ntlM19tdXQ6Omg1NmM2NjMxMmE5ZGRiODgwPC5jb3JlOjpyZXN1bHQ6OnVud3JhcF9mYWlsZWQ6Omhh\\\nZDcwNDkxYzYyZWU2ODFiPT9jb3JlOjpzbGljZTo6aW5kZXg6OnNsaWNlX2VuZF9pbmRleF9sZW5fZm\\\nFpbDo6aGE4YjlhOWIzYWZhZWMwZTg+QWNvcmU6OnNsaWNlOjppbmRleDo6c2xpY2Vfc3RhcnRfaW5k\\\nZXhfbGVuX2ZhaWw6OmgwZGEzZjM3MTE4ZDhkMGQ3P05jb3JlOjpzbGljZTo6PGltcGwgW1RdPjo6Y2\\\n9weV9mcm9tX3NsaWNlOjpsZW5fbWlzbWF0Y2hfZmFpbDo6aGM2ODk0ZDBmNjI1ZTk3MDhANmNvcmU6\\\nOnBhbmlja2luZzo6cGFuaWNfYm91bmRzX2NoZWNrOjpoMzBhNTU4M2M0NmY2MzMxN0FQPGFycmF5dm\\\nVjOjplcnJvcnM6OkNhcGFjaXR5RXJyb3I8VD4gYXMgY29yZTo6Zm10OjpEZWJ1Zz46OmZtdDo6aDdm\\\nN2U3YmE2MjU0MGYxZjNCUDxhcnJheXZlYzo6ZXJyb3JzOjpDYXBhY2l0eUVycm9yPFQ+IGFzIGNvcm\\\nU6OmZtdDo6RGVidWc+OjpmbXQ6Omg5ZWZmMjkwODYzZWVjNjFkQxhfX3diZ19kaWdlc3Rjb250ZXh0\\\nX2ZyZWVEN3N0ZDo6cGFuaWNraW5nOjpydXN0X3BhbmljX3dpdGhfaG9vazo6aDlhYWJkOTA2MjE4OD\\\nk3YzNFEV9fd2JpbmRnZW5fbWFsbG9jRjFjb21waWxlcl9idWlsdGluczo6bWVtOjptZW1jbXA6Omhh\\\nZDVkNjUxNGEyM2NjZWZmRxRkaWdlc3Rjb250ZXh0X3VwZGF0ZUgpY29yZTo6cGFuaWNraW5nOjpwYW\\\n5pYzo6aDExYTIwMjFkOTJkYzFjYmJJQ2NvcmU6OmZtdDo6Rm9ybWF0dGVyOjpwYWRfaW50ZWdyYWw6\\\nOndyaXRlX3ByZWZpeDo6aDZjOWE3Njk3NzdhYWQ2NzRKNGFsbG9jOjpyYXdfdmVjOjpjYXBhY2l0eV\\\n9vdmVyZmxvdzo6aDRlNWU5MDZiMTcyOWQwMTFLLWNvcmU6OnBhbmlja2luZzo6cGFuaWNfZm10Ojpo\\\nM2FmZjg1NWZlOTM4YzEzZkxDc3RkOjpwYW5pY2tpbmc6OmJlZ2luX3BhbmljX2hhbmRsZXI6Ont7Y2\\\nxvc3VyZX19OjpoOTZkMmJjMzgxZmE2ZWUxZU0SX193YmluZGdlbl9yZWFsbG9jTj93YXNtX2JpbmRn\\\nZW46OmNvbnZlcnQ6OmNsb3N1cmVzOjppbnZva2U0X211dDo6aGE4NWM3OTVkNWJiNDI0MTdPP3dhc2\\\n1fYmluZGdlbjo6Y29udmVydDo6Y2xvc3VyZXM6Omludm9rZTNfbXV0OjpoYTlkZjAyMTQ0YTQwMGI3\\\nMVA/d2FzbV9iaW5kZ2VuOjpjb252ZXJ0OjpjbG9zdXJlczo6aW52b2tlM19tdXQ6Omg2OTFjYjgxZD\\\ndhODI4MTlhUT93YXNtX2JpbmRnZW46OmNvbnZlcnQ6OmNsb3N1cmVzOjppbnZva2UzX211dDo6aDZh\\\nMmUyNzUzOGUxZmQ4MTBSP3dhc21fYmluZGdlbjo6Y29udmVydDo6Y2xvc3VyZXM6Omludm9rZTNfbX\\\nV0OjpoMDUxODkyNmI4ZTg5ZmI5NFM/d2FzbV9iaW5kZ2VuOjpjb252ZXJ0OjpjbG9zdXJlczo6aW52\\\nb2tlM19tdXQ6Omg5NWM1OTk3NGZkZGVhNWI3VD93YXNtX2JpbmRnZW46OmNvbnZlcnQ6OmNsb3N1cm\\\nVzOjppbnZva2UzX211dDo6aDJjMTI4NDcwMjVmMzBjOTlVP3dhc21fYmluZGdlbjo6Y29udmVydDo6\\\nY2xvc3VyZXM6Omludm9rZTNfbXV0OjpoNzY0Yzc0ODFiYzM1Y2E2YVY/d2FzbV9iaW5kZ2VuOjpjb2\\\n52ZXJ0OjpjbG9zdXJlczo6aW52b2tlM19tdXQ6OmgwOTgxODgyNjA0MDY0MGE1Vz93YXNtX2JpbmRn\\\nZW46OmNvbnZlcnQ6OmNsb3N1cmVzOjppbnZva2UyX211dDo6aDBiZTc2OTU2MDFiM2RmNGRYEXJ1c3\\\nRfYmVnaW5fdW53aW5kWT93YXNtX2JpbmRnZW46OmNvbnZlcnQ6OmNsb3N1cmVzOjppbnZva2UxX211\\\ndDo6aDNhODY3YjY0ZmUwYWFiNmZaMDwmVCBhcyBjb3JlOjpmbXQ6OkRlYnVnPjo6Zm10OjpoNTM3Nz\\\nkzYWE4MjQxMDQ4MFsyPCZUIGFzIGNvcmU6OmZtdDo6RGlzcGxheT46OmZtdDo6aDNhYWRlZGFlZDIw\\\nOGQ2MTBcMTxUIGFzIGNvcmU6OmFueTo6QW55Pjo6dHlwZV9pZDo6aGU1MmMxZDgyMGFjZjI0MTldD1\\\n9fd2JpbmRnZW5fZnJlZV4uY29yZTo6b3B0aW9uOjp1bndyYXBfZmFpbGVkOjpoMGUwYjIzMTYyM2Uw\\\nZDAwNF85Y29yZTo6b3BzOjpmdW5jdGlvbjo6Rm5PbmNlOjpjYWxsX29uY2U6OmhhY2E1ZDVhNmNjNz\\\nYwY2I2YB9fX3diaW5kZ2VuX2FkZF90b19zdGFja19wb2ludGVyYTF3YXNtX2JpbmRnZW46Ol9fcnQ6\\\nOnRocm93X251bGw6OmhkNmJjZTg5MGIxMjgyMDk3YjJ3YXNtX2JpbmRnZW46Ol9fcnQ6OmJvcnJvd1\\\n9mYWlsOjpoYmMzYmQxMjRhYTdhNmIyM2Mqd2FzbV9iaW5kZ2VuOjp0aHJvd19zdHI6OmhhNjgwY2I3\\\nZjEyZTAyYzk4ZElzdGQ6OnN5c19jb21tb246OmJhY2t0cmFjZTo6X19ydXN0X2VuZF9zaG9ydF9iYW\\\nNrdHJhY2U6OmhhNzY1MTNhNzBiYjA3MGIwZQZtZW1jcHlmBm1lbXNldGcGbWVtY21waApydXN0X3Bh\\\nbmljaVZjb3JlOjpwdHI6OmRyb3BfaW5fcGxhY2U8YXJyYXl2ZWM6OmVycm9yczo6Q2FwYWNpdHlFcn\\\nJvcjxbdTg7IDMyXT4+OjpoZmVjZDhkNzYxMTVjNjA2Y2pXY29yZTo6cHRyOjpkcm9wX2luX3BsYWNl\\\nPGFycmF5dmVjOjplcnJvcnM6OkNhcGFjaXR5RXJyb3I8Jlt1ODsgNjRdPj46Omg4NjUxY2YyYTQ5NW\\\nMyOTNmaz1jb3JlOjpwdHI6OmRyb3BfaW5fcGxhY2U8Y29yZTo6Zm10OjpFcnJvcj46Omg5YTkzNjE3\\\nOWFjZDQ1YjNkAG8JcHJvZHVjZXJzAghsYW5ndWFnZQEEUnVzdAAMcHJvY2Vzc2VkLWJ5AwVydXN0Yx\\\n0xLjc3LjIgKDI1ZWY5ZTNkOCAyMDI0LTA0LTA5KQZ3YWxydXMGMC4yMC4zDHdhc20tYmluZGdlbgYw\\\nLjIuOTIALA90YXJnZXRfZmVhdHVyZXMCKw9tdXRhYmxlLWdsb2JhbHMrCHNpZ24tZXh0\\\n    \",\n  );\n  const wasmModule = new WebAssembly.Module(wasmBytes);\n  return new WebAssembly.Instance(wasmModule, imports);\n}\n\nfunction base64decode(b64) {\n  const binString = atob(b64);\n  const size = binString.length;\n  const bytes = new Uint8Array(size);\n  for (let i = 0; i < size; i++) {\n    bytes[i] = binString.charCodeAt(i);\n  }\n  return bytes;\n}\n","// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\nexport {\n  instantiate as instantiateWasm,\n} from \"./lib/deno_std_wasm_crypto.generated.mjs\";\n\n/**\n * All cryptographic hash/digest algorithms supported by std/crypto.\n *\n * For algorithms that are supported by WebCrypto, the name here will match the\n * one used by WebCrypto. Otherwise we prefer the formatting used in the\n * algorithm's official specification. All names are uppercase to facilitate\n * case-insensitive comparisons required by the WebCrypto spec.\n */\nexport const DIGEST_ALGORITHM_NAMES = [\n  \"BLAKE2B\",\n  \"BLAKE2B-128\",\n  \"BLAKE2B-160\",\n  \"BLAKE2B-224\",\n  \"BLAKE2B-256\",\n  \"BLAKE2B-384\",\n  \"BLAKE2S\",\n  \"BLAKE3\",\n  \"KECCAK-224\",\n  \"KECCAK-256\",\n  \"KECCAK-384\",\n  \"KECCAK-512\",\n  \"SHA-384\",\n  \"SHA3-224\",\n  \"SHA3-256\",\n  \"SHA3-384\",\n  \"SHA3-512\",\n  \"SHAKE128\",\n  \"SHAKE256\",\n  \"TIGER\",\n  // insecure (length-extendable):\n  \"RIPEMD-160\",\n  \"SHA-224\",\n  \"SHA-256\",\n  \"SHA-512\",\n  // insecure (length-extendable and collidable):\n  \"MD4\",\n  \"MD5\",\n  \"SHA-1\",\n  // insecure (non-cryptographic)\n  \"FNV32\",\n  \"FNV32A\",\n  \"FNV64\",\n  \"FNV64A\",\n] as const;\n\n/** An algorithm name supported by std/crypto. */\nexport type DigestAlgorithmName = typeof DIGEST_ALGORITHM_NAMES[number];\n","// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// This module is browser compatible.\n\n/**\n * Extensions to the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API | Web Crypto API}\n * supporting additional encryption APIs, but also delegating to the built-in\n * APIs when possible.\n *\n * Provides additional digest algorithms that are not part of the WebCrypto\n * standard as well as a `subtle.digest` and `subtle.digestSync` methods.\n *\n * The {@linkcode KeyStack} export implements the {@linkcode KeyRing} interface\n * for managing rotatable keys for signing data to prevent tampering, like with\n * HTTP cookies.\n *\n * ## Supported algorithms\n *\n * Here is a list of supported algorithms. If the algorithm name in WebCrypto\n * and Wasm/Rust is the same, this library prefers to use the implementation\n * provided by WebCrypto.\n *\n * Length-adjustable algorithms support the\n * {@linkcode DigestAlgorithmObject.length} option.\n *\n * WebCrypto:\n * - `SHA-384`\n * - `SHA-256` (length-extendable)\n * - `SHA-512` (length-extendable)\n *\n * Wasm/Rust:\n * - `BLAKE2B`\n * - `BLAKE2B-128`\n * - `BLAKE2B-160`\n * - `BLAKE2B-224`\n * - `BLAKE2B-256`\n * - `BLAKE2B-384`\n * - `BLAKE2S`\n * - `BLAKE3` (length-adjustable)\n * - `KECCAK-224`\n * - `KECCAK-256`\n * - `KECCAK-384`\n * - `KECCAK-512`\n * - `SHA-384`\n * - `SHA3-224`\n * - `SHA3-256`\n * - `SHA3-384`\n * - `SHA3-512`\n * - `SHAKE128` (length-adjustable)\n * - `SHAKE256` (length-adjustable)\n * - `TIGER`\n * - `RIPEMD-160` (length-extendable)\n * - `SHA-224` (length-extendable)\n * - `SHA-256` (length-extendable)\n * - `SHA-512` (length-extendable)\n * - `MD4` (length-extendable and collidable)\n * - `MD5` (length-extendable and collidable)\n * - `SHA-1` (length-extendable and collidable)\n * - `FNV32` (non-cryptographic)\n * - `FNV32A` (non-cryptographic)\n * - `FNV64` (non-cryptographic)\n * - `FNV64A` (non-cryptographic)\n *\n * @example\n * ```ts\n * import { crypto } from \"@std/crypto\";\n *\n * // This will delegate to the runtime's WebCrypto implementation.\n * console.log(\n *   new Uint8Array(\n *     await crypto.subtle.digest(\n *       \"SHA-384\",\n *       new TextEncoder().encode(\"hello world\"),\n *     ),\n *   ),\n * );\n *\n * // This will use a bundled Wasm/Rust implementation.\n * console.log(\n *   new Uint8Array(\n *     await crypto.subtle.digest(\n *       \"BLAKE3\",\n *       new TextEncoder().encode(\"hello world\"),\n *     ),\n *   ),\n * );\n * ```\n *\n * @example Convert hash to a string\n *\n * ```ts\n * import {\n *   crypto,\n * } from \"@std/crypto\";\n * import { encodeHex } from \"@std/encoding/hex\"\n * import { encodeBase64 } from \"@std/encoding/base64\"\n *\n * const hash = await crypto.subtle.digest(\n *   \"SHA-384\",\n *   new TextEncoder().encode(\"You hear that Mr. Anderson?\"),\n * );\n *\n * // Hex encoding\n * console.log(encodeHex(hash));\n *\n * // Or with base64 encoding\n * console.log(encodeBase64(hash));\n * ```\n *\n * @module\n */\nimport {\n  DIGEST_ALGORITHM_NAMES,\n  type DigestAlgorithmName,\n  instantiateWasm,\n} from \"./_wasm/mod.js\";\n\nexport { DIGEST_ALGORITHM_NAMES, type DigestAlgorithmName };\n\n/** Digest algorithms supported by WebCrypto. */\nconst WEB_CRYPTO_DIGEST_ALGORITHM_NAMES = [\n  \"SHA-384\",\n  \"SHA-256\",\n  \"SHA-512\",\n  // insecure (length-extendable and collidable):\n  \"SHA-1\",\n] as const;\n\n/**\n * A copy of the global WebCrypto interface, with methods bound so they're\n * safe to re-export.\n */\nconst webCrypto = ((crypto) => ({\n  getRandomValues: crypto.getRandomValues?.bind(crypto),\n  randomUUID: crypto.randomUUID?.bind(crypto),\n  subtle: {\n    decrypt: crypto.subtle?.decrypt?.bind(crypto.subtle),\n    deriveBits: crypto.subtle?.deriveBits?.bind(crypto.subtle),\n    deriveKey: crypto.subtle?.deriveKey?.bind(crypto.subtle),\n    digest: crypto.subtle?.digest?.bind(crypto.subtle),\n    encrypt: crypto.subtle?.encrypt?.bind(crypto.subtle),\n    exportKey: crypto.subtle?.exportKey?.bind(crypto.subtle),\n    generateKey: crypto.subtle?.generateKey?.bind(crypto.subtle),\n    importKey: crypto.subtle?.importKey?.bind(crypto.subtle),\n    sign: crypto.subtle?.sign?.bind(crypto.subtle),\n    unwrapKey: crypto.subtle?.unwrapKey?.bind(crypto.subtle),\n    verify: crypto.subtle?.verify?.bind(crypto.subtle),\n    wrapKey: crypto.subtle?.wrapKey?.bind(crypto.subtle),\n  },\n}))(globalThis.crypto);\n\nfunction toUint8Array(data: unknown): Uint8Array | undefined {\n  if (data instanceof Uint8Array) {\n    return data;\n  } else if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n  } else if (data instanceof ArrayBuffer) {\n    return new Uint8Array(data);\n  }\n  return undefined;\n}\n\n/** Extensions to the web standard `SubtleCrypto` interface. */\nexport interface StdSubtleCrypto extends SubtleCrypto {\n  /**\n   * Returns a new `Promise` object that will digest `data` using the specified\n   * `AlgorithmIdentifier`.\n   */\n  digest(\n    algorithm: DigestAlgorithm,\n    data: BufferSource | AsyncIterable<BufferSource> | Iterable<BufferSource>,\n  ): Promise<ArrayBuffer>;\n\n  /**\n   * Returns a ArrayBuffer with the result of digesting `data` using the\n   * specified `AlgorithmIdentifier`.\n   */\n  digestSync(\n    algorithm: DigestAlgorithm,\n    data: BufferSource | Iterable<BufferSource>,\n  ): ArrayBuffer;\n}\n\n/** Extensions to the Web {@linkcode Crypto} interface. */\nexport interface StdCrypto extends Crypto {\n  /** Extension to the {@linkcode crypto.SubtleCrypto} interface. */\n  readonly subtle: StdSubtleCrypto;\n}\n\n/**\n * An wrapper for WebCrypto adding support for additional non-standard\n * algorithms, but delegating to the runtime WebCrypto implementation whenever\n * possible.\n */\nconst stdCrypto: StdCrypto = ((x) => x)({\n  ...webCrypto,\n  subtle: {\n    ...webCrypto.subtle,\n\n    /**\n     * Polyfills stream support until the Web Crypto API does so:\n     * @see {@link https://github.com/wintercg/proposal-webcrypto-streams}\n     */\n    async digest(\n      algorithm: DigestAlgorithm,\n      data: BufferSource | AsyncIterable<BufferSource> | Iterable<BufferSource>,\n    ): Promise<ArrayBuffer> {\n      const { name, length } = normalizeAlgorithm(algorithm);\n\n      assertValidDigestLength(length);\n\n      // We delegate to WebCrypto whenever possible,\n      if (\n        // if the algorithm is supported by the WebCrypto standard,\n        (WEB_CRYPTO_DIGEST_ALGORITHM_NAMES as readonly string[]).includes(\n          name,\n        ) &&\n        // and the data is a single buffer,\n        isBufferSource(data)\n      ) {\n        return await webCrypto.subtle.digest(algorithm, data);\n      } else if (DIGEST_ALGORITHM_NAMES.includes(name as DigestAlgorithmName)) {\n        if (isBufferSource(data)) {\n          // Otherwise, we use our bundled Wasm implementation via digestSync\n          // if it supports the algorithm.\n          return stdCrypto.subtle.digestSync(algorithm, data);\n        } else if (isIterable(data)) {\n          return stdCrypto.subtle.digestSync(\n            algorithm,\n            data as Iterable<BufferSource>,\n          );\n        } else if (isAsyncIterable(data)) {\n          const wasmCrypto = instantiateWasm();\n          const context = new wasmCrypto.DigestContext(name);\n          for await (const chunk of data as AsyncIterable<BufferSource>) {\n            const chunkBytes = toUint8Array(chunk);\n            if (!chunkBytes) {\n              throw new TypeError(\n                \"Cannot digest the data: A chunk is not ArrayBuffer nor ArrayBufferView\",\n              );\n            }\n            context.update(chunkBytes);\n          }\n          return context.digestAndDrop(length).buffer;\n        } else {\n          throw new TypeError(\n            \"data must be a BufferSource or [Async]Iterable<BufferSource>\",\n          );\n        }\n      }\n      // (TypeScript type definitions prohibit this case.) If they're trying\n      // to call an algorithm we don't recognize, pass it along to WebCrypto\n      // in case it's a non-standard algorithm supported by the the runtime\n      // they're using.\n      return await webCrypto.subtle.digest(algorithm, data as BufferSource);\n    },\n\n    digestSync(\n      algorithm: DigestAlgorithm,\n      data: BufferSource | Iterable<BufferSource>,\n    ): ArrayBuffer {\n      const { name, length } = normalizeAlgorithm(algorithm);\n      assertValidDigestLength(length);\n\n      const wasmCrypto = instantiateWasm();\n      if (isBufferSource(data)) {\n        const bytes = toUint8Array(data)!;\n        return wasmCrypto.digest(name, bytes, length).buffer;\n      }\n      if (isIterable(data)) {\n        const context = new wasmCrypto.DigestContext(name);\n        for (const chunk of data) {\n          const chunkBytes = toUint8Array(chunk);\n          if (!chunkBytes) {\n            throw new TypeError(\n              \"Cannot digest the data: A chunk is not ArrayBuffer nor ArrayBufferView\",\n            );\n          }\n          context.update(chunkBytes);\n        }\n        return context.digestAndDrop(length).buffer;\n      }\n      throw new TypeError(\n        \"data must be a BufferSource or Iterable<BufferSource>\",\n      );\n    },\n  },\n});\n\n/*\n * The largest digest length the current Wasm implementation can support. This\n * is the value of `isize::MAX` on 32-bit platforms like Wasm, which is the\n * maximum allowed capacity of a Rust `Vec<u8>`.\n */\nconst MAX_DIGEST_LENGTH = 0x7FFF_FFFF;\n\n/**\n * Asserts that a number is a valid length for a digest, which must be an\n * integer that fits in a Rust `Vec<u8>`, or be undefined.\n */\nfunction assertValidDigestLength(value?: number) {\n  if (\n    value !== undefined &&\n    (value < 0 || value > MAX_DIGEST_LENGTH ||\n      !Number.isInteger(value))\n  ) {\n    throw new RangeError(\n      `length must be an integer between 0 and ${MAX_DIGEST_LENGTH}, inclusive`,\n    );\n  }\n}\n\n/** Extended digest algorithm objects. */\nexport type DigestAlgorithmObject = {\n  name: DigestAlgorithmName;\n  length?: number;\n};\n\n/**\n * Extended digest algorithms accepted by {@linkcode stdCrypto.subtle.digest}.\n *\n * The `length` option will be ignored for\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest#algorithm | Web Standard algorithms}.\n */\nexport type DigestAlgorithm = DigestAlgorithmName | DigestAlgorithmObject;\n\nfunction normalizeAlgorithm(algorithm: DigestAlgorithm) {\n  return ((typeof algorithm === \"string\")\n    ? { name: algorithm.toUpperCase() }\n    : {\n      ...algorithm,\n      name: algorithm.name.toUpperCase(),\n    }) as DigestAlgorithmObject;\n}\n\nfunction isBufferSource(obj: unknown): obj is BufferSource {\n  return obj instanceof ArrayBuffer || ArrayBuffer.isView(obj);\n}\n\nfunction isIterable<T>(obj: unknown): obj is Iterable<T> {\n  return typeof (obj as Iterable<T>)[Symbol.iterator] === \"function\";\n}\n\nfunction isAsyncIterable<T>(obj: unknown): obj is AsyncIterable<T> {\n  return typeof (obj as AsyncIterable<T>)[Symbol.asyncIterator] === \"function\";\n}\n\nexport { stdCrypto as crypto };\n","// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\nconst encoder = new TextEncoder();\n\nfunction getTypeName(value: unknown): string {\n  const type = typeof value;\n  if (type !== \"object\") {\n    return type;\n  } else if (value === null) {\n    return \"null\";\n  } else {\n    return value?.constructor?.name ?? \"object\";\n  }\n}\n\nexport function validateBinaryLike(source: unknown): Uint8Array {\n  if (typeof source === \"string\") {\n    return encoder.encode(source);\n  } else if (source instanceof Uint8Array) {\n    return source;\n  } else if (source instanceof ArrayBuffer) {\n    return new Uint8Array(source);\n  }\n  throw new TypeError(\n    `Cannot validate the input as it must be a Uint8Array, a string, or an ArrayBuffer: received a value of the type ${\n      getTypeName(source)\n    }`,\n  );\n}\n","// Copyright 2009 The Go Authors. All rights reserved.\n// https://github.com/golang/go/blob/master/LICENSE\n// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// This module is browser compatible.\n\n/**\n * Port of the Go\n * {@link https://github.com/golang/go/blob/go1.12.5/src/encoding/hex/hex.go | encoding/hex}\n * library.\n *\n * ```ts\n * import {\n *   decodeHex,\n *   encodeHex,\n * } from \"@std/encoding/hex\";\n * import { assertEquals } from \"@std/assert\";\n *\n * assertEquals(encodeHex(\"abc\"), \"616263\");\n *\n * assertEquals(\n *   decodeHex(\"616263\"),\n *   new TextEncoder().encode(\"abc\"),\n * );\n * ```\n *\n * @module\n */\n\nimport { validateBinaryLike } from \"./_validate_binary_like.js\";\n\nconst hexTable = new TextEncoder().encode(\"0123456789abcdef\");\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\n\nfunction errInvalidByte(byte: number) {\n  return new TypeError(`Invalid byte '${String.fromCharCode(byte)}'`);\n}\n\nfunction errLength(len: number) {\n  return new RangeError(\n    `Cannot decode the hex string as the input length should be even: length is ${len}`,\n  );\n}\n\n/** Converts a hex character into its value. */\nfunction fromHexChar(byte: number): number {\n  // '0' <= byte && byte <= '9'\n  if (48 <= byte && byte <= 57) return byte - 48;\n  // 'a' <= byte && byte <= 'f'\n  if (97 <= byte && byte <= 102) return byte - 97 + 10;\n  // 'A' <= byte && byte <= 'F'\n  if (65 <= byte && byte <= 70) return byte - 65 + 10;\n\n  throw errInvalidByte(byte);\n}\n\n/**\n * Converts data into a hex-encoded string.\n *\n * @param src The data to encode.\n *\n * @returns The hex-encoded string.\n *\n * @example Usage\n * ```ts\n * import { encodeHex } from \"@std/encoding/hex\";\n * import { assertEquals } from \"@std/assert\";\n *\n * assertEquals(encodeHex(\"abc\"), \"616263\");\n * ```\n */\nexport function encodeHex(src: string | Uint8Array | ArrayBuffer): string {\n  const u8 = validateBinaryLike(src);\n\n  const dst = new Uint8Array(u8.length * 2);\n  for (let i = 0; i < u8.length; i++) {\n    const v = u8[i]!;\n    dst[i * 2] = hexTable[v >> 4]!;\n    dst[i * 2 + 1] = hexTable[v & 0x0f]!;\n  }\n  return textDecoder.decode(dst);\n}\n\n/**\n * Decodes the given hex-encoded string. If the input is malformed, an error is\n * thrown.\n *\n * @param src The hex-encoded string to decode.\n *\n * @returns The decoded data.\n *\n * @example Usage\n * ```ts\n * import { decodeHex } from \"@std/encoding/hex\";\n * import { assertEquals } from \"@std/assert\";\n *\n * assertEquals(\n *   decodeHex(\"616263\"),\n *   new TextEncoder().encode(\"abc\"),\n * );\n * ```\n */\nexport function decodeHex(src: string): Uint8Array {\n  const u8 = textEncoder.encode(src);\n  const dst = new Uint8Array(u8.length / 2);\n  for (let i = 0; i < dst.length; i++) {\n    const a = fromHexChar(u8[i * 2]!);\n    const b = fromHexChar(u8[i * 2 + 1]!);\n    dst[i] = (a << 4) | b;\n  }\n\n  if (u8.length % 2 === 1) {\n    // Check for invalid char before reporting bad length,\n    // since the invalid char (if present) is an earlier problem.\n    fromHexChar(u8[dst.length * 2]!);\n    throw errLength(u8.length);\n  }\n\n  return dst;\n}\n","import type { BufferReader } from '../buffer-reader.js';\nimport type { BufferWriter } from '../buffer-writer.js';\nimport type { ConnectionState } from '../connection.types.js';\nimport type { ConnectionSignal } from '../signals.js';\n\nexport interface AuthFlow {\n  createInitialAuthMessage(): Uint8Array | undefined;\n  handleClientMessage(message: BufferSource): AsyncGenerator<Uint8Array | ConnectionSignal>;\n  isCompleted: boolean;\n}\n\nexport abstract class BaseAuthFlow implements AuthFlow {\n  protected reader: BufferReader;\n  protected writer: BufferWriter;\n  protected connectionState: ConnectionState;\n\n  constructor(params: {\n    reader: BufferReader;\n    writer: BufferWriter;\n    connectionState: ConnectionState;\n  }) {\n    this.reader = params.reader;\n    this.writer = params.writer;\n    this.connectionState = params.connectionState;\n  }\n\n  abstract createInitialAuthMessage(): Uint8Array | undefined;\n  abstract handleClientMessage(\n    message: BufferSource,\n  ): AsyncGenerator<Uint8Array | ConnectionSignal>;\n  abstract get isCompleted(): boolean;\n}\n","import { concat } from '@std/bytes/concat';\nimport { crypto } from '@std/crypto';\nimport { encodeHex } from '@std/encoding/hex';\nimport { BackendError } from '../backend-error.js';\nimport type { BufferReader } from '../buffer-reader.js';\nimport type { BufferWriter } from '../buffer-writer.js';\nimport type { ConnectionState } from '../connection.types';\nimport { BackendMessageCode } from '../message-codes';\nimport { closeSignal } from '../signals.js';\nimport { BaseAuthFlow } from './base-auth-flow';\n\nexport type Md5AuthOptions = {\n  method: 'md5';\n  validateCredentials?: (\n    credentials: {\n      username: string;\n      preHashedPassword: string;\n      salt: Uint8Array;\n      hashedPassword: string;\n    },\n    connectionState: ConnectionState,\n  ) => boolean | Promise<boolean>;\n  getPreHashedPassword: (\n    credentials: { username: string },\n    connectionState: ConnectionState,\n  ) => string | Promise<string>;\n};\n\nexport class Md5AuthFlow extends BaseAuthFlow {\n  private auth: Md5AuthOptions & {\n    validateCredentials: NonNullable<Md5AuthOptions['validateCredentials']>;\n  };\n  private username: string;\n  private salt: Uint8Array;\n  private completed: boolean;\n\n  constructor(params: {\n    auth: Md5AuthOptions;\n    username: string;\n    reader: BufferReader;\n    writer: BufferWriter;\n    connectionState: ConnectionState;\n  }) {\n    super(params);\n\n    this.completed = false;\n    this.auth = {\n      ...params.auth,\n      validateCredentials:\n        params.auth.validateCredentials ??\n        (async ({ preHashedPassword, hashedPassword, salt }) => {\n          const expectedHashedPassword = await hashPreHashedPassword(preHashedPassword, salt);\n          return hashedPassword === expectedHashedPassword;\n        }),\n    };\n    this.username = params.username;\n    this.salt = generateMd5Salt();\n  }\n\n  async *handleClientMessage(message: Uint8Array) {\n    const length = this.reader.int32();\n    const hashedPassword = this.reader.cstring();\n\n    const preHashedPassword = await this.auth.getPreHashedPassword(\n      {\n        username: this.username,\n      },\n      this.connectionState,\n    );\n    const isValid = await this.auth.validateCredentials(\n      {\n        username: this.username,\n        hashedPassword,\n        preHashedPassword,\n        salt: this.salt,\n      },\n      this.connectionState,\n    );\n\n    if (!isValid) {\n      yield BackendError.create({\n        severity: 'FATAL',\n        code: '28P01',\n        message: `password authentication failed for user \"${this.username}\"`,\n      }).flush();\n      yield closeSignal;\n      return;\n    }\n\n    this.completed = true;\n  }\n\n  override createInitialAuthMessage() {\n    return this.createAuthenticationMD5Password();\n  }\n\n  get isCompleted(): boolean {\n    return this.completed;\n  }\n\n  /**\n   * Creates the authentication response.\n   *\n   * @see https://www.postgresql.org/docs/current/protocol-flow.html#PROTOCOL-FLOW-START-UP\n   */\n  private createAuthenticationMD5Password() {\n    this.writer.addInt32(5);\n    this.writer.add(Buffer.from(this.salt));\n\n    return this.writer.flush(BackendMessageCode.AuthenticationResponse);\n  }\n}\n\n/**\n * Hashes a password using Postgres' nested MD5 algorithm.\n *\n * @see https://www.postgresql.org/docs/current/protocol-flow.html#PROTOCOL-FLOW-START-UP\n */\nexport async function hashPreHashedPassword(preHashedPassword: string, salt: Uint8Array) {\n  const hash = await md5(concat([new TextEncoder().encode(preHashedPassword), salt]));\n  return `md5${hash}`;\n}\n\n/**\n * Computes the MD5 hash of the given value.\n */\nexport async function md5(value: string | Uint8Array) {\n  const hash = await crypto.subtle.digest(\n    'MD5',\n    typeof value === 'string' ? new TextEncoder().encode(value) : value,\n  );\n\n  return encodeHex(hash);\n}\n\n/**\n * Generates a random 4-byte salt for MD5 hashing.\n */\nexport function generateMd5Salt() {\n  const salt = new Uint8Array(4);\n  crypto.getRandomValues(salt);\n  return salt;\n}\n\nexport async function createPreHashedPassword(username: string, password: string) {\n  return await md5(`${password}${username}`);\n}\n","// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// This module is browser compatible.\n\n/**\n * Utilities for\n * {@link https://www.rfc-editor.org/rfc/rfc4648.html#section-4 | base64}\n * encoding and decoding.\n *\n * ```ts\n * import {\n *   encodeBase64,\n *   decodeBase64,\n * } from \"@std/encoding/base64\";\n * import { assertEquals } from \"@std/assert\";\n *\n * const foobar = new TextEncoder().encode(\"foobar\");\n *\n * assertEquals(encodeBase64(foobar), \"Zm9vYmFy\");\n * assertEquals(decodeBase64(\"Zm9vYmFy\"), foobar);\n * ```\n *\n * @module\n */\n\nimport { validateBinaryLike } from \"./_validate_binary_like.js\";\n\nconst base64abc = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"+\",\n  \"/\",\n];\n\n/**\n * Converts data into a base64-encoded string.\n *\n * @see {@link https://www.rfc-editor.org/rfc/rfc4648.html#section-4}\n *\n * @param data The data to encode.\n * @returns The base64-encoded string.\n *\n * @example Usage\n * ```ts\n * import { encodeBase64 } from \"@std/encoding/base64\";\n * import { assertEquals } from \"@std/assert\";\n *\n * assertEquals(encodeBase64(\"foobar\"), \"Zm9vYmFy\");\n * ```\n */\nexport function encodeBase64(data: ArrayBuffer | Uint8Array | string): string {\n  // CREDIT: https://gist.github.com/enepomnyaschih/72c423f727d395eeaa09697058238727\n  const uint8 = validateBinaryLike(data);\n  let result = \"\";\n  let i;\n  const l = uint8.length;\n  for (i = 2; i < l; i += 3) {\n    result += base64abc[(uint8[i - 2]!) >> 2];\n    result += base64abc[\n      (((uint8[i - 2]!) & 0x03) << 4) |\n      ((uint8[i - 1]!) >> 4)\n    ];\n    result += base64abc[\n      (((uint8[i - 1]!) & 0x0f) << 2) |\n      ((uint8[i]!) >> 6)\n    ];\n    result += base64abc[(uint8[i]!) & 0x3f];\n  }\n  if (i === l + 1) {\n    // 1 octet yet to write\n    result += base64abc[(uint8[i - 2]!) >> 2];\n    result += base64abc[((uint8[i - 2]!) & 0x03) << 4];\n    result += \"==\";\n  }\n  if (i === l) {\n    // 2 octets yet to write\n    result += base64abc[(uint8[i - 2]!) >> 2];\n    result += base64abc[\n      (((uint8[i - 2]!) & 0x03) << 4) |\n      ((uint8[i - 1]!) >> 4)\n    ];\n    result += base64abc[((uint8[i - 1]!) & 0x0f) << 2];\n    result += \"=\";\n  }\n  return result;\n}\n\n/**\n * Decodes a base64-encoded string.\n *\n * @see {@link https://www.rfc-editor.org/rfc/rfc4648.html#section-4}\n *\n * @param b64 The base64-encoded string to decode.\n * @returns The decoded data.\n *\n * @example Usage\n * ```ts\n * import { decodeBase64 } from \"@std/encoding/base64\";\n * import { assertEquals } from \"@std/assert\";\n *\n * assertEquals(\n *   decodeBase64(\"Zm9vYmFy\"),\n *   new TextEncoder().encode(\"foobar\")\n * );\n * ```\n */\nexport function decodeBase64(b64: string): Uint8Array {\n  const binString = atob(b64);\n  const size = binString.length;\n  const bytes = new Uint8Array(size);\n  for (let i = 0; i < size; i++) {\n    bytes[i] = binString.charCodeAt(i);\n  }\n  return bytes;\n}\n","/**\n * Derives a cryptographic key from a password using the PBKDF2 algorithm.\n *\n * This function uses Web Crypto's `SubtleCrypto` API to derive a key from\n * a given password, salt, iteration count, and hash algorithm. The derived\n * key is returned as raw bits (an `ArrayBuffer`) and can be used in subsequent\n * cryptographic operations.\n *\n * PBKDF2 (Password-Based Key Derivation Function 2) is a widely used key\n * derivation function that applies a selected HMAC digest algorithm (e.g., SHA-256)\n * to derive a key of the requested length.\n */\nexport async function pbkdf2(\n  password: string,\n  salt: ArrayBuffer,\n  iterations: number,\n  length: number,\n  hashAlgorithm: 'SHA-256' | 'SHA-384' | 'SHA-512',\n) {\n  const encoder = new TextEncoder();\n\n  const keyMaterial = await crypto.subtle.importKey(\n    'raw',\n    encoder.encode(password),\n    'PBKDF2',\n    false,\n    ['deriveBits'],\n  );\n\n  const derivedBits = await crypto.subtle.deriveBits(\n    {\n      name: 'PBKDF2',\n      salt,\n      iterations: iterations,\n      hash: hashAlgorithm, // use the specified hash algorithm\n    },\n    keyMaterial,\n    length * 8, // length in bits (e.g., 32 bytes * 8 = 256 bits)\n  );\n\n  return derivedBits;\n}\n\n/**\n * Creates an HMAC key and generates a message authentication code (MAC)\n * for the given message using the specified hash algorithm.\n *\n * This function first imports the provided key as a `CryptoKey` using\n * the HMAC algorithm and specified hash function. It then generates an\n * HMAC for the given message. The HMAC is returned as an `ArrayBuffer`.\n *\n * HMAC (Hash-based Message Authentication Code) is a mechanism that uses\n * a cryptographic hash function along with a secret key to ensure data integrity\n * and authenticity.\n */\nexport async function createHmacKey(\n  key: ArrayBuffer,\n  message: string,\n  algorithm: 'SHA-256' | 'SHA-384' | 'SHA-512',\n) {\n  const encoder = new TextEncoder();\n\n  const keyMaterial = await crypto.subtle.importKey(\n    'raw',\n    key,\n    {\n      name: 'HMAC',\n      hash: { name: algorithm },\n    },\n    false,\n    ['sign'],\n  );\n\n  const hmacKey = await crypto.subtle.sign('HMAC', keyMaterial, encoder.encode(message));\n\n  return hmacKey;\n}\n\n/**\n * Computes a cryptographic hash of the given key using the specified hash algorithm.\n *\n * This function utilizes Web Crypto's `SubtleCrypto.digest` method to compute\n * a hash of the provided key material. The resulting hash is returned as an\n * `ArrayBuffer`. This can be used to create a hashed version of a key or any\n * other binary data.\n */\nexport async function createHashKey(\n  key: ArrayBuffer,\n  algorithm: 'SHA-256' | 'SHA-384' | 'SHA-512',\n) {\n  const hashKey = await crypto.subtle.digest(\n    {\n      name: algorithm,\n    },\n    key,\n  );\n\n  return hashKey;\n}\n\n/**\n * Implements a timing-safe equal function that compares two buffers in\n * constant time.\n *\n * Web Crypto's `SubtleCrypto` API does not provide a built-in timing-safe\n * equal function, but this logic can be implemented by leveraging HMACs,\n * which inherently require constant-time comparisons for verification.\n *\n * This function generates an HMAC for the first buffer and uses Web Crypto's\n * `verify` method to perform a timing-safe comparison against the second buffer.\n *\n * @see https://github.com/w3c/webcrypto/issues/270#issuecomment-1899234835\n */\nexport async function timingSafeEqual(bufferA: BufferSource, bufferB: BufferSource) {\n  const algorithm: HmacKeyGenParams = { name: 'HMAC', hash: 'SHA-256' };\n  const key = await crypto.subtle.generateKey(algorithm, false, ['sign', 'verify']);\n  const hmac = await crypto.subtle.sign(algorithm, key, bufferA);\n  const equal = await crypto.subtle.verify(algorithm, key, hmac, bufferB);\n  return equal;\n}\n","import type { BufferWriter } from '../../buffer-writer.js';\nimport { BackendMessageCode } from '../../message-codes.js';\n\nconst SaslMessageCode = {\n  AuthenticationSASL: 10,\n  AuthenticationSASLContinue: 11,\n  AuthenticationSASLFinal: 12,\n} as const;\n\nexport class SaslMechanism {\n  writer: BufferWriter;\n  constructor(params: {\n    writer: BufferWriter;\n  }) {\n    this.writer = params.writer;\n  }\n\n  createAuthenticationSASL() {\n    const mechanisms = ['SCRAM-SHA-256'];\n    this.writer.addInt32(SaslMessageCode.AuthenticationSASL);\n    for (const mechanism of mechanisms) {\n      this.writer.addCString(mechanism);\n    }\n    this.writer.addCString('');\n    return this.writer.flush(BackendMessageCode.AuthenticationResponse);\n  }\n\n  createAuthenticationSASLContinue(message: string) {\n    this.writer.addInt32(SaslMessageCode.AuthenticationSASLContinue);\n    this.writer.addString(message);\n    return this.writer.flush(BackendMessageCode.AuthenticationResponse);\n  }\n\n  createAuthenticationSASLFinal(message: string) {\n    this.writer.addInt32(SaslMessageCode.AuthenticationSASLFinal);\n    this.writer.addString(message);\n    return this.writer.flush(BackendMessageCode.AuthenticationResponse);\n  }\n}\n","import { decodeBase64, encodeBase64 } from '@std/encoding/base64';\nimport { BackendError } from '../../backend-error.js';\nimport type { BufferReader } from '../../buffer-reader.js';\nimport type { BufferWriter } from '../../buffer-writer.js';\nimport type { ConnectionState } from '../../connection.types';\nimport { createHashKey, createHmacKey, pbkdf2, timingSafeEqual } from '../../crypto.js';\nimport { closeSignal } from '../../signals.js';\nimport type { AuthFlow } from '../base-auth-flow';\nimport { SaslMechanism } from './sasl-mechanism';\n\nexport type ScramSha256Data = {\n  salt: string;\n  iterations: number;\n  storedKey: string;\n  serverKey: string;\n};\n\nexport type ScramSha256AuthOptions = {\n  method: 'scram-sha-256';\n  validateCredentials?: (\n    params: {\n      authMessage: string;\n      clientProof: string;\n      username: string;\n      scramSha256Data: ScramSha256Data;\n    },\n    connectionState: ConnectionState,\n  ) => boolean | Promise<boolean>;\n  getScramSha256Data: (\n    params: {\n      username: string;\n    },\n    connectionState: ConnectionState,\n  ) => ScramSha256Data | Promise<ScramSha256Data>;\n};\n\n/**\n * Creates scram-sha-256 data for password authentication.\n * @see https://www.postgresql.org/docs/current/sasl-authentication.html\n */\nexport async function createScramSha256Data(\n  password: string,\n  iterations = 4096,\n): Promise<ScramSha256Data> {\n  const salt = new Uint8Array(16);\n  crypto.getRandomValues(salt);\n\n  const saltedPassword = await pbkdf2(password, salt, iterations, 32, 'SHA-256');\n  const clientKey = await createHmacKey(saltedPassword, 'Client Key', 'SHA-256');\n  const storedKey = await createHashKey(clientKey, 'SHA-256');\n  const serverKey = await createHmacKey(saltedPassword, 'Server Key', 'SHA-256');\n\n  return {\n    salt: encodeBase64(salt),\n    iterations,\n    storedKey: encodeBase64(storedKey),\n    serverKey: encodeBase64(serverKey),\n  };\n}\n\n/**\n * Verifies a scram-sha-256 password using the provided parameters.\n * @see https://www.postgresql.org/docs/current/sasl-authentication.html\n */\nexport async function verifyScramSha256Password(params: {\n  authMessage: string;\n  clientProof: string;\n  storedKey: string;\n}) {\n  const { authMessage, clientProof, storedKey } = params;\n  const clientProofBuffer = decodeBase64(clientProof);\n  const storedKeyBuffer = decodeBase64(storedKey);\n\n  const clientSignature = await createHmacKey(storedKeyBuffer, authMessage, 'SHA-256');\n  const clientSignatureView = new Uint8Array(clientSignature);\n  const clientKey = new Uint8Array(clientProofBuffer.length);\n\n  for (let i = 0; i < clientProofBuffer.length; i++) {\n    // biome-ignore lint/style/noNonNullAssertion: <explanation>\n    clientKey[i] = clientProofBuffer[i]! ^ clientSignatureView[i]!;\n  }\n\n  const computedStoredKey = await createHashKey(clientKey, 'SHA-256');\n\n  return await timingSafeEqual(storedKeyBuffer, computedStoredKey);\n}\n\nconst ScramSha256Step = {\n  Initial: 'Initial',\n  ServerFirstMessage: 'ServerFirstMessage',\n  ServerFinalMessage: 'ServerFinalMessage',\n  Completed: 'Completed',\n} as const;\n\ntype ScramSha256Step = (typeof ScramSha256Step)[keyof typeof ScramSha256Step];\n\nexport class ScramSha256AuthFlow extends SaslMechanism implements AuthFlow {\n  auth: ScramSha256AuthOptions & {\n    validateCredentials: NonNullable<ScramSha256AuthOptions['validateCredentials']>;\n  };\n  username: string;\n  clientFirstMessageBare?: string;\n  serverFirstMessage?: string;\n  serverNonce?: string;\n  step: ScramSha256Step;\n  reader: BufferReader;\n  scramSha256Data?: ScramSha256Data;\n  connectionState: ConnectionState;\n\n  constructor(params: {\n    auth: ScramSha256AuthOptions;\n    username: string;\n    reader: BufferReader;\n    writer: BufferWriter;\n    connectionState: ConnectionState;\n  }) {\n    super({ writer: params.writer });\n\n    this.step = ScramSha256Step.Initial;\n    this.username = params.username;\n    this.auth = {\n      ...params.auth,\n      validateCredentials:\n        params.auth.validateCredentials ??\n        (async ({ authMessage, clientProof, scramSha256Data }) => {\n          return verifyScramSha256Password({\n            authMessage,\n            clientProof,\n            storedKey: scramSha256Data.storedKey,\n          });\n        }),\n    };\n    this.reader = params.reader;\n    this.connectionState = params.connectionState;\n  }\n\n  /**\n   * Get the scram-sha-256 data for the username.\n   * This function is cached to always return the same data as we are generating random values in createScramSha256Data.\n   */\n  async getScramSha256Data(params: { username: string }) {\n    if (!this.scramSha256Data) {\n      this.scramSha256Data = await this.auth.getScramSha256Data(params, this.connectionState);\n    }\n    return this.scramSha256Data;\n  }\n\n  createInitialAuthMessage() {\n    return this.createAuthenticationSASL();\n  }\n\n  async *handleClientMessage(message: BufferSource) {\n    switch (this.step) {\n      case ScramSha256Step.Initial:\n        return yield* this.handleClientFirstMessage(message);\n      case ScramSha256Step.ServerFirstMessage:\n        return yield* this.handleClientFinalMessage(message);\n      default:\n        throw new Error('Unexpected SCRAM-SHA-256 authentication step');\n    }\n  }\n\n  async *handleClientFirstMessage(message: BufferSource) {\n    const length = this.reader.int32();\n    const saslMechanism = this.reader.cstring();\n\n    if (saslMechanism !== 'SCRAM-SHA-256') {\n      yield BackendError.create({\n        severity: 'FATAL',\n        code: '28000',\n        message: 'Unsupported SASL authentication mechanism',\n      }).flush();\n      yield closeSignal;\n      return;\n    }\n\n    const responseLength = this.reader.int32();\n    const clientFirstMessage = this.reader.string(responseLength);\n\n    const serverFirstMessage = await this.createServerFirstMessage(clientFirstMessage);\n\n    this.step = ScramSha256Step.ServerFirstMessage;\n    yield this.createAuthenticationSASLContinue(serverFirstMessage);\n  }\n\n  async createServerFirstMessage(clientFirstMessage: string) {\n    const clientFirstMessageParts = clientFirstMessage.split(',');\n    this.clientFirstMessageBare = clientFirstMessageParts.slice(2).join(',');\n    const clientNonce =\n      clientFirstMessageParts.find((part) => part.startsWith('r='))?.substring(2) || '';\n\n    // Generate server nonce by appending random bytes to client nonce\n    const serverNoncePart = new Uint8Array(18);\n    crypto.getRandomValues(serverNoncePart);\n\n    this.serverNonce = clientNonce + encodeBase64(serverNoncePart);\n\n    const { salt, iterations } = await this.getScramSha256Data({\n      username: this.username,\n    });\n    this.serverFirstMessage = `r=${this.serverNonce},s=${salt},i=${iterations}`;\n\n    return this.serverFirstMessage;\n  }\n\n  async *handleClientFinalMessage(message: BufferSource) {\n    try {\n      const serverFinalMessage = await this.createServerFinalMessage(message);\n      this.step = ScramSha256Step.Completed;\n      yield this.createAuthenticationSASLFinal(serverFinalMessage);\n    } catch (error) {\n      yield BackendError.create({\n        severity: 'FATAL',\n        code: '28000',\n        message: (error as Error).message,\n      }).flush();\n      yield closeSignal;\n      return;\n    }\n  }\n\n  get isCompleted() {\n    return this.step === ScramSha256Step.Completed;\n  }\n\n  async createServerFinalMessage(message: BufferSource) {\n    const length = this.reader.int32();\n    const stringLength = length - 4; // length includes header\n    const clientFinalMessage = this.reader.string(stringLength);\n    const clientFinalMessageParts = clientFinalMessage.split(',');\n    const channelBinding = clientFinalMessageParts\n      .find((part) => part.startsWith('c='))\n      ?.substring(2);\n    const fullNonce = clientFinalMessageParts.find((part) => part.startsWith('r='))?.substring(2);\n    const clientProof = clientFinalMessageParts.find((part) => part.startsWith('p='))?.substring(2);\n\n    if (!channelBinding || !fullNonce || !clientProof) {\n      throw new Error('Invalid client final message');\n    }\n\n    // Verify that the nonce matches what we expect\n    if (fullNonce !== this.serverNonce) {\n      throw new Error('Nonce mismatch');\n    }\n\n    // Reconstruct the client-final-message-without-proof\n    const clientFinalMessageWithoutProof = `c=${channelBinding},r=${fullNonce}`;\n\n    // Construct the full authMessage\n    const authMessage = `${this.clientFirstMessageBare},${this.serverFirstMessage},${clientFinalMessageWithoutProof}`;\n\n    const data = await this.getScramSha256Data({\n      username: this.username,\n    });\n\n    const isValid = await this.auth.validateCredentials(\n      {\n        authMessage,\n        clientProof,\n        username: this.username,\n        scramSha256Data: data,\n      },\n      this.connectionState,\n    );\n\n    if (!isValid) {\n      throw new Error(`password authentication failed for user \"${this.username}\"`);\n    }\n\n    const serverKeyBuffer = decodeBase64(data.serverKey);\n    const serverSignature = await createHmacKey(serverKeyBuffer, authMessage, 'SHA-256');\n\n    return `v=${encodeBase64(serverSignature)}`;\n  }\n}\n","export type ClientParameters = {\n  user: string;\n  [key: string]: string;\n};\n\nexport type TlsInfo = {\n  serverName?: string;\n  clientCertificate?: Uint8Array;\n};\n\nexport const ServerStep = {\n  AwaitingInitialMessage: 'AwaitingInitialMessage',\n  PerformingAuthentication: 'PerformingAuthentication',\n  ReadyForQuery: 'ReadyForQuery',\n} as const;\n\nexport type ServerStep = (typeof ServerStep)[keyof typeof ServerStep];\n\nexport type ConnectionState = {\n  hasStarted: boolean;\n  isAuthenticated: boolean;\n  clientParams?: ClientParameters;\n  tlsInfo?: TlsInfo;\n  step: ServerStep;\n};\n","import { copy } from '@std/bytes/copy';\n\n/**\n * Handles buffering of messages for a connection\n */\nexport class MessageBuffer {\n  private buffer = new Uint8Array();\n  private bufferLength = 0;\n  private bufferOffset = 0;\n\n  /**\n   * Merges a new buffer into the existing buffer\n   *\n   * @see https://github.com/brianc/node-postgres/blob/54eb0fa216aaccd727765641e7d1cf5da2bc483d/packages/pg-protocol/src/parser.ts#L121-L152\n   */\n  mergeBuffer(newData: Uint8Array): void {\n    if (this.bufferLength > 0) {\n      const newLength = this.bufferLength + newData.byteLength;\n      const newFullLength = newLength + this.bufferOffset;\n\n      if (newFullLength > this.buffer.byteLength) {\n        let newBuffer: Uint8Array;\n        if (newLength <= this.buffer.byteLength && this.bufferOffset >= this.bufferLength) {\n          newBuffer = this.buffer;\n        } else {\n          let newBufferLength = this.buffer.byteLength * 2;\n          while (newLength >= newBufferLength) {\n            newBufferLength *= 2;\n          }\n          newBuffer = new Uint8Array(newBufferLength);\n        }\n        const bufferView = this.buffer.subarray(\n          this.bufferOffset,\n          this.bufferOffset + this.bufferLength,\n        );\n        copy(bufferView, newBuffer, 0);\n        this.buffer = newBuffer;\n        this.bufferOffset = 0;\n      }\n      copy(newData, this.buffer, this.bufferOffset + this.bufferLength);\n      this.bufferLength = newLength;\n    } else {\n      this.buffer = newData;\n      this.bufferOffset = 0;\n      this.bufferLength = newData.byteLength;\n    }\n  }\n\n  /**\n   * Processes incoming data by buffering it and parsing messages.\n   *\n   * @see https://github.com/brianc/node-postgres/blob/54eb0fa216aaccd727765641e7d1cf5da2bc483d/packages/pg-protocol/src/parser.ts#L91-L119\n   */\n  async *processMessages(hasStarted: boolean) {\n    const bufferFullLength = this.bufferOffset + this.bufferLength;\n    let offset = this.bufferOffset;\n\n    // The initial message only has a 4 byte header containing the message length\n    // while all subsequent messages have a 5 byte header containing first a single\n    // byte code then a 4 byte message length\n    const codeLength = !hasStarted ? 0 : 1;\n    const headerLength = 4 + codeLength;\n\n    while (offset + headerLength <= bufferFullLength) {\n      // The length passed in the message header\n      const dataView = new DataView(this.buffer.buffer);\n      const length = dataView.getUint32(offset + codeLength);\n\n      // The length passed in the message header does not include the first single\n      // byte code, so we account for it here\n      const fullMessageLength = codeLength + length;\n\n      if (offset + fullMessageLength <= bufferFullLength) {\n        yield this.buffer.subarray(offset, offset + fullMessageLength);\n        offset += fullMessageLength;\n      } else {\n        break;\n      }\n    }\n\n    if (offset === bufferFullLength) {\n      this.buffer = new Uint8Array();\n      this.bufferLength = 0;\n      this.bufferOffset = 0;\n    } else {\n      this.bufferLength = bufferFullLength - offset;\n      this.bufferOffset = offset;\n    }\n  }\n}\n\nexport function* getMessages(data: Uint8Array) {\n  const dataView = new DataView(data.buffer, data.byteOffset, data.byteLength);\n  let offset = 0;\n\n  if (dataView.byteLength === 0) {\n    return;\n  }\n\n  while (offset < dataView.byteLength) {\n    const length = dataView.getUint32(offset + 1);\n    yield data.subarray(offset, offset + length + 1);\n    offset += length + 1;\n  }\n}\n","export interface DuplexStream<T = unknown> {\n  readable: ReadableStream<T>;\n  writable: WritableStream<T>;\n}\n\n/**\n * A passthrough `DuplexStream` that buffers data to support\n * asynchronous reads and writes.\n */\nexport class BufferedStream<T> implements DuplexStream<T> {\n  public readable: ReadableStream<T>;\n  public writable: WritableStream<T>;\n\n  constructor() {\n    const buffer: T[] = [];\n\n    this.readable = new ReadableStream<T>({\n      async pull(controller) {\n        while (buffer.length === 0) {\n          // Yield to the event loop\n          await new Promise<void>((resolve) => setTimeout(resolve));\n        }\n        // biome-ignore lint/style/noNonNullAssertion: <explanation>\n        const chunk = buffer.shift()!;\n        controller.enqueue(chunk);\n      },\n    });\n\n    this.writable = new WritableStream<T>({\n      async write(chunk) {\n        buffer.push(chunk);\n\n        // Yield to the event loop\n        await new Promise<void>((resolve) => setTimeout(resolve));\n      },\n    });\n  }\n}\n\n/**\n * Creates a pair of linked duplex streams.\n *\n * The returned duplex streams are interconnected such that writing to the\n * writable stream of one duplex will result in the data appearing on the\n * readable stream of the other duplex, and vice versa. This can be useful\n * for simulating a bidirectional communication channel or virtual socket.\n */\nexport function createDuplexPair<T>(): [DuplexStream<T>, DuplexStream<T>] {\n  // Intermediate streams that forward writable to readable\n  const aToB = new BufferedStream<T>();\n  const bToA = new BufferedStream<T>();\n\n  // Swap readable and writable to link duplex connections\n  const duplexA: DuplexStream<T> = {\n    readable: bToA.readable,\n    writable: aToB.writable,\n  };\n  const duplexB: DuplexStream<T> = {\n    readable: aToB.readable,\n    writable: bToA.writable,\n  };\n\n  return [duplexA, duplexB];\n}\n\n/**\n * Creates a virtual server that can accept multiple duplex stream connections.\n *\n * The server allows clients to connect via a `connect()` method, returning a\n * `DuplexStream` representing the client side of the connection. The server\n * side of each connection can be accessed by reading from the stream returned\n * by the `listen()` method.\n *\n * This is useful for simulating network servers, testing bidirectional\n * communication channels, or creating virtual sockets where data flow\n * can be controlled and observed.\n *\n * @returns An object containing `connect()` to initiate a connection and\n * `listen()` to retrieve the server side of the connections.\n */\nexport function createVirtualServer<T>() {\n  const listener = new BufferedStream<DuplexStream<T>>();\n  const connWriter = listener.writable.getWriter();\n\n  function listen() {\n    return listener.readable;\n  }\n\n  async function connect() {\n    const [clientConn, serverConn] = createDuplexPair<T>();\n    await connWriter.write(serverConn);\n    return clientConn;\n  }\n\n  return { listen, connect };\n}\n\n/**\n * Converts a `ReadableStream` to an `AsyncIterator`.\n *\n * Note that `ReadableStream` is supposed to implement `AsyncIterable`\n * already, but this isn't true for all environments today (eg. Safari).\n *\n * Use this method as a ponyfill.\n */\nexport function toAsyncIterator<R = unknown>(\n  readable: ReadableStream<R>,\n  options?: { preventCancel?: boolean },\n): AsyncIterableIterator<R> {\n  // If the `ReadableStream` implements `[Symbol.asyncIterator]`, use it\n  if (Symbol.asyncIterator in readable) {\n    return readable[Symbol.asyncIterator](options);\n  }\n\n  // Otherwise fallback to a ponyfill\n  const reader = (readable as ReadableStream<R>).getReader();\n  const iterator: AsyncIterableIterator<R> = {\n    async next() {\n      try {\n        const { done, value } = await reader.read();\n        if (done) {\n          reader.releaseLock();\n        }\n        return {\n          done,\n          // biome-ignore lint/style/noNonNullAssertion: <explanation>\n          value: value!,\n        };\n      } catch (e) {\n        reader.releaseLock();\n        throw e;\n      }\n    },\n    async return(value: unknown) {\n      if (!options?.preventCancel) {\n        const cancelPromise = reader.cancel(value);\n        reader.releaseLock();\n        await cancelPromise;\n      } else {\n        reader.releaseLock();\n      }\n      return { done: true, value };\n    },\n    [Symbol.asyncIterator]() {\n      return iterator;\n    },\n  };\n  return iterator;\n}\n","import { BackendError } from '../backend-error.js';\nimport type { BufferReader } from '../buffer-reader.js';\nimport type { BufferWriter } from '../buffer-writer.js';\nimport type { ConnectionState } from '../connection.types';\nimport { closeSignal } from '../signals.js';\nimport { BaseAuthFlow } from './base-auth-flow';\n\nexport type CertAuthOptions = {\n  method: 'cert';\n  validateCredentials?: (\n    credentials: {\n      username: string;\n      certificate: Uint8Array;\n    },\n    connectionState: ConnectionState,\n  ) => boolean | Promise<boolean>;\n};\n\nexport class CertAuthFlow extends BaseAuthFlow {\n  private auth: CertAuthOptions & {\n    validateCredentials: NonNullable<CertAuthOptions['validateCredentials']>;\n  };\n  private username: string;\n  private completed: boolean;\n\n  constructor(params: {\n    auth: CertAuthOptions;\n    username: string;\n    reader: BufferReader;\n    writer: BufferWriter;\n    connectionState: ConnectionState;\n  }) {\n    super(params);\n\n    this.completed = false;\n    this.auth = {\n      ...params.auth,\n      validateCredentials:\n        params.auth.validateCredentials ??\n        (() => {\n          throw new Error('Client certificate validation not implemented');\n        }),\n    };\n    this.username = params.username;\n  }\n\n  async *handleClientMessage(message: BufferSource) {\n    if (!this.connectionState.tlsInfo) {\n      yield BackendError.create({\n        severity: 'FATAL',\n        code: '08000',\n        message: `ssl connection required when auth mode is 'certificate'`,\n      }).flush();\n      yield closeSignal;\n      return;\n    }\n\n    if (!this.connectionState.tlsInfo.clientCertificate) {\n      yield BackendError.create({\n        severity: 'FATAL',\n        code: '08000',\n        message: 'client certificate required',\n      }).flush();\n      yield closeSignal;\n      return;\n    }\n\n    const isValid = await this.auth.validateCredentials(\n      {\n        username: this.username,\n        certificate: this.connectionState.tlsInfo.clientCertificate,\n      },\n      this.connectionState,\n    );\n\n    if (!isValid) {\n      yield BackendError.create({\n        severity: 'FATAL',\n        code: '08000',\n        message: 'client certificate is invalid',\n      }).flush();\n      yield closeSignal;\n      return;\n    }\n\n    this.completed = true;\n  }\n\n  override createInitialAuthMessage() {\n    return undefined;\n  }\n\n  get isCompleted(): boolean {\n    return this.completed;\n  }\n}\n","import { BackendError } from '../backend-error.js';\nimport type { BufferReader } from '../buffer-reader.js';\nimport type { BufferWriter } from '../buffer-writer.js';\nimport type { ConnectionState } from '../connection.types';\nimport { BackendMessageCode } from '../message-codes';\nimport { closeSignal } from '../signals.js';\nimport { BaseAuthFlow } from './base-auth-flow';\n\nexport type ClearTextPassword = string;\n\nexport type PasswordAuthOptions = {\n  method: 'password';\n  validateCredentials?: (\n    credentials: {\n      username: string;\n      password: string;\n      clearTextPassword: ClearTextPassword;\n    },\n    connectionState: ConnectionState,\n  ) => boolean | Promise<boolean>;\n  getClearTextPassword: (\n    params: {\n      username: string;\n    },\n    connectionState: ConnectionState,\n  ) => ClearTextPassword | Promise<ClearTextPassword>;\n};\n\nexport class PasswordAuthFlow extends BaseAuthFlow {\n  private auth: PasswordAuthOptions & {\n    validateCredentials: NonNullable<PasswordAuthOptions['validateCredentials']>;\n  };\n  private username: string;\n  private completed: boolean;\n\n  constructor(params: {\n    auth: PasswordAuthOptions;\n    username: string;\n    reader: BufferReader;\n    writer: BufferWriter;\n    connectionState: ConnectionState;\n  }) {\n    super(params);\n\n    this.completed = false;\n    this.auth = {\n      ...params.auth,\n      validateCredentials:\n        params.auth.validateCredentials ??\n        (async ({ password, clearTextPassword }) => {\n          return password === clearTextPassword;\n        }),\n    };\n    this.username = params.username;\n  }\n\n  async *handleClientMessage(message: BufferSource) {\n    const length = this.reader.int32();\n    const password = this.reader.cstring();\n\n    const clearTextPassword = await this.auth.getClearTextPassword(\n      {\n        username: this.username,\n      },\n      this.connectionState,\n    );\n    const isValid = await this.auth.validateCredentials(\n      {\n        username: this.username,\n        password,\n        clearTextPassword,\n      },\n      this.connectionState,\n    );\n\n    if (!isValid) {\n      yield BackendError.create({\n        severity: 'FATAL',\n        code: '28P01',\n        message: `password authentication failed for user \"${this.username}\"`,\n      }).flush();\n      yield closeSignal;\n      return;\n    }\n\n    this.completed = true;\n  }\n\n  override createInitialAuthMessage() {\n    return this.createAuthenticationCleartextPassword();\n  }\n\n  get isCompleted(): boolean {\n    return this.completed;\n  }\n\n  /**\n   * Create an \"AuthenticationCleartextPassword\" message.\n   *\n   * @see https://www.postgresql.org/docs/current/protocol-message-formats.html#PROTOCOL-MESSAGE-FORMATS-AUTHENTICATIONCLEARTEXTPASSWORD\n   */\n  private createAuthenticationCleartextPassword() {\n    this.writer.addInt32(3);\n    return this.writer.flush(BackendMessageCode.AuthenticationResponse);\n  }\n}\n","import type { BufferReader } from '../buffer-reader.js';\nimport type { BufferWriter } from '../buffer-writer.js';\nimport type { ConnectionState } from '../connection.types';\nimport type { AuthFlow } from './base-auth-flow';\nimport { CertAuthFlow, type CertAuthOptions } from './cert';\nimport { Md5AuthFlow, type Md5AuthOptions } from './md5';\nimport { PasswordAuthFlow, type PasswordAuthOptions } from './password';\nimport { ScramSha256AuthFlow, type ScramSha256AuthOptions } from './sasl/scram-sha-256';\nimport type { TrustAuthOptions } from './trust';\n\nexport type AuthOptions =\n  | TrustAuthOptions\n  | PasswordAuthOptions\n  | Md5AuthOptions\n  | ScramSha256AuthOptions\n  | CertAuthOptions;\n\nexport function createAuthFlow(options: {\n  reader: BufferReader;\n  writer: BufferWriter;\n  auth: AuthOptions;\n  username: string;\n  connectionState: ConnectionState;\n}): AuthFlow {\n  switch (options.auth.method) {\n    case 'password':\n      return new PasswordAuthFlow({ ...options, auth: options.auth });\n    case 'md5':\n      return new Md5AuthFlow({ ...options, auth: options.auth });\n    case 'scram-sha-256':\n      return new ScramSha256AuthFlow({ ...options, auth: options.auth });\n    case 'cert':\n      return new CertAuthFlow({ ...options, auth: options.auth });\n    default:\n      throw new Error(`Unsupported auth method: ${options.auth.method}`);\n  }\n}\n","/**\n * Binary data reader tuned for decoding the Postgres wire protocol.\n *\n * @see https://github.com/brianc/node-postgres/blob/54eb0fa216aaccd727765641e7d1cf5da2bc483d/packages/pg-protocol/src/buffer-reader.ts\n */\nexport class BufferReader {\n  private buffer = new Uint8Array();\n  private decoder = new TextDecoder();\n\n  constructor(private offset = 0) {}\n\n  public setBuffer(buffer: Uint8Array, offset = 0): void {\n    this.buffer = buffer;\n    this.offset = offset;\n  }\n\n  public int16(): number {\n    const dataView = new DataView(\n      this.buffer.buffer,\n      this.buffer.byteOffset,\n      this.buffer.byteLength,\n    );\n    const result = dataView.getInt16(this.offset);\n    this.offset += 2;\n    return result;\n  }\n\n  public byte(): number {\n    const dataView = new DataView(\n      this.buffer.buffer,\n      this.buffer.byteOffset,\n      this.buffer.byteLength,\n    );\n    const result = dataView.getUint8(this.offset);\n    this.offset++;\n    return result;\n  }\n\n  public int32(): number {\n    const dataView = new DataView(\n      this.buffer.buffer,\n      this.buffer.byteOffset,\n      this.buffer.byteLength,\n    );\n    const result = dataView.getInt32(this.offset);\n    this.offset += 4;\n    return result;\n  }\n\n  public string(length: number): string {\n    const dataView = new DataView(this.buffer.buffer, this.offset, length);\n    this.offset += length;\n    return this.decoder.decode(dataView);\n  }\n\n  public cstring(): string {\n    const start = this.offset;\n    let end = start;\n    while ((this.buffer[end++] ?? 0) !== 0) {}\n    if (this.buffer[end - 1] === undefined) {\n      throw new Error('Reached end of buffer before null character found for PG String');\n    }\n    const dataView = new DataView(this.buffer.buffer, start, end - start - 1);\n    this.offset = end;\n    return this.decoder.decode(dataView);\n  }\n\n  public bytes(length: number): Uint8Array {\n    const result = this.buffer.slice(this.offset, this.offset + length);\n    this.offset += length;\n    return result;\n  }\n}\n","/**\n * An `AsyncIterable` that captures the following metadata during iteration:\n * - `iterations`: the number of times the iterable has been iterated over\n * - `returnValue`: the final return value (if any)\n *\n * Useful when iterating using the `for await ... of` syntax while\n * still being able to access the return value after.\n */\nexport class AsyncIterableWithMetadata<T, TReturn = unknown> implements AsyncIterable<T> {\n  public returnValue: TReturn | undefined = undefined;\n  public iterations = 0;\n\n  constructor(private iterable: Iterable<T> | AsyncIterable<T>) {}\n\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    const asyncIterator =\n      Symbol.asyncIterator in this.iterable\n        ? this.iterable[Symbol.asyncIterator]()\n        : this.iterable[Symbol.iterator]();\n\n    this.returnValue = undefined;\n    this.iterations = 0;\n\n    return {\n      next: async () => {\n        const result = await asyncIterator.next();\n        if (result.done) {\n          this.returnValue = result.value;\n        } else {\n          this.iterations++;\n        }\n        return result;\n      },\n    };\n  }\n}\n","import type { AuthFlow } from './auth/base-auth-flow.js';\nimport { type AuthOptions, createAuthFlow } from './auth/index.js';\nimport { BackendError } from './backend-error.js';\nimport { BufferReader } from './buffer-reader.js';\nimport { BufferWriter } from './buffer-writer.js';\nimport {\n  type ClientParameters,\n  type ConnectionState,\n  ServerStep,\n  type TlsInfo,\n} from './connection.types.js';\nimport { AsyncIterableWithMetadata } from './iterable-util.js';\nimport { MessageBuffer } from './message-buffer.js';\nimport { BackendMessageCode, FrontendMessageCode } from './message-codes.js';\nimport { type ConnectionSignal, closeSignal, tlsUpgradeSignal } from './signals.js';\nimport { type DuplexStream, toAsyncIterator } from './streams.js';\n\nexport type TlsOptions = {\n  key: ArrayBuffer;\n  cert: ArrayBuffer;\n  ca?: ArrayBuffer;\n  passphrase?: string;\n};\n\nexport type TlsOptionsCallback = (serverName?: string) => TlsOptions | Promise<TlsOptions>;\n\nexport type PostgresConnectionOptions = {\n  /**\n   * The server version to send to the frontend.\n   */\n  serverVersion?: string | ((state: ConnectionState) => string | Promise<string>);\n\n  /**\n   * The authentication mode for the server.\n   */\n  auth?: AuthOptions;\n\n  /**\n   * TLS options for when clients send an SSLRequest.\n   */\n  tls?: TlsOptions | TlsOptionsCallback;\n\n  /**\n   * Callback after the connection has been upgraded to TLS.\n   *\n   * Includes `state` which holds connection information gathered so far like `tlsInfo`.\n   *\n   * This will be called before the startup message is received from the frontend\n   * (if TLS is being used) so is a good place to establish proxy connections if desired.\n   */\n  onTlsUpgrade?(state: ConnectionState): void | Promise<void>;\n\n  /**\n   * Callback after the initial startup message has been received from the frontend.\n   *\n   * Includes `state` which holds connection information gathered so far like `clientInfo`.\n   *\n   * This is called after the connection is upgraded to TLS (if TLS is being used)\n   * but before authentication messages are sent to the frontend.\n   *\n   */\n  onStartup?(state: ConnectionState): void | Promise<void>;\n\n  /**\n   * Callback after a successful authentication has completed.\n   *\n   * Includes `state` which holds connection information gathered so far.\n   */\n  onAuthenticated?(state: ConnectionState): void | Promise<void>;\n\n  /**\n   * Callback for every message received from the frontend.\n   * Use this as an escape hatch to manually handle raw message data.\n   *\n   * Includes `state` which holds connection information gathered so far and\n   * can be used to understand where the protocol is at in its lifecycle.\n   *\n   * Callback can optionally return raw `Uint8Array` response data that will\n   * be sent back to the client. It can also return multiple `Uint8Array`\n   * responses via an `Iterable<Uint8Array>` or `AsyncIterable<Uint8Array>`.\n   * This means you can turn this hook into a generator function to\n   * asynchronously stream responses back to the client.\n   *\n   * **Warning:** By managing the message yourself (returning data), you bypass further\n   * processing by the `PostgresConnection` which means some state may not be collected\n   * and hooks won't be called depending on where the protocol is at in its lifecycle.\n   * If you wish to hook into messages without bypassing further processing, do not return\n   * any data from this callback.\n   */\n  onMessage?(data: Uint8Array, state: ConnectionState): MessageResponse | Promise<MessageResponse>;\n\n  /**\n   * Callback for every frontend query message.\n   * Use this to implement query handling.\n   *\n   * If left `undefined`, an error will be sent to the frontend\n   * indicating that queries aren't implemented.\n   *\n   * TODO: change return signature to be more developer-friendly\n   * and then translate to wire protocol.\n   */\n  onQuery?(query: string, state: ConnectionState): Uint8Array | Promise<Uint8Array>;\n};\n\n/**\n * Platform-specific adapters for handling features like TLS upgrades.\n *\n * Some platform helpers like `fromNodeSocket()` will implement these\n * for you.\n */\nexport type PostgresConnectionAdapters = {\n  /**\n   * Implements the TLS upgrade logic for the stream.\n   */\n  upgradeTls?(\n    duplex: DuplexStream<Uint8Array>,\n    options: TlsOptions | TlsOptionsCallback,\n    requestCert?: boolean,\n  ): Promise<{\n    duplex: DuplexStream<Uint8Array>;\n    tlsInfo: TlsInfo;\n  }>;\n};\n\nexport type MessageResponse =\n  | undefined\n  | Uint8Array\n  | Iterable<Uint8Array>\n  | AsyncIterable<Uint8Array>;\n\nexport default class PostgresConnection {\n  private step: ServerStep = ServerStep.AwaitingInitialMessage;\n  options: PostgresConnectionOptions & {\n    auth: NonNullable<PostgresConnectionOptions['auth']>;\n  };\n  authFlow?: AuthFlow;\n  hasStarted = false;\n  isAuthenticated = false;\n  detached = false;\n  bufferWriter = new BufferWriter();\n  bufferReader = new BufferReader();\n  clientParams?: ClientParameters;\n  tlsInfo?: TlsInfo;\n  messageBuffer = new MessageBuffer();\n  // reference to the stream writer when processing data\n  streamWriter?: WritableStreamDefaultWriter<Uint8Array>;\n\n  constructor(\n    public duplex: DuplexStream<Uint8Array>,\n    options: PostgresConnectionOptions = {},\n    public adapters: PostgresConnectionAdapters = {},\n  ) {\n    this.options = {\n      auth: { method: 'trust' },\n      ...options,\n    };\n    if (this.options.tls && !this.adapters.upgradeTls) {\n      throw new Error(\n        'TLS options are only available when upgradeTls() is implemented. Did you mean to use fromNodeSocket()?',\n      );\n    }\n    this.init(duplex);\n  }\n\n  get state(): ConnectionState {\n    return {\n      hasStarted: this.hasStarted,\n      isAuthenticated: this.isAuthenticated,\n      clientParams: this.clientParams,\n      tlsInfo: this.tlsInfo,\n      step: this.step,\n    };\n  }\n\n  async init(duplex: DuplexStream<Uint8Array>) {\n    try {\n      const signal = await this.processData(duplex);\n\n      if (this.detached) {\n        return;\n      }\n\n      if (signal === tlsUpgradeSignal) {\n        if (!this.options.tls) {\n          throw new Error('Upgrading TLS but TLS options are not available');\n        }\n        if (!this.adapters.upgradeTls) {\n          throw new Error('Upgrading TLS but upgradeTls is not implemented');\n        }\n\n        const requestCert = this.options.auth.method === 'cert';\n\n        const { duplex: secureDuplex, tlsInfo } = await this.adapters.upgradeTls(\n          duplex,\n          this.options.tls,\n          requestCert,\n        );\n\n        this.duplex = secureDuplex;\n        this.tlsInfo = tlsInfo;\n        this.messageBuffer = new MessageBuffer();\n\n        await this.options.onTlsUpgrade?.(this.state);\n\n        if (this.detached) {\n          return;\n        }\n\n        await this.init(secureDuplex);\n        return;\n      }\n\n      if (signal === closeSignal) {\n        await this.duplex.writable.close();\n        return;\n      }\n    } catch (err) {\n      if (err instanceof BackendError) {\n        const writer = this.duplex.writable.getWriter();\n        await writer.write(err.flush());\n        writer.releaseLock();\n        await this.duplex.writable.close();\n      } else {\n        // ignore ABORT_ERR errors which are common, like a user closing its terminal while running a psql session\n        if (!(err instanceof Error && 'code' in err && err.code === 'ABORT_ERR')) {\n          console.error(err);\n        }\n        await this.duplex.writable.abort();\n      }\n    }\n  }\n  /**\n   * Detaches the `PostgresConnection` from the stream.\n   * After calling this, data will no longer be buffered\n   * and all processing will halt.\n   *\n   * Useful when proxying. You can detach at a certain point\n   * (like TLS upgrade) to prevent further buffering/processing\n   * when your goal is to pipe future messages downstream.\n   */\n  async detach() {\n    this.detached = true;\n\n    // TODO: inject lingering `messageBuffer` (if any) back\n    // onto stream to prevent data loss\n    return this.duplex;\n  }\n\n  async processData(duplex: DuplexStream<Uint8Array>): Promise<ConnectionSignal | undefined> {\n    this.streamWriter = duplex.writable.getWriter();\n    try {\n      for await (const data of toAsyncIterator(duplex.readable, { preventCancel: true })) {\n        this.messageBuffer.mergeBuffer(data);\n        for await (const clientMessage of this.messageBuffer.processMessages(this.hasStarted)) {\n          for await (const responseMessage of this.handleClientMessage(clientMessage)) {\n            if (this.detached) {\n              return;\n            }\n            if (responseMessage === tlsUpgradeSignal) {\n              return tlsUpgradeSignal;\n            }\n            if (responseMessage === closeSignal) {\n              return closeSignal;\n            }\n            await this.streamWriter.write(responseMessage);\n          }\n        }\n      }\n    } finally {\n      this.streamWriter.releaseLock();\n    }\n  }\n\n  async *handleClientMessage(\n    message: Uint8Array,\n  ): AsyncGenerator<Uint8Array | ConnectionSignal, void, undefined> {\n    this.bufferReader.setBuffer(message);\n\n    const messageResponse = await this.options.onMessage?.(message, this.state);\n\n    // Returning any value indicates no further processing\n    let skipProcessing = messageResponse !== undefined;\n\n    // A `Uint8Array` or `Iterator<Uint8Array>` or `AsyncIterator<Uint8Array>`\n    // can be returned that contains raw message response data\n    if (messageResponse) {\n      const iterableResponse = new AsyncIterableWithMetadata(\n        messageResponse instanceof Uint8Array ? [messageResponse] : messageResponse,\n      );\n\n      // Forward yielded responses back to client\n      yield* iterableResponse;\n\n      // Yield any `Uint8Array` values returned from the iterator\n      if (iterableResponse.returnValue instanceof Uint8Array) {\n        yield iterableResponse.returnValue;\n      }\n\n      // Yielding or returning any value within the iterator indicates no further processing\n      skipProcessing =\n        iterableResponse.iterations > 0 || iterableResponse.returnValue !== undefined;\n    }\n\n    // the socket was detached during onMessage, we skip further processing\n    if (this.detached) {\n      return;\n    }\n\n    if (skipProcessing) {\n      if (this.isStartupMessage(message)) {\n        this.hasStarted = true;\n      }\n      return;\n    }\n\n    switch (this.step) {\n      case ServerStep.AwaitingInitialMessage:\n        if (this.isSslRequest(message)) {\n          yield* this.handleSslRequest();\n        } else if (this.isStartupMessage(message)) {\n          // Guard against SSL connection not being established when `tls` is enabled\n          if (this.options.tls && !this.tlsInfo) {\n            yield BackendError.create({\n              severity: 'FATAL',\n              code: '08P01',\n              message: 'SSL connection is required',\n            }).flush();\n            yield closeSignal;\n            return;\n          }\n          // the next step is determined by handleStartupMessage\n          yield* this.handleStartupMessage(message);\n        } else {\n          throw new Error('Unexpected initial message');\n        }\n        break;\n\n      case ServerStep.PerformingAuthentication: {\n        const authenticationComplete = yield* this.handleAuthenticationMessage(message);\n        if (authenticationComplete) {\n          yield* this.completeAuthentication();\n        }\n        break;\n      }\n\n      case ServerStep.ReadyForQuery:\n        yield* this.handleRegularMessage(message);\n        break;\n\n      default:\n        throw new Error(`Unexpected step: ${this.step}`);\n    }\n  }\n\n  async *handleSslRequest() {\n    if (!this.options.tls || !this.adapters.upgradeTls) {\n      this.bufferWriter.addString('N');\n      yield this.bufferWriter.flush();\n      return;\n    }\n\n    // Otherwise respond with 'S' to indicate it is supported\n    this.bufferWriter.addString('S');\n    yield this.bufferWriter.flush();\n\n    // From now on the frontend will communicate via TLS, so upgrade the connection\n    yield tlsUpgradeSignal;\n  }\n\n  async *handleStartupMessage(message: BufferSource) {\n    const { majorVersion, minorVersion, parameters } = this.readStartupMessage();\n\n    // user is required\n    if (!parameters.user) {\n      yield BackendError.create({\n        severity: 'FATAL',\n        code: '08000',\n        message: 'user is required',\n      }).flush();\n      yield closeSignal;\n      return;\n    }\n\n    if (majorVersion !== 3 || minorVersion !== 0) {\n      yield BackendError.create({\n        severity: 'FATAL',\n        code: '08000',\n        message: `Unsupported protocol version ${majorVersion.toString()}.${minorVersion.toString()}`,\n      }).flush();\n      yield closeSignal;\n      return;\n    }\n\n    this.clientParams = {\n      user: parameters.user,\n      ...parameters,\n    };\n\n    this.hasStarted = true;\n\n    await this.options.onStartup?.(this.state);\n    // the socket was detached during onStartup, we skip further processing\n    if (this.detached) {\n      return;\n    }\n\n    if (this.options.auth.method === 'trust') {\n      yield* this.completeAuthentication();\n      return;\n    }\n\n    this.authFlow = createAuthFlow({\n      reader: this.bufferReader,\n      writer: this.bufferWriter,\n      username: this.clientParams.user,\n      auth: this.options.auth,\n      connectionState: this.state,\n    });\n\n    this.step = ServerStep.PerformingAuthentication;\n    const initialAuthMessage = this.authFlow.createInitialAuthMessage();\n\n    if (initialAuthMessage) {\n      yield initialAuthMessage;\n    }\n\n    // 'cert' auth flow is an edge case\n    // it doesn't expect a new message from the client so we can directly proceed\n    if (this.options.auth.method === 'cert') {\n      yield* this.authFlow.handleClientMessage(message);\n      if (this.authFlow.isCompleted) {\n        yield* this.completeAuthentication();\n      }\n    }\n  }\n\n  async *handleAuthenticationMessage(message: BufferSource) {\n    const code = this.bufferReader.byte();\n\n    if (code !== FrontendMessageCode.Password) {\n      throw new Error(`Unexpected authentication message code: ${code}`);\n    }\n\n    if (!this.authFlow) {\n      throw new Error('AuthFlow not initialized');\n    }\n\n    yield* this.authFlow.handleClientMessage(message);\n\n    return this.authFlow.isCompleted;\n  }\n\n  private async *handleRegularMessage(message: BufferSource) {\n    const code = this.bufferReader.byte();\n\n    switch (code) {\n      case FrontendMessageCode.Terminate:\n        yield closeSignal;\n        return;\n      default:\n        yield BackendError.create({\n          severity: 'ERROR',\n          code: '123',\n          message: 'Message code not yet implemented',\n        }).flush();\n        yield this.createReadyForQuery();\n    }\n  }\n\n  /**\n   * Checks if the given message is a valid SSL request.\n   *\n   * @see https://www.postgresql.org/docs/current/protocol-message-formats.html#PROTOCOL-MESSAGE-FORMATS-SSLREQUEST\n   */\n  private isSslRequest(message: Uint8Array): boolean {\n    if (message.byteLength !== 8) return false;\n\n    const dataView = new DataView(message.buffer, message.byteOffset, message.byteLength);\n\n    const mostSignificantPart = dataView.getInt16(4);\n    const leastSignificantPart = dataView.getInt16(6);\n\n    return mostSignificantPart === 1234 && leastSignificantPart === 5679;\n  }\n\n  /**\n   * Checks if the given message is a valid StartupMessage.\n   *\n   * @see https://www.postgresql.org/docs/current/protocol-message-formats.html#PROTOCOL-MESSAGE-FORMATS-STARTUPMESSAGE\n   */\n  private isStartupMessage(message: Uint8Array): boolean {\n    if (message.byteLength < 8) return false;\n\n    const dataView = new DataView(message.buffer, message.byteOffset, message.byteLength);\n\n    const length = dataView.getInt32(0);\n    const majorVersion = dataView.getInt16(4);\n    const minorVersion = dataView.getInt16(6);\n\n    return message.byteLength === length && majorVersion === 3 && minorVersion === 0;\n  }\n\n  /**\n   * Completes authentication by forwarding the appropriate messages\n   * to the frontend.\n   */\n  async *completeAuthentication() {\n    this.isAuthenticated = true;\n\n    yield this.createAuthenticationOk();\n\n    await this.options.onAuthenticated?.(this.state);\n\n    if (this.options.serverVersion) {\n      let serverVersion: string;\n      if (typeof this.options.serverVersion === 'function') {\n        serverVersion = await this.options.serverVersion(this.state);\n      } else {\n        serverVersion = this.options.serverVersion;\n      }\n      yield this.createParameterStatus('server_version', serverVersion);\n    }\n\n    this.step = ServerStep.ReadyForQuery;\n    yield this.createReadyForQuery();\n  }\n\n  /**\n   * Parses a startup message from the frontend.\n   *\n   * @see https://www.postgresql.org/docs/current/protocol-message-formats.html#PROTOCOL-MESSAGE-FORMATS-STARTUPMESSAGE\n   */\n  readStartupMessage() {\n    const length = this.bufferReader.int32();\n    const majorVersion = this.bufferReader.int16();\n    const minorVersion = this.bufferReader.int16();\n\n    const parameters: Record<string, string> = {};\n\n    // biome-ignore lint/suspicious/noAssignInExpressions: <explanation>\n    for (let key: string; (key = this.bufferReader.cstring()) !== ''; ) {\n      parameters[key] = this.bufferReader.cstring();\n    }\n\n    return {\n      majorVersion,\n      minorVersion,\n      parameters,\n    };\n  }\n\n  /**\n   * Parses a query message from the frontend.\n   *\n   * @see https://www.postgresql.org/docs/current/protocol-message-formats.html#PROTOCOL-MESSAGE-FORMATS-QUERY\n   */\n  readQuery() {\n    const query = this.bufferReader.cstring();\n\n    return {\n      query,\n    };\n  }\n\n  /**\n   * Creates an \"AuthenticationOk\" message.\n   *\n   * @see https://www.postgresql.org/docs/current/protocol-message-formats.html#PROTOCOL-MESSAGE-FORMATS-AUTHENTICATIONOK\n   */\n  createAuthenticationOk() {\n    this.bufferWriter.addInt32(0);\n    return this.bufferWriter.flush(BackendMessageCode.AuthenticationResponse);\n  }\n\n  /**\n   * Creates a \"ParameterStatus\" message.\n   * Informs the frontend about the current setting of backend parameters.\n   *\n   * @see https://www.postgresql.org/docs/current/protocol-message-formats.html#PROTOCOL-MESSAGE-FORMATS-PARAMETERSTATUS\n   * @see https://www.postgresql.org/docs/current/protocol-flow.html#PROTOCOL-ASYNC\n   */\n  createParameterStatus(name: string, value: string) {\n    this.bufferWriter.addCString(name);\n    this.bufferWriter.addCString(value);\n    return this.bufferWriter.flush(BackendMessageCode.ParameterStatus);\n  }\n\n  /**\n   * Creates a \"ReadyForQuery\" message.\n   *\n   * @see https://www.postgresql.org/docs/current/protocol-message-formats.html#PROTOCOL-MESSAGE-FORMATS-READYFORQUERY\n   */\n  createReadyForQuery(transactionStatus: 'idle' | 'transaction' | 'error' = 'idle') {\n    switch (transactionStatus) {\n      case 'idle':\n        this.bufferWriter.addString('I');\n        break;\n      case 'transaction':\n        this.bufferWriter.addString('T');\n        break;\n      case 'error':\n        this.bufferWriter.addString('E');\n        break;\n      default:\n        throw new Error(`Unknown transaction status '${transactionStatus}'`);\n    }\n\n    return this.bufferWriter.flush(BackendMessageCode.ReadyForQuery);\n  }\n\n  createAuthenticationFailedError() {\n    return BackendError.create({\n      severity: 'FATAL',\n      code: '28P01',\n      message: this.clientParams?.user\n        ? `password authentication failed for user \"${this.clientParams.user}\"`\n        : 'password authentication failed',\n    }).flush();\n  }\n}\n"],"mappings":"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","names":["FrontendMessageCode","BackendMessageCode","getFrontendMessageName","code","_","value","getBackendMessageName","copy","src","dst","offset","dstBytesAvailable","BufferWriter","size","oldBuffer","newSize","copy","num","string","stringBuffer","otherBuffer","code","length","result","BackendError","_BackendError","params","writer","BufferWriter","BackendMessageCode","tlsUpgradeSignal","closeSignal","concat","buffers","length","buffer","output","index","wasm","heap","getObject","idx","heap_next","dropObject","takeObject","ret","addHeapObject","obj","cachedTextDecoder","cachedUint8Memory0","getUint8Memory0","getStringFromWasm0","ptr","len","WASM_VECTOR_LEN","cachedTextEncoder","encodeString","arg","view","passStringToWasm0","malloc","realloc","buf","mem","offset","code","isLikeNone","x","cachedInt32Memory0","getInt32Memory0","getArrayU8FromWasm0","digest","algorithm","data","length","retptr","ptr0","len0","r0","r1","r2","r3","v2","DigestContextFinalization","DigestContext","v1","imports","arg0","arg1","arg2","instantiate","instantiateWithInstance","instanceWithExports","instance","instantiateInstance","instantiateInstance","wasmBytes","base64decode","wasmModule","imports","b64","binString","size","bytes","DIGEST_ALGORITHM_NAMES","WEB_CRYPTO_DIGEST_ALGORITHM_NAMES","webCrypto","crypto","toUint8Array","data","stdCrypto","x","algorithm","name","length","normalizeAlgorithm","assertValidDigestLength","isBufferSource","DIGEST_ALGORITHM_NAMES","isIterable","isAsyncIterable","wasmCrypto","instantiate","context","chunk","chunkBytes","bytes","MAX_DIGEST_LENGTH","value","obj","encoder","getTypeName","value","type","validateBinaryLike","source","hexTable","textEncoder","textDecoder","encodeHex","src","u8","validateBinaryLike","dst","i","v","hexTable","textDecoder","BaseAuthFlow","params","Md5AuthFlow","BaseAuthFlow","params","preHashedPassword","hashedPassword","salt","expectedHashedPassword","hashPreHashedPassword","generateMd5Salt","message","length","BackendError","closeSignal","BackendMessageCode","md5","concat","value","hash","stdCrypto","encodeHex","createPreHashedPassword","username","password","base64abc","encodeBase64","data","uint8","validateBinaryLike","result","i","l","decodeBase64","b64","binString","size","bytes","pbkdf2","password","salt","iterations","length","hashAlgorithm","encoder","keyMaterial","createHmacKey","key","message","algorithm","createHashKey","timingSafeEqual","bufferA","bufferB","hmac","SaslMessageCode","SaslMechanism","params","mechanisms","mechanism","BackendMessageCode","message","createScramSha256Data","password","iterations","salt","saltedPassword","pbkdf2","clientKey","createHmacKey","storedKey","createHashKey","serverKey","encodeBase64","verifyScramSha256Password","params","authMessage","clientProof","clientProofBuffer","decodeBase64","storedKeyBuffer","clientSignature","clientSignatureView","i","computedStoredKey","timingSafeEqual","ScramSha256Step","ScramSha256AuthFlow","SaslMechanism","scramSha256Data","message","length","BackendError","closeSignal","responseLength","clientFirstMessage","serverFirstMessage","clientFirstMessageParts","clientNonce","part","serverNoncePart","serverFinalMessage","error","stringLength","clientFinalMessageParts","channelBinding","fullNonce","clientFinalMessageWithoutProof","data","serverKeyBuffer","serverSignature","ServerStep","MessageBuffer","newData","newLength","newBuffer","newBufferLength","bufferView","copy","hasStarted","bufferFullLength","offset","codeLength","headerLength","length","fullMessageLength","getMessages","data","dataView","BufferedStream","buffer","controller","resolve","chunk","createDuplexPair","aToB","bToA","duplexA","duplexB","createVirtualServer","listener","connWriter","listen","connect","clientConn","serverConn","toAsyncIterator","readable","options","reader","iterator","done","value","e","cancelPromise","CertAuthFlow","BaseAuthFlow","params","message","BackendError","closeSignal","PasswordAuthFlow","BaseAuthFlow","params","password","clearTextPassword","message","length","BackendError","closeSignal","BackendMessageCode","createAuthFlow","options","PasswordAuthFlow","Md5AuthFlow","ScramSha256AuthFlow","CertAuthFlow","BufferReader","offset","buffer","result","length","dataView","start","end","AsyncIterableWithMetadata","iterable","asyncIterator","result","PostgresConnection","duplex","options","adapters","ServerStep","BufferWriter","BufferReader","MessageBuffer","signal","tlsUpgradeSignal","requestCert","secureDuplex","tlsInfo","closeSignal","err","BackendError","writer","data","toAsyncIterator","clientMessage","responseMessage","message","messageResponse","skipProcessing","iterableResponse","AsyncIterableWithMetadata","majorVersion","minorVersion","parameters","createAuthFlow","initialAuthMessage","code","FrontendMessageCode","dataView","mostSignificantPart","leastSignificantPart","length","serverVersion","key","BackendMessageCode","name","value","transactionStatus"]}