{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(git init:*)",
      "Bash(git:*)",
      "Bash(npm:*)",
      "Bash(npx:*)",
      "Bash(gh:*)",
      "Bash(firebase:*)",
      "Bash(nvm:*)",
      "Bash(sudo apt-get install:*)",
      "Bash(rm:*)",
      "Bash(pkill:*)",
      "Bash(node:*)",
      "Bash(curl:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(echo $SHELL)",
      "Bash(direnv:*)",
      "Bash(lsof:*)",
      "Bash(kill:*)",
      "Bash(true)",
      "Bash(echo:*)",
      "Bash(pwd:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(sleep:*)",
      "Bash(git status:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(cd:*)",
      "Bash(which:*)",
      "Bash(ps:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(touch:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(wc:*)",
      "Bash(npm run build:*)",
      "Bash(FIRESTORE_EMULATOR_HOST=127.0.0.1:8080 npm run seed)",
      "Bash(ss:*)",
      "Bash(export:*)",
      "Bash(CI=1 npx expo start --web --port 8082)",
      "Bash(chmod:*)",
      "Bash(./scripts/deploy.sh:*)",
      "Bash(NODE_ENV=production npm test -- --testNamePattern=\"cloud functions service\" --watchAll=false)",
      "Bash(NODE_ENV=production npx expo start --web --port 8082)",
      "Bash(NODE_ENV=production npx expo start --web --port 8083)",
      "Bash(gcloud services enable:*)",
      "Bash(gcloud:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_click",
      "Bash(adb:*)",
      "Bash(emulator:*)",
      "Bash(python3:*)",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_close",
      "mcp__playwright__browser_resize",
      "Bash(GOOGLE_APPLICATION_CREDENTIALS=\"\" npx tsx src/setup-test.ts)",
      "mcp__playwright__browser_handle_dialog",
      "mcp__playwright__browser_tab_new",
      "WebFetch(domain:console.firebase.google.com)",
      "Bash(ANDROID_HOME=/home/yoshiori/Android/Sdk adb shell input keyevent KEYCODE_MENU)",
      "Bash(timeout 10s curl -s http://localhost:8081/status)",
      "Bash(ANDROID_HOME=/home/yoshiori/Android/Sdk npx expo start --localhost)",
      "Bash(ANDROID_HOME=/home/yoshiori/Android/Sdk npx expo start --tunnel)",
      "Bash(ANDROID_HOME=/home/yoshiori/Android/Sdk npx expo start --localhost --no-dev-client)",
      "Bash(ANDROID_HOME=/home/yoshiori/Android/Sdk adb shell am start -n host.exp.exponent/host.exp.exponent.LauncherActivity)",
      "Bash(ANDROID_HOME=/home/yoshiori/Android/Sdk npx expo start -c)",
      "Bash(ANDROID_HOME=/home/yoshiori/Android/Sdk adb shell am start -a android.intent.action.VIEW -d \"exp://127.0.0.1:8081\" -n host.exp.exponent/.MainActivity)",
      "Bash(ANDROID_HOME=/home/yoshiori/Android/Sdk adb shell pm list packages)",
      "Bash(ANDROID_HOME=/home/yoshiori/Android/Sdk adb shell am start -n host.exp.exponent/.LauncherActivity)",
      "Bash(timeout:*)",
      "Bash(ANDROID_HOME=/home/yoshiori/Android/Sdk adb shell dumpsys activity activities)",
      "Bash(ANDROID_HOME=/home/yoshiori/Android/Sdk adb devices)",
      "Bash(pgrep:*)",
      "Bash(ANDROID_HOME=/home/yoshiori/Android/Sdk npx expo start --android)",
      "Bash(ANDROID_HOME=/home/yoshiori/Android/Sdk adb logcat -s ReactNativeJS:* ExpoRouter:*)",
      "Bash(ANDROID_HOME=/home/yoshiori/Android/Sdk npx expo start --clear --android)",
      "mcp__playwright__browser_install",
      "Bash(~/Android/Sdk/platform-tools/adb devices)",
      "Bash(~/Android/Sdk/emulator/emulator -list-avds)",
      "Bash(~/Android/Sdk/platform-tools/adb:*)",
      "Bash(EXPO_DEBUG=true npx expo start --clear)",
      "Bash(DEBUG=*)",
      "Bash(java:*)",
      "Bash(rg:*)",
      "Bash(HUSKY=0 npm ci)",
      "Bash(CI=true npx is-ci)",
      "Bash(HUSKY=0 npm install --no-fund)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": ["playwright"]
}
