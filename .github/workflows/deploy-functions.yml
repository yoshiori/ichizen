name: Deploy Cloud Functions

on:
  push:
    branches: [ main ]
    paths:
      - 'functions/**'
      - 'firestore.rules'
      - 'firestore.indexes.json'
      - '.github/workflows/deploy-functions.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'functions/**'
      - 'firestore.rules'
      - 'firestore.indexes.json'

permissions:
  contents: read
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: |
        cd functions
        npm ci

    - name: Run ESLint
      run: |
        cd functions
        npm run lint

    - name: Build TypeScript
      run: |
        cd functions
        npm run build

    - name: Run tests (if available)
      run: |
        cd functions
        npm test --if-present

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: Install dependencies
      run: |
        cd functions
        npm ci

    - name: Build TypeScript
      run: |
        cd functions
        npm run build

    - name: Authenticate to Firebase
      env:
        FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
      run: |
        # Debug: Check if secret exists
        if [ -z "$FIREBASE_SERVICE_ACCOUNT" ]; then
          echo "❌ FIREBASE_SERVICE_ACCOUNT secret is empty or not set"
          echo "Available secrets check:"
          echo "Length of FIREBASE_SERVICE_ACCOUNT: ${#FIREBASE_SERVICE_ACCOUNT}"
          exit 1
        fi
        
        echo "🔐 Using service account key for authentication"
        echo "✅ FIREBASE_SERVICE_ACCOUNT secret found (length: ${#FIREBASE_SERVICE_ACCOUNT})"
        
        # Create service account key file
        echo "$FIREBASE_SERVICE_ACCOUNT" > "$HOME/gcloud-service-key.json"
        export GOOGLE_APPLICATION_CREDENTIALS="$HOME/gcloud-service-key.json"
        echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcloud-service-key.json" >> $GITHUB_ENV
        
        # Verify the file was created properly
        if [ -f "$HOME/gcloud-service-key.json" ]; then
          echo "✅ Service account key file created successfully"
          # Check if it's valid JSON
          if jq . "$HOME/gcloud-service-key.json" > /dev/null 2>&1; then
            echo "✅ Service account key is valid JSON"
          else
            echo "❌ Service account key is not valid JSON"
            exit 1
          fi
        else
          echo "❌ Failed to create service account key file"
          exit 1
        fi

    - name: Deploy to Firebase
      run: |
        echo "🚀 Deploying to Firebase..."
        echo "🔐 Using service account: $GOOGLE_APPLICATION_CREDENTIALS"
        echo "💾 Cloud Billing API enabled"
        
        # Test Firebase authentication first
        echo "🔍 Testing Firebase authentication..."
        firebase projects:list --project ichizen-daily-good-deeds
        
        # Run deploy with verbose logging
        echo "🚀 Starting deployment with verbose logging..."
        FIREBASE_DEPLOY_AGENT=github-actions firebase deploy --only functions --project ichizen-daily-good-deeds --debug

    - name: Deployment notification
      if: success()
      run: |
        echo "🚀 Cloud Functions deployed successfully!"
        echo "📊 Functions URL: https://asia-northeast1-ichizen-daily-good-deeds.cloudfunctions.net"
    
    - name: Deployment failure notification
      if: failure()
      run: |
        echo "❌ Cloud Functions deployment failed!"
        exit 1