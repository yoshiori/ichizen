name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build and Test
    timeout-minutes: 15
    runs-on: ubuntu-latest
    env:
      # Optional: Turborepo remote cache tokens (works without them)
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build all packages
        run: npm run build

      - name: Run all tests
        run: npm run test

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run typecheck

      - name: Check formatting
        run: npm run format:check

  mobile-specific:
    name: Mobile App Tests
    timeout-minutes: 20
    runs-on: ubuntu-latest
    needs: build-and-test
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build mobile app
        run: npm run mobile:build

      - name: Run mobile tests
        run: npm run mobile:test

  functions-specific:
    name: Cloud Functions Tests
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: build-and-test
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build functions
        run: npm run functions:build

      - name: Run functions tests
        run: npm run functions:test

      - name: Functions type check
        run: npm run functions:typecheck

  deploy-functions:
    name: Deploy Cloud Functions
    timeout-minutes: 10
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [build-and-test, functions-specific]
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Check if functions changed
        id: functions-changes
        run: |
          echo "Checking for changes in functions..."

          # Check if functions-related files have changed
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          echo "Changed files: $CHANGED_FILES"

          if echo "$CHANGED_FILES" | grep -E "(^apps/functions/|^firestore\.|^firebase\.json|\.github/workflows/)" > /dev/null; then
            echo "Functions-related changes detected"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "No functions-related changes detected"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Install Firebase CLI
        if: steps.functions-changes.outputs.changed == 'true'
        run: npm install -g firebase-tools

      - name: Authenticate to Firebase
        if: steps.functions-changes.outputs.changed == 'true'
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          if [ -z "$FIREBASE_SERVICE_ACCOUNT" ]; then
            echo "❌ FIREBASE_SERVICE_ACCOUNT secret is empty or not set"
            exit 1
          fi

          echo "🔐 Using service account key for authentication"
          echo "$FIREBASE_SERVICE_ACCOUNT" > "$HOME/gcloud-service-key.json"
          export GOOGLE_APPLICATION_CREDENTIALS="$HOME/gcloud-service-key.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcloud-service-key.json" >> $GITHUB_ENV

          if jq . "$HOME/gcloud-service-key.json" > /dev/null 2>&1; then
            echo "✅ Service account key is valid JSON"
          else
            echo "❌ Service account key is not valid JSON"
            exit 1
          fi

      - name: Deploy Cloud Functions with Turbo
        if: steps.functions-changes.outputs.changed == 'true'
        run: |
          echo "🚀 Deploying Cloud Functions using Turbo..."
          echo "📊 Functions changed, running deployment"

          # Set Firebase project for the deployment
          export FIREBASE_PROJECT=ichizen-daily-good-deeds
          export FIREBASE_DEPLOY_AGENT=github-actions

          # Run the turbo-managed deploy task
          npm run functions:deploy

      - name: Skip deployment
        if: steps.functions-changes.outputs.changed == 'false'
        run: |
          echo "⏭️ No functions-related changes detected, skipping deployment"

      - name: Deployment success notification
        if: steps.functions-changes.outputs.changed == 'true' && success()
        run: |
          echo "🚀 Cloud Functions deployed successfully using Turbo!"
          echo "📊 Functions URL: https://asia-northeast1-ichizen-daily-good-deeds.cloudfunctions.net"

      - name: Deployment failure notification
        if: steps.functions-changes.outputs.changed == 'true' && failure()
        run: |
          echo "❌ Cloud Functions deployment failed!"
          exit 1
